# 构建阶段
FROM node:20-alpine AS builder

# 设置工作目录
WORKDIR /app

# 安装系统依赖
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git

# 配置 npm
RUN npm config set registry https://registry.npmmirror.com/ && \
    npm config set fetch-retries 5 && \
    npm config set fetch-retry-mintimeout 20000 && \
    npm config set fetch-retry-maxtimeout 120000

# 复制 package.json 和 tsconfig 文件
COPY server/package*.json server/tsconfig*.json ./

# 安装依赖
RUN npm install --legacy-peer-deps --force && \
    npm cache clean --force

# 复制所有源代码和配置文件
COPY server/src ./src
COPY server/locales ./locales
COPY server/mt4 ./mt4
COPY server/.env ./.env
COPY server/.eslintrc.json ./.eslintrc.json
COPY server/knexfile.ts ./knexfile.ts

# 创建类型声明文件
RUN mkdir -p dist/types && \
    cp -r src/types/* dist/types/

# 构建应用
RUN npm run build

# 生产阶段
FROM node:20-alpine

# 安装系统依赖
RUN apk add --no-cache \
    python3 \
    make \
    gcc \
    g++ \
    curl \
    musl-dev \
    ca-certificates \
    openssl && \
    update-ca-certificates

# 设置工作目录
WORKDIR /app

# 复制构建产物和依赖
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/.env ./.env
COPY --from=builder /app/knexfile.ts ./knexfile.ts

# 设置最高权限
RUN chmod -R 777 /app

# 暴露端口
EXPOSE 4000

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s \
  CMD curl -f http://localhost:4000/health || exit 1

# 启动应用
CMD ["npm", "start"] 