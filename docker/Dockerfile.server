# 构建阶段
FROM node:20-alpine AS builder

# 设置工作目录
WORKDIR /app

# 安装系统依赖
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git

# 设置 npm 配置
RUN npm config set fetch-retries 5 && \
    npm config set registry https://registry.npmmirror.com

# 复制 package.json 和 tsconfig.json
COPY server/package.json server/tsconfig.json ./

# 安装依赖
RUN npm install --legacy-peer-deps && \
    npm install --save-dev @types/express @types/node

# 复制所有源代码和类型文件
COPY server/src ./src
COPY server/types ./types
COPY server/models ./models
COPY server/services ./services
COPY server/controllers ./controllers
COPY server/routes ./routes
COPY server/middleware ./middleware
COPY server/validations ./validations
COPY server/clients ./clients
COPY server/engine ./engine

# 设置权限
RUN chmod -R 755 src types models services controllers routes middleware validations clients engine

# 构建应用
RUN npm run build

# 生产阶段
FROM node:20-alpine

# 设置工作目录
WORKDIR /app

# 安装系统依赖
RUN apk add --no-cache \
    python3 \
    make \
    gcc \
    g++ \
    curl \
    musl-dev \
    ca-certificates \
    openssl

# 更新证书
RUN update-ca-certificates

# 复制构建产物
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/.env ./.env
COPY --from=builder /app/prisma ./prisma
COPY --from=builder /app/types ./types

# 设置环境变量
ENV NODE_ENV=production

# 设置目录权限
RUN chown -R node:node /app && \
    chmod -R 755 /app

# 切换到非root用户
USER node

# 暴露端口
EXPOSE 3001

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s \
  CMD curl -f http://localhost:3001/health || exit 1

# 启动应用
CMD ["npm", "start"] 