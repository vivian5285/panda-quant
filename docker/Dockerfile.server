# 使用 Node.js 20 作为基础镜像
FROM node:20-alpine AS builder

# 设置工作目录
WORKDIR /app

# 安装系统依赖
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git

# 配置 npm
RUN npm config set fetch-retries 5 && \
    npm config set registry https://registry.npmmirror.com

# 复制 package.json 和 tsconfig 文件
COPY server/package.json server/tsconfig.json server/tsconfig.node.json ./

# 安装依赖
RUN npm install --legacy-peer-deps && \
    npm install --save-dev @types/express @types/node @types/express-serve-static-core @types/serve-static

# 复制源代码
COPY server/src ./src
COPY server/locales ./locales
COPY server/mt4 ./mt4
COPY server/.env ./.env
COPY server/.eslintrc.json ./.eslintrc.json
COPY server/knexfile.ts ./knexfile.ts

# 设置目录权限
RUN chmod -R 755 src locales mt4

# 生成类型定义文件
RUN npm run build:types

# 构建应用
RUN npm run build || (cat /app/npm-debug.log && exit 1)

# 生产阶段
FROM node:20-alpine

# 安装系统依赖
RUN apk add --no-cache \
    python3 \
    make \
    gcc \
    g++ \
    curl \
    musl-dev \
    ca-certificates \
    openssl

# 更新证书
RUN update-ca-certificates

# 设置工作目录
WORKDIR /app

# 复制构建产物和依赖
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/.env ./.env
COPY --from=builder /app/knexfile.ts ./knexfile.ts

# 设置目录权限
RUN chown -R node:node /app && \
    chmod -R 755 /app

# 切换到非root用户
USER node

# 设置环境变量
ENV NODE_ENV=production

# 暴露端口
EXPOSE 3000

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s \
  CMD curl -f http://localhost:3000/health || exit 1

# 启动命令
CMD ["node", "dist/index.js"] 