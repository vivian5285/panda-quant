user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    sendfile on;
    keepalive_timeout 65;
    
    # 启用 gzip 压缩
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_vary on;
    
    # 用户端 API 服务器
    upstream user-api {
        server localhost:8083;
    }
    
    # 用户端 UI 服务器
    upstream user-ui {
        server user-ui:8082;
    }
    
    # 用户端域名配置
    server {
        listen 80;
        server_name pandatrade.space;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name pandatrade.space;

        # SSL证书配置
        ssl_certificate /etc/letsencrypt/live/pandatrade.space/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/pandatrade.space/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/pandatrade.space/chain.pem;

        # SSL优化配置
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # HSTS配置
        add_header Strict-Transport-Security "max-age=63072000" always;

        # 前端应用
        location / {
            root /var/www/user-ui;
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache";
        }

        # API代理
        location /api {
            proxy_pass http://user-api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # 用户API域名配置
    server {
        listen 80;
        server_name api.pandatrade.space;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name api.pandatrade.space;

        # SSL证书配置
        ssl_certificate /etc/letsencrypt/live/api.pandatrade.space/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.pandatrade.space/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/api.pandatrade.space/chain.pem;

        # SSL优化配置
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # HSTS配置
        add_header Strict-Transport-Security "max-age=63072000" always;

        # API代理
        location / {
            proxy_pass http://user-api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
} 