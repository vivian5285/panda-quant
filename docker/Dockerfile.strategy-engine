FROM node:18-slim AS builder

USER root

WORKDIR /app

RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/*

RUN npm install -g typescript@5.3.3 && \
    chmod -R 777 /usr/local/bin && \
    chmod -R 777 /usr/local/lib/node_modules

COPY package.json package-lock.json ./

RUN npm install --legacy-peer-deps --no-audit

RUN mkdir -p src/types && \
    echo 'import { Document } from "mongoose";\n\
import { Schema } from "mongoose";\n\
\n\
export interface IUser extends Document {\n\
  _id: string;\n\
  username: string;\n\
  email: string;\n\
  password: string;\n\
  role: string;\n\
  createdAt: Date;\n\
  updatedAt: Date;\n\
}\n\
\n\
export interface IStrategy extends Document {\n\
  _id: string;\n\
  userId: string;\n\
  name: string;\n\
  description: string;\n\
  code: string;\n\
  status: string;\n\
  createdAt: Date;\n\
  updatedAt: Date;\n\
}\n\
\n\
export interface IOrder extends Document {\n\
  _id: string;\n\
  strategyId: string;\n\
  type: string;\n\
  symbol: string;\n\
  quantity: number;\n\
  price: number;\n\
  status: string;\n\
  createdAt: Date;\n\
}\n\
\n\
export interface ICommission extends Document {\n\
  _id: string;\n\
  orderId: string;\n\
  amount: number;\n\
  currency: string;\n\
  createdAt: Date;\n\
}\n\
\n\
export interface IAlert extends Document {\n\
  _id: string;\n\
  userId: string;\n\
  type: string;\n\
  message: string;\n\
  timestamp: Date;\n\
}\n\
\n\
export interface IBlacklistEntry extends Document {\n\
  _id: string;\n\
  type: string;\n\
  address: string;\n\
  reason: string;\n\
  createdAt: Date;\n\
}\n\
\n\
export interface INetworkStatus extends Document {\n\
  _id: string;\n\
  type: string;\n\
  network: string;\n\
  status: string;\n\
  lastChecked: Date;\n\
}\n\
\n\
export interface IStrategyPerformance extends Document {\n\
  _id: string;\n\
  strategyId: string;\n\
  metrics: {\n\
    totalReturn: number;\n\
    sharpeRatio: number;\n\
    maxDrawdown: number;\n\
    winRate: number;\n\
  };\n\
  period: {\n\
    start: Date;\n\
    end: Date;\n\
  };\n\
  createdAt: Date;\n\
}' > src/types/index.ts

RUN echo '{\n\
  "compilerOptions": {\n\
    "target": "es2018",\n\
    "module": "commonjs",\n\
    "lib": ["es2018", "esnext.asynciterable"],\n\
    "skipLibCheck": true,\n\
    "sourceMap": true,\n\
    "outDir": "./dist",\n\
    "moduleResolution": "node",\n\
    "removeComments": true,\n\
    "noImplicitAny": false,\n\
    "strictNullChecks": false,\n\
    "strictFunctionTypes": false,\n\
    "noImplicitThis": false,\n\
    "noUnusedLocals": false,\n\
    "noUnusedParameters": false,\n\
    "noImplicitReturns": false,\n\
    "noFallthroughCasesInSwitch": false,\n\
    "allowSyntheticDefaultImports": true,\n\
    "esModuleInterop": true,\n\
    "emitDecoratorMetadata": true,\n\
    "experimentalDecorators": true,\n\
    "resolveJsonModule": true,\n\
    "baseUrl": ".",\n\
    "paths": {\n\
      "@/*": ["src/*"]\n\
    }\n\
  },\n\
  "exclude": ["node_modules", "dist"],\n\
  "include": ["src/**/*.ts", "src/**/*.tsx"]\n\
}' > tsconfig.json

COPY . .

RUN chmod -R 777 /app

RUN npm pkg set scripts.build="tsc --skipLibCheck"

RUN echo "构建应用..." && \
    npm run build

FROM node:18-slim

USER root

WORKDIR /app

RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

RUN chmod -R 777 /app

EXPOSE 3002

HEALTHCHECK --interval=30s --timeout=3s \
  CMD curl -f http://localhost:3002/health || exit 1

CMD ["node", "dist/index.js"] 