version: '3.8'

services:
  admin-api:
    build:
      context: ../admin-api
      dockerfile: ../docker/Dockerfile.admin-api
      args:
        - NODE_ENV=production
    container_name: panda-quant-admin-api
    restart: always
    ports:
      - "${ADMIN_API_PORT}:${ADMIN_API_PORT}"
    environment:
      - NODE_ENV=production
      - PORT=${ADMIN_API_PORT}
      - MONGODB_URI=${MONGODB_ADMIN_URI}
      - REDIS_URI=${REDIS_ADMIN_URL}
      - POSTGRES_URI=postgresql://${DB_USERNAME}:${DB_PASSWORD}@postgres:${DB_PORT}/${DB_NAME}
    networks:
      - panda-quant-network
    depends_on:
      - mongodb
      - redis
      - postgres
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${ADMIN_API_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  admin-ui:
    build:
      context: ../admin-ui
      dockerfile: ../docker/Dockerfile.admin-ui
      args:
        - NODE_ENV=production
    container_name: panda-quant-admin-ui
    restart: always
    ports:
      - "${ADMIN_UI_PORT}:80"
    environment:
      - NODE_ENV=production
      - PORT=80
      - API_URL=http://admin-api:${ADMIN_API_PORT}
    networks:
      - panda-quant-network
    depends_on:
      - admin-api
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:latest
    container_name: panda-quant-mongodb
    ports:
      - "${MONGODB_ADMIN_PORT}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    networks:
      - panda-quant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:alpine
    container_name: panda-quant-redis
    ports:
      - "${REDIS_ADMIN_PORT}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - panda-quant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:latest
    container_name: panda-quant-postgres
    ports:
      - "${DB_PORT}:5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - panda-quant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
  redis_data:
  postgres_data:

networks:
  panda-quant-network:
    driver: bridge 