version: '3.8'

services:
  admin-ui:
    build:
      context: ..
      dockerfile: docker/Dockerfile.admin-ui
    container_name: panda-quant-admin-ui
    ports:
      - "8084:80"
    restart: always
    networks:
      - panda-quant-network
    depends_on:
      admin-api:
        condition: service_healthy
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    user: "nginx:nginx"

  admin-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.admin-api
    container_name: panda-quant-admin-api
    ports:
      - "8081:8081"
    restart: always
    networks:
      - panda-quant-network
    environment:
      - MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/admin
      - REDIS_URI=redis://:${REDIS_PASSWORD}@redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    depends_on:
      mongodb:
        condition: service_started
      redis:
        condition: service_started
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  mongodb:
    image: mongo:latest
    container_name: panda-quant-mongodb
    ports:
      - "27017:27017"
    restart: always
    networks:
      - panda-quant-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    user: "999:999"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  redis:
    image: redis:alpine
    container_name: panda-quant-redis
    ports:
      - "6380:6379"
    restart: always
    networks:
      - panda-quant-network
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    user: "999:999"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

networks:
  panda-quant-network:
    driver: bridge
    name: panda-quant-network

volumes:
  mongodb_data:
  redis_data: 