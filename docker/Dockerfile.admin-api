FROM node:18-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git \
    curl

# Install TypeScript globally
RUN npm install -g typescript@5.4.2

# Copy package files first to leverage Docker cache
COPY admin-api/package*.json ./
COPY admin-api/tsconfig.json ./

# Install all dependencies
RUN npm install --legacy-peer-deps

# Set permissions for TypeScript
RUN chmod -R 777 /usr/local/bin/tsc

# Copy source code
COPY admin-api/ ./

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine

WORKDIR /app

# Install curl for healthcheck
RUN apk add --no-cache curl

# Copy built files from builder
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package*.json ./

# Set environment variables
ENV NODE_ENV=production
ENV PORT=8081

# Expose the application port
EXPOSE 8081

# Add health check
HEALTHCHECK --interval=30s --timeout=3s \
  CMD curl -f http://localhost:8081/health || exit 1

# Start the application
CMD ["node", "dist/index.js"] 