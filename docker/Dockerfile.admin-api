FROM node:18-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git \
    curl

# Install TypeScript globally
RUN npm install -g typescript

# Copy package files first to leverage Docker cache
COPY admin-api/package*.json ./
COPY admin-api/tsconfig.json ./

# Install dependencies
RUN npm install --legacy-peer-deps && \
    npm install --save-dev \
    @types/bcrypt \
    @types/bcryptjs \
    @types/cors \
    @types/express \
    @types/jsonwebtoken \
    @types/node \
    @types/passport \
    @types/passport-jwt \
    @types/passport-local \
    @types/validator \
    @typescript-eslint/eslint-plugin \
    @typescript-eslint/parser \
    eslint \
    eslint-config-prettier \
    eslint-plugin-prettier \
    prettier \
    ts-node \
    typescript \
    @types/d3-array \
    @types/d3-color \
    @types/d3-ease \
    @types/d3-interpolate \
    @types/d3-path \
    @types/d3-scale \
    @types/d3-shape \
    @types/d3-time \
    @types/d3-timer \
    @types/babel__core@7.1.20 \
    @types/babel__generator@7.6.8 \
    @types/babel__template@7.4.4 \
    @types/babel__traverse@7.20.5 \
    @types/graceful-fs@4.1.6 \
    @types/istanbul-lib-coverage@2.0.4 \
    @types/istanbul-lib-report@3.0.0 \
    @types/istanbul-reports@3.0.1 \
    @types/jest@29.5.11 \
    @types/nodemailer@6.4.14 \
    @types/react-dom@18.2.18 \
    @types/stack-utils@2.0.3 \
    @types/yargs-parser@21.0.0 \
    @types/yargs@17.0.32

# Install production dependencies
RUN npm install --save \
    @prisma/client \
    axios \
    bcrypt \
    cors \
    dotenv \
    express \
    jsonwebtoken \
    passport \
    passport-jwt \
    passport-local \
    validator \
    mongoose \
    redis \
    winston

# Set permissions for TypeScript
RUN chmod -R 777 /usr/local/bin/tsc

# Copy source code
COPY admin-api/ ./

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine

WORKDIR /app

# Install curl for healthcheck
RUN apk add --no-cache curl

# Copy built files from builder
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package*.json ./

# Set environment variables
ENV NODE_ENV=production
ENV PORT=8081

# Expose the application port
EXPOSE 8081

# Add health check
HEALTHCHECK --interval=30s --timeout=3s \
  CMD curl -f http://localhost:8081/health || exit 1

# Start the application
CMD ["npm", "start"] 