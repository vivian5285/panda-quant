# 构建阶段
FROM node:18-alpine AS builder

# 设置工作目录
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git \
    curl

# Install TypeScript and Vite globally
RUN npm install -g typescript vite terser

# Copy admin-ui source code
COPY admin-ui/package*.json ./
COPY admin-ui/ ./

# Install dependencies and type declarations
RUN npm install --legacy-peer-deps && \
    npm install --save-dev \
    @types/react \
    @types/react-dom \
    @types/react-router-dom \
    @types/react-i18next \
    @types/date-fns \
    @types/recharts \
    @types/socket.io-client \
    @types/antd \
    @types/i18next-browser-languagedetector \
    @types/react-toastify \
    @types/node \
    @types/jest \
    @typescript-eslint/eslint-plugin \
    @typescript-eslint/parser \
    eslint \
    eslint-plugin-react \
    eslint-plugin-react-hooks \
    jest \
    ts-jest \
    ts-node \
    @vitejs/plugin-react \
    vite \
    vite-plugin-svgr \
    vitest \
    terser && \
    npm install @mui/material@5.15.14 @mui/icons-material@5.15.14 @mui/x-data-grid@6.19.5 @mui/x-date-pickers@6.19.5 --legacy-peer-deps

# Set permissions for TypeScript and Vite
RUN chmod -R 777 /usr/local/bin/tsc && \
    chmod -R 777 /usr/local/bin/vite

# Build the application
RUN npm run build

# 生产阶段
FROM nginx:alpine

# Copy built files from builder
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY deploy/nginx/admin.conf /etc/nginx/conf.d/default.conf

# Add health check
HEALTHCHECK --interval=30s --timeout=3s \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/ || exit 1

# 暴露端口
EXPOSE 8080

# 启动 Nginx
CMD ["nginx", "-g", "daemon off;"] 