# 构建阶段
FROM node:18-alpine AS builder

# 设置工作目录
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git \
    curl

# Install TypeScript and Vite globally
RUN npm install -g typescript@5.3.3 vite@5.1.4 terser@5.27.1

# Copy package files first to leverage Docker cache
COPY admin-ui/package*.json ./
COPY admin-ui/tsconfig.json ./

# Install all dependencies
RUN npm install --legacy-peer-deps

# Set permissions for TypeScript and Vite
RUN chmod -R 777 /usr/local/bin/tsc && \
    chmod -R 777 /usr/local/bin/vite

# Copy source code
COPY admin-ui/. .

# Build the application
RUN npm run build

# 生产阶段
FROM nginx:stable

# Install necessary packages
RUN apt-get update && apt-get install -y \
    wget \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Create default configuration file
RUN echo 'server { \
    listen 80; \
    server_name localhost; \
    \
    root /usr/share/nginx/html; \
    index index.html; \
    \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
    \
    location /api { \
        proxy_pass http://admin-api:8081; \
        proxy_http_version 1.1; \
        proxy_set_header Upgrade $http_upgrade; \
        proxy_set_header Connection "upgrade"; \
        proxy_set_header Host $host; \
        proxy_cache_bypass $http_upgrade; \
        proxy_set_header X-Real-IP $remote_addr; \
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto $scheme; \
    } \
    \
    # 健康检查 \
    location /health { \
        access_log off; \
        add_header Content-Type text/plain; \
        return 200 "healthy\n"; \
    } \
}' > /etc/nginx/conf.d/default.conf

# Copy built files
COPY --from=builder /app/dist /usr/share/nginx/html

# Create necessary directories with correct permissions
RUN mkdir -p /var/cache/nginx /var/run/nginx \
    && chown -R nginx:nginx /var/cache/nginx /var/run/nginx \
    && chmod -R 755 /var/cache/nginx /var/run/nginx

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"] 