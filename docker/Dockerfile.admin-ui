# 构建阶段
FROM node:20-alpine AS builder

# 设置工作目录
WORKDIR /app

# 复制 package.json 和 package-lock.json
COPY package*.json ./

# 安装依赖和 TypeScript
RUN npm install --legacy-peer-deps && \
    npm install -g typescript@latest && \
    npm install @mui/x-data-grid@latest && \
    npm install web-vitals@2.1.4 && \
    chmod +x /usr/local/bin/tsc

# 创建 tsconfig.json
RUN echo '{\
  "compilerOptions": {\
    "target": "es5",\
    "lib": ["dom", "dom.iterable", "esnext"],\
    "allowJs": true,\
    "skipLibCheck": true,\
    "esModuleInterop": true,\
    "allowSyntheticDefaultImports": true,\
    "strict": true,\
    "forceConsistentCasingInFileNames": true,\
    "noFallthroughCasesInSwitch": true,\
    "module": "esnext",\
    "moduleResolution": "node",\
    "resolveJsonModule": true,\
    "isolatedModules": true,\
    "noEmit": true,\
    "jsx": "react-jsx",\
    "noUnusedLocals": false,\
    "noUnusedParameters": false,\
    "noImplicitAny": false,\
    "strictNullChecks": false,\
    "paths": {\
      "@/*": ["src/*"]\
    }\
  },\
  "include": ["src"],\
  "exclude": ["node_modules"]\
}' > tsconfig.json

# 创建类型声明文件
RUN echo 'declare module "@mui/x-data-grid";\
declare module "web-vitals" {\
  export function onCLS(callback: (metric: any) => void): void;\
  export function onFID(callback: (metric: any) => void): void;\
  export function onFCP(callback: (metric: any) => void): void;\
  export function onLCP(callback: (metric: any) => void): void;\
  export function onTTFB(callback: (metric: any) => void): void;\
}\
declare module "@mui/material/styles/createTypography" {\
  export interface TypographyVariantsOptions {\
    [key: string]: any;\
  }\
}' > src/types.d.ts

# 复制源代码
COPY . .

# 构建应用
RUN npm run build

# 生产阶段
FROM nginx:alpine

# 复制构建产物
COPY --from=builder /app/dist /usr/share/nginx/html

# 创建默认的 Nginx 配置
RUN echo 'server { \
    listen 80; \
    server_name localhost; \
    root /usr/share/nginx/html; \
    index index.html; \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
    location /api { \
        proxy_pass http://admin-api:3001; \
        proxy_http_version 1.1; \
        proxy_set_header Upgrade $http_upgrade; \
        proxy_set_header Connection "upgrade"; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto $scheme; \
    } \
}' > /etc/nginx/conf.d/default.conf

# 暴露端口
EXPOSE 80

# 启动 Nginx
CMD ["nginx", "-g", "daemon off;"] 