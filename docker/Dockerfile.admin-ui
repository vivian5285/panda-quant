# 构建阶段
FROM node:18-alpine AS builder

# 设置工作目录
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git \
    curl

# Install TypeScript and Vite globally
RUN npm install -g typescript@5.3.3 vite@5.1.4 terser@5.27.1

# Copy package files first to leverage Docker cache
COPY admin-ui/package*.json ./
COPY admin-ui/tsconfig.json ./

# Install dependencies and type declarations
RUN npm install --legacy-peer-deps && \
    npm install --save-dev \
    @types/react@18.2.55 \
    @types/react-dom@18.2.19 \
    @types/react-router-dom@5.3.3 \
    @types/react-i18next@13.5.0 \
    @types/date-fns@2.6.0 \
    @types/recharts@1.8.29 \
    @types/socket.io-client@1.4.36 \
    @types/antd@1.0.0 \
    @types/i18next-browser-languagedetector@7.2.2 \
    @types/react-toastify@4.1.0 \
    @types/node@20.11.19 \
    @types/jest@29.5.12 \
    @typescript-eslint/eslint-plugin@7.0.1 \
    @typescript-eslint/parser@7.0.1 \
    eslint@8.56.0 \
    eslint-plugin-react@7.33.2 \
    eslint-plugin-react-hooks@4.6.0 \
    jest@29.7.0 \
    ts-jest@29.1.2 \
    ts-node@10.9.2 \
    @vitejs/plugin-react@4.2.1 \
    vite@5.1.4 \
    vite-plugin-svgr@4.2.0 \
    vitest@1.2.2 \
    terser@5.27.1

# Install production dependencies
RUN npm install --save \
    @mui/material@5.15.14 \
    @mui/icons-material@5.15.14 \
    @mui/x-data-grid@6.19.5 \
    @mui/x-date-pickers@6.19.5 \
    framer-motion@10.18.0 \
    --legacy-peer-deps

# Set permissions for TypeScript and Vite
RUN chmod -R 777 /usr/local/bin/tsc && \
    chmod -R 777 /usr/local/bin/vite

# Copy source code
COPY admin-ui/. .

# Build the application
RUN npm run build

# 生产阶段
FROM nginx:alpine

# Copy built files from builder
COPY --from=builder /app/dist /usr/share/nginx/html

# Create default configuration file
RUN echo 'server { \
    listen 3000; \
    server_name localhost; \
    \
    root /usr/share/nginx/html; \
    index index.html; \
    \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
    \
    location /api { \
        proxy_pass http://admin-api:3001; \
        proxy_http_version 1.1; \
        proxy_set_header Upgrade $http_upgrade; \
        proxy_set_header Connection "upgrade"; \
        proxy_set_header Host $host; \
        proxy_cache_bypass $http_upgrade; \
        proxy_set_header X-Real-IP $remote_addr; \
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto $scheme; \
    } \
    \
    # 健康检查 \
    location /health { \
        access_log off; \
        return 200 "healthy\n"; \
    } \
}' > /etc/nginx/conf.d/default.conf

# Add health check
HEALTHCHECK --interval=30s --timeout=3s \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000/ || exit 1

# 暴露端口
EXPOSE 3000

# 启动 Nginx
CMD ["nginx", "-g", "daemon off;"] 