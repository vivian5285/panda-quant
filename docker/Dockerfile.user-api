FROM node:18-slim AS builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install TypeScript globally
RUN npm install -g typescript

# Copy package files
COPY user-api/package*.json ./
COPY user-api/tsconfig.json ./
COPY user-api/prisma ./prisma/

# Install dependencies
RUN npm install --legacy-peer-deps

# Install type declarations and dev dependencies
RUN npm install --save-dev \
    @types/bcrypt \
    @types/bcryptjs \
    @types/cors \
    @types/express \
    @types/jest \
    @types/jsonwebtoken \
    @types/mongoose \
    @types/morgan \
    @types/node \
    @types/node-cron \
    @types/node-schedule \
    @types/nodemailer \
    @types/pg \
    @types/swagger-ui-express \
    jest \
    mongodb-memory-server \
    nodemon \
    prisma \
    swagger-ui-express \
    ts-node \
    typescript

# Install production dependencies
RUN npm install --save \
    @prisma/client \
    axios \
    bcrypt \
    bcryptjs \
    class-transformer \
    class-validator \
    cors \
    dotenv \
    ethers \
    express \
    express-rate-limit \
    helmet \
    jsonwebtoken \
    mongoose \
    morgan \
    nanoid \
    node-cron \
    node-schedule \
    nodemailer \
    pg \
    winston \
    zod

# Set permissions for TypeScript
RUN chmod -R 777 /usr/local/bin/tsc

# Copy source code
COPY user-api/. .

# Set permissions for Prisma
RUN chmod -R 777 /app/node_modules/.bin/prisma
RUN chmod -R 777 /app/node_modules/prisma
RUN chmod -R 777 /app/node_modules/@prisma/client

# Generate Prisma client
RUN /app/node_modules/.bin/prisma generate

# Build the application
RUN npm run build

# Production stage
FROM node:18-slim

WORKDIR /app

# Install curl for healthcheck
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Copy built files from builder
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/prisma ./prisma

# Install production dependencies
RUN npm install --production --legacy-peer-deps

# Set permissions for Prisma
RUN chmod -R 777 /app/node_modules/.bin/prisma
RUN chmod -R 777 /app/node_modules/prisma
RUN chmod -R 777 /app/node_modules/@prisma/client

# Set environment variables
ENV NODE_ENV=production
ENV PORT=8083

# Expose the application port
EXPOSE 8083

# Add health check
HEALTHCHECK --interval=30s --timeout=3s \
  CMD curl -f http://localhost:8083/health || exit 1

# Start the application
CMD ["npm", "start"] 