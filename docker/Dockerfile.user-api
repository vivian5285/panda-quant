# 使用 Node.js 20 作为基础镜像
FROM node:20-alpine AS builder

# 设置工作目录
WORKDIR /app

# 配置阿里云镜像源
RUN echo "https://mirrors.aliyun.com/alpine/v3.19/main" > /etc/apk/repositories && \
    echo "https://mirrors.aliyun.com/alpine/v3.19/community" >> /etc/apk/repositories

# 安装系统依赖（添加重试机制）
RUN for i in $(seq 1 3); do \
        apk add --no-cache \
            python3 \
            make \
            gcc \
            g++ \
            curl \
            musl-dev && break || sleep 5; \
    done

# 设置 npm 配置
RUN npm config set registry https://registry.npmmirror.com/ && \
    npm config set network-timeout 300000

# 安装全局依赖
RUN npm install -g typescript@5.3.3

# 复制 package.json 和 package-lock.json
COPY user-api/package.json user-api/package-lock.json ./

# 安装项目依赖
RUN npm install --legacy-peer-deps --no-audit

# 复制源代码
COPY user-api/ .

# 设置目录权限
RUN chown -R node:node /app && \
    chmod -R 755 /app

# 切换到非root用户
USER node

# 构建应用
RUN npm run build

# 生产阶段
FROM node:20-alpine

# 设置工作目录
WORKDIR /app

# 配置阿里云镜像源
RUN echo "https://mirrors.aliyun.com/alpine/v3.19/main" > /etc/apk/repositories && \
    echo "https://mirrors.aliyun.com/alpine/v3.19/community" >> /etc/apk/repositories

# 安装系统依赖（添加重试机制）
RUN for i in $(seq 1 3); do \
        apk add --no-cache \
            python3 \
            make \
            gcc \
            g++ \
            curl \
            musl-dev && break || sleep 5; \
    done

# 复制构建产物
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/.env ./.env

# 设置目录权限
RUN chown -R node:node /app && \
    chmod -R 755 /app

# 切换到非root用户
USER node

# 暴露端口
EXPOSE 3001

# 启动应用
CMD ["node", "dist/index.js"] 