FROM node:18-slim as builder

# 使用 root 用户
USER root

# 设置工作目录
WORKDIR /app

# 设置构建参数
ARG NODE_ENV=production

# 安装必要的系统依赖
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/*

# 全局安装 TypeScript 和 Vite
RUN npm install -g typescript@5.3.3 vite@5.1.4 rollup@4.9.6 && \
    chmod -R 777 /usr/local/bin/tsc && \
    chmod -R 777 /usr/local/lib/node_modules/typescript && \
    chmod -R 777 /usr/local/lib/node_modules/vite && \
    chmod -R 777 /usr/local/lib/node_modules/rollup

# 复制 package.json 和 package-lock.json
COPY package*.json ./

# 安装依赖
RUN npm install --legacy-peer-deps --no-audit --unsafe-perm && \
    npm install vite@5.1.4 rollup@4.9.6 @emotion/is-prop-valid@1.2.1 --save-dev --unsafe-perm

# 复制源代码
COPY . .

# 设置目录权限
RUN chmod -R 777 /app

# 构建应用
RUN npm run build

# 使用 Nginx 作为生产环境的基础镜像
FROM nginx:alpine

# 使用 root 用户
USER root

# 复制构建产物到 Nginx 目录
COPY --from=builder /app/dist /usr/share/nginx/html

# 复制 Nginx 配置文件
COPY nginx.conf /etc/nginx/conf.d/default.conf

# 设置 Nginx 目录权限
RUN chmod -R 777 /usr/share/nginx/html && \
    chmod -R 777 /etc/nginx/conf.d

# 暴露 80 端口
EXPOSE 80

# 启动 Nginx
CMD ["nginx", "-g", "daemon off;"] 