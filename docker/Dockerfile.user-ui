# 使用完整版 Node.js 18 作为基础镜像
FROM node:18-slim AS builder

# 设置工作目录
WORKDIR /app

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/*

# 设置 npm 配置
RUN npm config set registry https://registry.npmjs.org/

# 复制 package.json 和 package-lock.json
COPY package*.json ./

# 清理并重新安装依赖
RUN rm -rf node_modules package-lock.json && \
    npm cache clean --force && \
    npm install --legacy-peer-deps --no-audit && \
    npm install --save-dev vite@5.1.4 && \
    npm install --save-dev rollup@3.29.4 && \
    npm install --save-dev @types/node@20.5.0 && \
    npm install --save-dev @types/react@18.2.0 && \
    npm install --save-dev @types/react-dom@18.2.0 && \
    npm install --save-dev @types/react-router-dom@5.3.3 && \
    npm install --save-dev typescript@5.3.3 --force && \
    npm install --save @emotion/react@11.11.3 && \
    npm install --save @emotion/styled@11.11.0 && \
    npm rebuild

# 复制源代码
COPY . .

# 设置目录权限
RUN chown -R node:node /app

# 切换到非root用户
USER node

# 修改构建脚本
RUN npm pkg set scripts.build="tsc && vite build"

# 构建应用
RUN echo "构建应用..." && \
    npm run build

# 使用 Nginx 作为生产环境的基础镜像
FROM nginx:alpine

# 复制构建产物到 Nginx 目录
COPY --from=builder /app/dist /usr/share/nginx/html

# 创建 Nginx 配置文件
RUN echo 'server {\n\
    listen 80;\n\
    server_name localhost;\n\
\n\
    # Root directory and index files\n\
    root /usr/share/nginx/html;\n\
    index index.html index.htm;\n\
\n\
    # Gzip compression\n\
    gzip on;\n\
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;\n\
\n\
    # Security headers\n\
    add_header X-Frame-Options "SAMEORIGIN";\n\
    add_header X-XSS-Protection "1; mode=block";\n\
    add_header X-Content-Type-Options "nosniff";\n\
\n\
    # Cache static assets\n\
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {\n\
        expires 1y;\n\
        add_header Cache-Control "public, no-transform";\n\
    }\n\
\n\
    # Handle React Router\n\
    location / {\n\
        try_files $uri $uri/ /index.html;\n\
    }\n\
\n\
    # API proxy\n\
    location /api {\n\
        proxy_pass http://user-api:3000;\n\
        proxy_http_version 1.1;\n\
        proxy_set_header Upgrade $http_upgrade;\n\
        proxy_set_header Connection "upgrade";\n\
        proxy_set_header Host $host;\n\
        proxy_cache_bypass $http_upgrade;\n\
    }\n\
\n\
    # Error pages\n\
    error_page 404 /index.html;\n\
    error_page 500 502 503 504 /50x.html;\n\
    location = /50x.html {\n\
        root /usr/share/nginx/html;\n\
    }\n\
}' > /etc/nginx/conf.d/default.conf

# 设置目录权限
RUN chown -R nginx:nginx /usr/share/nginx/html

# 暴露端口
EXPOSE 80

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s \
  CMD curl -f http://localhost/ || exit 1

# 启动命令
CMD ["nginx", "-g", "daemon off;"] 