version: '3.8'

services:
  strategy:
    build:
      context: ../strategy
      dockerfile: ../docker/Dockerfile.strategy
      args:
        - NODE_ENV=production
        - SKIP_TYPE_CHECK=true
    container_name: panda-quant-strategy
    restart: always
    user: root
    privileged: true
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
      - MONGODB_URI=mongodb://admin:Wl528586*@mongodb:27017/admin
      - REDIS_URI=redis://:Wl528586*@redis:6379
      - POSTGRES_URI=postgresql://admin:Wl528586*@postgres:5432/panda_quant
    networks:
      - panda-quant-network
    depends_on:
      - mongodb
      - redis
      - postgres
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx-strategy:
    image: nginx:1.25.3-alpine
    container_name: panda-quant-nginx-strategy
    restart: always
    user: root
    privileged: true
    ports:
      - "80:80"
    volumes:
      - ../nginx/strategy.conf:/etc/nginx/conf.d/default.conf
      - ../nginx/ssl:/etc/nginx/ssl
    networks:
      - panda-quant-network
    depends_on:
      - strategy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:latest
    container_name: panda-quant-mongodb
    user: root
    privileged: true
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    networks:
      - panda-quant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:alpine
    container_name: panda-quant-redis
    user: root
    privileged: true
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - panda-quant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:latest
    container_name: panda-quant-postgres
    user: root
    privileged: true
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - panda-quant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
  redis_data:
  postgres_data:

networks:
  panda-quant-network:
    driver: bridge 