{"version":3,"file":"index-41c94f73.js","sources":["../../src/contexts/Web3Context.tsx","../../src/services/api.ts","../../src/contexts/AuthContext.tsx","../../src/theme/index.ts","../../src/theme.ts","../../src/contexts/ThemeContext.tsx","../../src/contexts/BackgroundContext.tsx","../../src/contexts/NotificationContext.tsx","../../src/i18n.ts","../../src/components/common/GlobalBackground.tsx","../../src/pages/Login.tsx","../../src/animations.ts","../../src/pages/Register.tsx","../../src/hooks/useWeb3.ts","../../src/components/dashboard/AssetOverview.tsx","../../src/components/common/GradientTitle.tsx","../../src/components/common/UserNavbar.tsx","../../src/components/common/Navbar.tsx","../../src/components/home/CoreAdvantages.tsx","../../src/components/home/HeroSection.tsx","../../src/components/home/FeaturesSection.tsx","../../src/components/home/HowItWorks.tsx","../../src/components/home/SecuritySection.tsx","../../src/components/home/UserReviews.tsx","../../src/components/home/InviteSection.tsx","../../src/components/home/SupportSection.tsx","../../src/components/home/Footer.tsx","../../src/components/home/PandaCharacter.tsx","../../src/components/home/StrategySection.tsx","../../src/components/home/ProfitSection.tsx","../../src/components/Breadcrumbs.tsx","../../src/components/Layout.tsx","../../src/config.ts","../../src/services/dashboardService.ts","../../src/components/common/PandaAlert.tsx","../../src/components/common/PandaProgress.tsx","../../src/components/common/PandaCard.tsx","../../src/components/common/PandaTable.tsx","../../src/components/charts/StrategyReturnDistribution.tsx","../../src/components/charts/RiskMetricsRadar.tsx","../../src/components/charts/TradeFrequencyHeatmap.tsx","../../src/components/charts/PerformanceChart.tsx","../../src/components/charts/AssetDistributionChart.tsx","../../src/pages/Dashboard.tsx","../../src/pages/HomePage.tsx","../../src/components/PrivateRoute.tsx","../../src/components/common/ResourceLayout.tsx","../../src/components/AuthLayout.tsx","../../src/pages/StrategyManagement.tsx","../../src/pages/StrategyDetail.tsx","../../src/components/common/PandaButton.tsx","../../src/components/common/PandaChip.tsx","../../src/pages/ApiManagement.tsx","../../src/pages/ApiSecuritySettings.tsx","../../src/pages/AccountSettings.tsx","../../src/components/common/StyledCard.tsx","../../src/pages/Profile.tsx","../../src/pages/TwoFactorAuth.tsx","../../src/pages/Deposit.tsx","../../src/components/common/PandaInput.tsx","../../src/components/common/PandaSelect.tsx","../../src/pages/Withdraw.tsx","../../src/contexts/WebSocketContext.tsx","../../src/pages/MessageCenter.tsx","../../src/utils/axiosInstance.ts","../../src/pages/MessageDetail.tsx","../../src/pages/Invite.tsx","../../src/pages/ReferralRewards.tsx","../../src/pages/ReferralLink.tsx","../../src/pages/NotFound.tsx","../../src/pages/About.tsx","../../src/pages/about/team.tsx","../../src/pages/news.tsx","../../src/pages/about/contact.tsx","../../src/pages/about/partners.tsx","../../src/pages/company/careers.tsx","../../src/pages/legal/disclaimer.tsx","../../src/pages/legal/privacy.tsx","../../src/pages/legal/terms.tsx","../../src/pages/legal/risk.tsx","../../src/pages/resources/help.tsx","../../src/pages/resources/blog.tsx","../../src/pages/resources/community.tsx","../../src/pages/product/index.tsx","../../src/pages/product/pricing.tsx","../../src/pages/product/api.tsx","../../src/pages/product/quant.tsx","../../src/pages/product/strategies.tsx","../../src/pages/product/profit.tsx","../../src/pages/resources/changelog.tsx","../../src/pages/legal/cookies.tsx","../../src/config/routes.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\n\r\ninterface Web3ContextType {\r\n  account: string | null;\r\n  balance: string | null;\r\n  isConnected: boolean;\r\n  connect: () => Promise<void>;\r\n  disconnect: () => void;\r\n}\r\n\r\nconst Web3Context = createContext<Web3ContextType | null>(null);\r\n\r\nexport const Web3Provider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [account, setAccount] = useState<string | null>(null);\r\n  const [balance, setBalance] = useState<string | null>(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  const connect = async () => {\r\n    try {\r\n      if (typeof window.ethereum === 'undefined') {\r\n        throw new Error('Please install MetaMask');\r\n      }\r\n\r\n      const provider = new ethers.BrowserProvider(window.ethereum);\r\n      const accounts = await provider.send('eth_requestAccounts', []);\r\n      const signer = await provider.getSigner();\r\n      const balance = await provider.getBalance(accounts[0]);\r\n\r\n      setAccount(accounts[0]);\r\n      setBalance(ethers.formatEther(balance));\r\n      setIsConnected(true);\r\n    } catch (error) {\r\n      console.error('Error connecting to wallet:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const disconnect = () => {\r\n    setAccount(null);\r\n    setBalance(null);\r\n    setIsConnected(false);\r\n  };\r\n\r\n  return (\r\n    <Web3Context.Provider\r\n      value={{\r\n        account,\r\n        balance,\r\n        isConnected,\r\n        connect,\r\n        disconnect,\r\n      }}\r\n    >\r\n      {children}\r\n    </Web3Context.Provider>\r\n  );\r\n};\r\n\r\nexport const useWeb3 = () => {\r\n  const context = useContext(Web3Context);\r\n  if (!context) {\r\n    throw new Error('useWeb3 must be used within a Web3Provider');\r\n  }\r\n  return context;\r\n}; ","import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 添加请求拦截器，自动添加 token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 添加响应拦截器，处理 token 过期等情况\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token 过期或无效，清除本地存储并重定向到登录页\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport interface LoginResponse {\r\n  message: string;\r\n  token: string;\r\n  user: {\r\n    _id: string;\r\n    email: string;\r\n    username?: string;\r\n    walletAddress?: string;\r\n    role: string;\r\n    status: string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n  };\r\n}\r\n\r\nexport interface LoginRequest {\r\n  emailOrUsername: string;\r\n  password: string;\r\n}\r\n\r\nexport const authApi = {\r\n  register: async (email: string, password: string, username: string, code: string) => {\r\n    const response = await api.post('/auth/register', {\r\n      email,\r\n      password,\r\n      username,\r\n      code\r\n    });\r\n    return response.data;\r\n  },\r\n  \r\n  login: async (email: string, password: string) => {\r\n    const response = await api.post('/auth/login', {\r\n      email,\r\n      password,\r\n    });\r\n    return response.data;\r\n  },\r\n  \r\n  logout: async () => {\r\n    const response = await api.post('/auth/logout');\r\n    return response.data;\r\n  },\r\n  \r\n  getProfile: async () => {\r\n    const response = await api.get('/auth/me');\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api; ","import React, { createContext, useContext, useState, useCallback, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useWeb3 } from './Web3Context';\r\nimport { authApi } from '../services/api';\r\n\r\ninterface User {\r\n  id?: string;\r\n  email?: string;\r\n  address?: string;\r\n  role?: string;\r\n  username?: string;\r\n  avatar?: string;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  isAuthenticated: boolean;\r\n  user: User | null;\r\n  loginWithEmail: (email: string, password: string) => Promise<void>;\r\n  loginWithWallet: (walletType: string) => Promise<void>;\r\n  register: (email: string, password: string, username: string, code: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | null>(null);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\r\n    const token = localStorage.getItem('token');\r\n    return !!token;\r\n  });\r\n  const [user, setUser] = useState<User | null>(() => {\r\n    const userStr = localStorage.getItem('user');\r\n    return userStr ? JSON.parse(userStr) : null;\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { t } = useTranslation();\r\n  const web3 = useWeb3();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const userStr = localStorage.getItem('user');\r\n    if (token && userStr) {\r\n      setIsAuthenticated(true);\r\n      setUser(JSON.parse(userStr));\r\n    }\r\n  }, []);\r\n\r\n  const loginWithEmail = useCallback(async (email: string, password: string) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      // TODO: Implement email login logic with API call\r\n      const mockUser: User = {\r\n        id: '1',\r\n        email,\r\n        role: 'user',\r\n        username: email.split('@')[0],\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n      };\r\n      localStorage.setItem('token', 'mock-token');\r\n      localStorage.setItem('user', JSON.stringify(mockUser));\r\n      setIsAuthenticated(true);\r\n      setUser(mockUser);\r\n    } catch (err) {\r\n      setError(t('auth.loginError'));\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [t]);\r\n\r\n  const loginWithWallet = useCallback(async (walletType: string) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      await web3.connect(walletType);\r\n      const address = await web3.getAddress();\r\n      const mockUser: User = {\r\n        id: '2',\r\n        address,\r\n        role: 'user',\r\n        username: `${address.slice(0, 6)}...${address.slice(-4)}`,\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n      };\r\n      localStorage.setItem('token', 'mock-token');\r\n      localStorage.setItem('user', JSON.stringify(mockUser));\r\n      setIsAuthenticated(true);\r\n      setUser(mockUser);\r\n    } catch (err) {\r\n      setError(t('auth.walletLoginError'));\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [web3, t]);\r\n\r\n  const register = useCallback(async (email: string, password: string, username: string, code: string) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await authApi.register(email, password, username, code);\r\n      \r\n      localStorage.setItem('token', response.token);\r\n      localStorage.setItem('user', JSON.stringify(response.user));\r\n      setIsAuthenticated(true);\r\n      setUser(response.user);\r\n    } catch (err: any) {\r\n      const errorMessage = err.response?.data?.message || err.message || t('auth.registerError');\r\n      setError(errorMessage);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [t]);\r\n\r\n  const logout = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      // TODO: Implement logout logic with API call\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n    } catch (err) {\r\n      setError(t('auth.logoutError'));\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [t]);\r\n\r\n  const value: AuthContextType = {\r\n    isAuthenticated,\r\n    user,\r\n    loginWithEmail,\r\n    loginWithWallet,\r\n    register,\r\n    logout,\r\n    loading,\r\n    error,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext; ","import { createTheme, ThemeOptions, Palette, PaletteColor } from '@mui/material/styles';\r\nimport type { TypographyOptions } from '@mui/material/styles/createTypography';\r\nimport { alpha } from '@mui/material/styles';\r\n\r\n// 主题颜色\r\ninterface ThemeColors {\r\n  primary: PaletteColor;\r\n  secondary: PaletteColor;\r\n  background: {\r\n    default: string;\r\n    paper: string;\r\n  };\r\n  text: {\r\n    primary: string;\r\n    secondary: string;\r\n  };\r\n  card: {\r\n    main: string;\r\n    border: string;\r\n  };\r\n  border: {\r\n    main: string;\r\n  };\r\n  accent: PaletteColor;\r\n  success: PaletteColor;\r\n  warning: PaletteColor;\r\n  error: PaletteColor;\r\n}\r\n\r\n// 扩展 Material-UI 的 Palette 类型\r\ndeclare module '@mui/material/styles' {\r\n  interface Palette {\r\n    card: ThemeColors['card'];\r\n    border: ThemeColors['border'];\r\n    accent: PaletteColor;\r\n  }\r\n  interface PaletteOptions {\r\n    card?: ThemeColors['card'];\r\n    border?: ThemeColors['border'];\r\n    accent?: PaletteColor;\r\n  }\r\n}\r\n\r\n// 主题配置\r\nconst themeConfig = {\r\n  light: {\r\n    primary: {\r\n      main: '#00FFB8',\r\n      light: '#33FFC6',\r\n      dark: '#00CC93',\r\n      contrastText: '#000000',\r\n    },\r\n    secondary: {\r\n      main: '#00CCFF',\r\n      light: '#33D6FF',\r\n      dark: '#00A3CC',\r\n      contrastText: '#000000',\r\n    },\r\n    background: {\r\n      default: '#FFFFFF',\r\n      paper: '#F8F9FA',\r\n    },\r\n    text: {\r\n      primary: '#333333',\r\n      secondary: '#666666',\r\n    },\r\n    card: {\r\n      main: '#FFFFFF',\r\n      border: 'rgba(0, 0, 0, 0.1)',\r\n    },\r\n    border: {\r\n      main: 'rgba(0, 0, 0, 0.1)',\r\n    },\r\n    accent: {\r\n      main: '#FF4D4D',\r\n      light: '#FF7A7A',\r\n      dark: '#CC3D3D',\r\n      contrastText: '#FFFFFF',\r\n    },\r\n    success: {\r\n      main: '#00CC93',\r\n      light: '#33D6A8',\r\n      dark: '#00A375',\r\n      contrastText: '#FFFFFF',\r\n    },\r\n    warning: {\r\n      main: '#FFB800',\r\n      light: '#FFC633',\r\n      dark: '#CC9300',\r\n      contrastText: '#000000',\r\n    },\r\n    error: {\r\n      main: '#FF4D4D',\r\n      light: '#FF7A7A',\r\n      dark: '#CC3D3D',\r\n      contrastText: '#FFFFFF',\r\n    },\r\n  },\r\n  dark: {\r\n    primary: {\r\n      main: '#00FFB8',\r\n      light: '#33FFC6',\r\n      dark: '#00CC93',\r\n      contrastText: '#000000',\r\n    },\r\n    secondary: {\r\n      main: '#00CCFF',\r\n      light: '#33D6FF',\r\n      dark: '#00A3CC',\r\n      contrastText: '#000000',\r\n    },\r\n    background: {\r\n      default: '#121212',\r\n      paper: '#1E1E1E',\r\n    },\r\n    text: {\r\n      primary: '#FFFFFF',\r\n      secondary: '#B0B0B0',\r\n    },\r\n    card: {\r\n      main: '#1E1E1E',\r\n      border: 'rgba(255, 255, 255, 0.1)',\r\n    },\r\n    border: {\r\n      main: 'rgba(255, 255, 255, 0.1)',\r\n    },\r\n    accent: {\r\n      main: '#FF4D4D',\r\n      light: '#FF7A7A',\r\n      dark: '#CC3D3D',\r\n      contrastText: '#FFFFFF',\r\n    },\r\n    success: {\r\n      main: '#00CC93',\r\n      light: '#33D6A8',\r\n      dark: '#00A375',\r\n      contrastText: '#FFFFFF',\r\n    },\r\n    warning: {\r\n      main: '#FFB800',\r\n      light: '#FFC633',\r\n      dark: '#CC9300',\r\n      contrastText: '#000000',\r\n    },\r\n    error: {\r\n      main: '#FF4D4D',\r\n      light: '#FF7A7A',\r\n      dark: '#CC3D3D',\r\n      contrastText: '#FFFFFF',\r\n    },\r\n  },\r\n};\r\n\r\n// 过渡配置\r\nconst transitions = {\r\n  duration: {\r\n    shortest: 150,\r\n    shorter: 200,\r\n    short: 250,\r\n    standard: 300,\r\n    complex: 375,\r\n    enteringScreen: 225,\r\n    leavingScreen: 195,\r\n  },\r\n  easing: {\r\n    easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\r\n    easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\r\n    easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\r\n    sharp: 'cubic-bezier(0.4, 0, 0.6, 1)',\r\n  },\r\n};\r\n\r\n// 排版配置\r\nconst typography: TypographyOptions = {\r\n  fontFamily: '\"PingFang SC\", \"Microsoft YaHei\", sans-serif',\r\n  h1: {\r\n    fontSize: '2.5rem',\r\n    fontWeight: 700,\r\n    lineHeight: 1.2,\r\n  },\r\n  h2: {\r\n    fontSize: '2rem',\r\n    fontWeight: 700,\r\n    lineHeight: 1.2,\r\n  },\r\n  h3: {\r\n    fontSize: '1.75rem',\r\n    fontWeight: 600,\r\n    lineHeight: 1.2,\r\n  },\r\n  h4: {\r\n    fontSize: '1.5rem',\r\n    fontWeight: 600,\r\n    lineHeight: 1.2,\r\n  },\r\n  h5: {\r\n    fontSize: '1.25rem',\r\n    fontWeight: 600,\r\n    lineHeight: 1.2,\r\n  },\r\n  h6: {\r\n    fontSize: '1rem',\r\n    fontWeight: 600,\r\n    lineHeight: 1.2,\r\n  },\r\n  body1: {\r\n    fontSize: '1rem',\r\n    lineHeight: 1.5,\r\n  },\r\n  body2: {\r\n    fontSize: '0.875rem',\r\n    lineHeight: 1.5,\r\n  },\r\n  button: {\r\n    textTransform: 'none',\r\n    fontWeight: 600,\r\n  },\r\n};\r\n\r\nexport const createCustomTheme = (mode: 'light' | 'dark' = 'light') => {\r\n  const colors = mode === 'light' ? themeConfig.light : themeConfig.dark;\r\n\r\n  const themeOptions: ThemeOptions = {\r\n    palette: {\r\n      mode,\r\n      primary: colors.primary,\r\n      secondary: colors.secondary,\r\n      background: colors.background,\r\n      text: colors.text,\r\n      card: colors.card,\r\n      border: colors.border,\r\n      accent: colors.accent,\r\n      success: colors.success,\r\n      warning: colors.warning,\r\n      error: colors.error,\r\n    },\r\n    typography,\r\n    transitions,\r\n    components: {\r\n      MuiCssBaseline: {\r\n        styleOverrides: {\r\n          '*': {\r\n            margin: 0,\r\n            padding: 0,\r\n            boxSizing: 'border-box',\r\n          },\r\n          html: {\r\n            WebkitFontSmoothing: 'antialiased',\r\n            MozOsxFontSmoothing: 'grayscale',\r\n            height: '100%',\r\n            width: '100%',\r\n          },\r\n          body: {\r\n            height: '100%',\r\n          },\r\n          '#root': {\r\n            height: '100%',\r\n          },\r\n          '::-webkit-scrollbar': {\r\n            width: '8px',\r\n            height: '8px',\r\n          },\r\n          '::-webkit-scrollbar-track': {\r\n            background: colors.background.paper,\r\n          },\r\n          '::-webkit-scrollbar-thumb': {\r\n            background: colors.border.main,\r\n            borderRadius: '4px',\r\n            '&:hover': {\r\n              background: colors.text.secondary,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      MuiButton: {\r\n        defaultProps: {\r\n          disableElevation: true,\r\n          variant: 'contained',\r\n        },\r\n        styleOverrides: {\r\n          root: {\r\n            borderRadius: '8px',\r\n            padding: '8px 16px',\r\n            fontSize: '1rem',\r\n            fontWeight: 600,\r\n            textTransform: 'none',\r\n            transition: 'all 0.2s ease',\r\n          },\r\n          contained: {\r\n            backgroundColor: colors.primary.main,\r\n            color: colors.primary.contrastText,\r\n            boxShadow: 'none',\r\n            '&:hover': {\r\n              backgroundColor: colors.primary.dark,\r\n              boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\r\n            },\r\n            '&:active': {\r\n              backgroundColor: colors.primary.dark,\r\n              boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)',\r\n            },\r\n          },\r\n        },\r\n      },\r\n      MuiCard: {\r\n        styleOverrides: {\r\n          root: {\r\n            borderRadius: '16px',\r\n            background: mode === 'light' \r\n              ? 'rgba(255, 255, 255, 0.8)'\r\n              : 'rgba(30, 30, 30, 0.8)',\r\n            backdropFilter: 'blur(10px)',\r\n            border: `1px solid ${colors.border.main}`,\r\n            transition: 'all 0.3s ease',\r\n            '&:hover': {\r\n              transform: 'translateY(-4px)',\r\n              boxShadow: '0 8px 24px rgba(0, 0, 0, 0.1)',\r\n            },\r\n          },\r\n        },\r\n      },\r\n      MuiPaper: {\r\n        styleOverrides: {\r\n          root: {\r\n            backgroundImage: 'none',\r\n          },\r\n        },\r\n      },\r\n      MuiTypography: {\r\n        styleOverrides: {\r\n          h1: {\r\n            background: `linear-gradient(45deg, ${colors.primary.main} 30%, ${colors.secondary.main} 90%)`,\r\n            WebkitBackgroundClip: 'text',\r\n            WebkitTextFillColor: 'transparent',\r\n            fontWeight: 700,\r\n          },\r\n          h2: {\r\n            background: `linear-gradient(45deg, ${colors.primary.main} 30%, ${colors.secondary.main} 90%)`,\r\n            WebkitBackgroundClip: 'text',\r\n            WebkitTextFillColor: 'transparent',\r\n            fontWeight: 700,\r\n          },\r\n        },\r\n      },\r\n      MuiTextField: {\r\n        styleOverrides: {\r\n          root: {\r\n            '& .MuiOutlinedInput-root': {\r\n              borderRadius: '12px',\r\n              transition: 'all 0.3s ease',\r\n              '&:hover': {\r\n                '& .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: colors.primary.main,\r\n                },\r\n              },\r\n              '&.Mui-focused': {\r\n                '& .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: colors.primary.main,\r\n                  borderWidth: '2px',\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return createTheme(themeOptions);\r\n};\r\n\r\n// 导出主题工具函数\r\nexport const themeUtils = {\r\n  animationConfig: {\r\n    duration: {\r\n      short: 0.2,\r\n      medium: 0.4,\r\n      long: 0.6\r\n    },\r\n    easing: {\r\n      easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\r\n      easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\r\n      easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\r\n      sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\r\n    }\r\n  },\r\n  createGradient: (color1: string, color2: string) => {\r\n    return `linear-gradient(135deg, ${color1} 0%, ${color2} 100%)`;\r\n  },\r\n  textStyles: typography,\r\n  cardStyle: {\r\n    borderRadius: '12px',\r\n    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\r\n    transition: 'all 0.2s ease',\r\n    '&:hover': {\r\n      boxShadow: '0 8px 24px rgba(0, 0, 0, 0.15)',\r\n    },\r\n  },\r\n  buttonStyles: {\r\n    contained: {\r\n      backgroundColor: themeConfig.light.primary.main,\r\n      color: themeConfig.light.primary.contrastText,\r\n      '&:hover': {\r\n        backgroundColor: themeConfig.light.primary.dark,\r\n      },\r\n    },\r\n    outlined: {\r\n      borderColor: themeConfig.light.primary.main,\r\n      color: themeConfig.light.primary.main,\r\n      '&:hover': {\r\n        backgroundColor: alpha(themeConfig.light.primary.main, 0.1),\r\n      },\r\n    },\r\n    text: {\r\n      color: themeConfig.light.primary.main,\r\n      '&:hover': {\r\n        backgroundColor: alpha(themeConfig.light.primary.main, 0.1),\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\n// 导出主题实例\r\nexport const lightTheme = createCustomTheme('light');\r\nexport const darkTheme = createCustomTheme('dark');\r\n\r\nexport type { ThemeColors }; ","import { Theme, createTheme, ThemeOptions } from '@mui/material/styles';\r\nimport { PaletteColor } from '@mui/material/styles/createPalette';\r\nimport { themeUtils } from './theme/index';\r\n\r\nexport { themeUtils };\r\n\r\nexport const createCustomTheme = (mode: 'light' | 'dark' = 'light') => {\r\n  return createTheme({\r\n    palette: {\r\n      mode,\r\n      primary: {\r\n        main: '#00FFB8',\r\n        light: '#33FFC6',\r\n        dark: '#00B282',\r\n        contrastText: '#000000',\r\n      },\r\n      secondary: {\r\n        main: '#FF00B8',\r\n        light: '#FF33C6',\r\n        dark: '#B20082',\r\n        contrastText: '#FFFFFF',\r\n      },\r\n      background: {\r\n        default: mode === 'light' ? '#F5F5F5' : '#121212',\r\n        paper: mode === 'light' ? '#FFFFFF' : '#1E1E1E',\r\n      },\r\n    },\r\n    typography: {\r\n      fontFamily: 'Roboto, sans-serif',\r\n      h1: themeUtils.textStyles.h1,\r\n      h2: themeUtils.textStyles.h2,\r\n      h3: themeUtils.textStyles.h3,\r\n      h4: themeUtils.textStyles.h4,\r\n      h5: themeUtils.textStyles.h5,\r\n      h6: themeUtils.textStyles.h6,\r\n      body1: themeUtils.textStyles.body1,\r\n      body2: themeUtils.textStyles.body2,\r\n    },\r\n    components: {\r\n      MuiCard: {\r\n        styleOverrides: {\r\n          root: themeUtils.cardStyle,\r\n        },\r\n      },\r\n      MuiButton: {\r\n        styleOverrides: {\r\n          contained: {\r\n            ...themeUtils.buttonStyles.contained,\r\n            variants: [],\r\n          },\r\n          outlined: {\r\n            ...themeUtils.buttonStyles.outlined,\r\n            variants: [],\r\n          },\r\n          text: {\r\n            ...themeUtils.buttonStyles.text,\r\n            variants: [],\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n}; ","import React, { createContext, useContext, useState, useMemo, Component, ErrorInfo, ReactNode } from 'react';\r\nimport { ThemeProvider as MUIThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { createCustomTheme } from '../theme';\r\n\r\ninterface ThemeContextType {\r\n  mode: 'light' | 'dark';\r\n  toggleTheme: () => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nclass ErrorBoundary extends Component<\r\n  { children: ReactNode },\r\n  { hasError: boolean; error: Error | null }\r\n> {\r\n  constructor(props: { children: ReactNode }) {\r\n    super(props);\r\n    this.state = { hasError: false, error: null };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    console.error('ThemeProvider Error:', error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div style={{ padding: '20px', color: 'red' }}>\r\n          <h2>Something went wrong in ThemeProvider</h2>\r\n          <pre>{this.state.error?.toString()}</pre>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport const ThemeProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [mode, setMode] = useState<'light' | 'dark'>('light');\r\n\r\n  const theme = useMemo(() => {\r\n    try {\r\n      console.log('Creating theme with mode:', mode);\r\n      const newTheme = createCustomTheme(mode);\r\n      console.log('Theme created successfully:', {\r\n        palette: newTheme.palette,\r\n        typography: newTheme.typography,\r\n        transitions: newTheme.transitions,\r\n        components: Object.keys(newTheme.components || {})\r\n      });\r\n      return newTheme;\r\n    } catch (error) {\r\n      console.error('Error creating theme:', error);\r\n      // 返回一个基本的主题作为后备\r\n      return createCustomTheme('light');\r\n    }\r\n  }, [mode]);\r\n\r\n  const toggleTheme = () => {\r\n    setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  const value = useMemo(() => ({ mode, toggleTheme }), [mode]);\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <ThemeContext.Provider value={value}>\r\n        <MUIThemeProvider theme={theme}>\r\n          <CssBaseline />\r\n          {children}\r\n        </MUIThemeProvider>\r\n      </ThemeContext.Provider>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};","import React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\ntype BackgroundTheme = 'light' | 'dark' | 'gradient';\r\n\r\ninterface BackgroundContextType {\r\n  backgroundTheme: BackgroundTheme;\r\n  setBackgroundTheme: (theme: BackgroundTheme) => void;\r\n}\r\n\r\nconst BackgroundContext = createContext<BackgroundContextType | undefined>(undefined);\r\n\r\nexport const BackgroundProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [backgroundTheme, setBackgroundTheme] = useState<BackgroundTheme>('gradient');\r\n\r\n  return (\r\n    <BackgroundContext.Provider value={{ backgroundTheme, setBackgroundTheme }}>\r\n      {children}\r\n    </BackgroundContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useBackgroundContext = () => {\r\n  const context = useContext(BackgroundContext);\r\n  if (context === undefined) {\r\n    throw new Error('useBackgroundContext must be used within a BackgroundProvider');\r\n  }\r\n  return context;\r\n}; ","import React, { createContext, useContext, useState, ReactNode } from 'react';\r\nimport { Alert, Snackbar } from '@mui/material';\r\n\r\ninterface NotificationContextType {\r\n  showNotification: (message: string, severity?: 'success' | 'error' | 'info' | 'warning') => void;\r\n}\r\n\r\nconst NotificationContext = createContext<NotificationContextType | null>(null);\r\n\r\nexport const useNotification = () => {\r\n  const context = useContext(NotificationContext);\r\n  if (!context) {\r\n    throw new Error('useNotification must be used within a NotificationProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface NotificationProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const NotificationProvider: React.FC<NotificationProviderProps> = ({ children }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [severity, setSeverity] = useState<'success' | 'error' | 'info' | 'warning'>('info');\r\n\r\n  const showNotification = (msg: string, sev: 'success' | 'error' | 'info' | 'warning' = 'info') => {\r\n    setMessage(msg);\r\n    setSeverity(sev);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <NotificationContext.Provider value={{ showNotification }}>\r\n      {children}\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      >\r\n        <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </NotificationContext.Provider>\r\n  );\r\n}; ","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport Backend from 'i18next-http-backend';\r\n\r\n// Import translations from language-specific directories\r\nimport enTranslation from './i18n/locales/en/translation.json';\r\nimport zhTranslation from './i18n/locales/zh/translation.json';\r\nimport koTranslation from './i18n/locales/ko/translation.json';\r\nimport jaTranslation from './i18n/locales/ja/translation.json';\r\n\r\n// Import zh.json separately since it's in the root\r\nimport zhRoot from './i18n/locales/zh.json';\r\n\r\n// 定义支持的语言类型\r\nexport const supportedLngs = ['en', 'zh', 'zh-CN', 'ko', 'ja'] as const;\r\nexport type SupportedLng = typeof supportedLngs[number];\r\n\r\n// 语言名称映射\r\nexport const languageNames: Record<SupportedLng, string> = {\r\n  en: 'English',\r\n  zh: '中文',\r\n  'zh-CN': '中文',\r\n  ko: '한국어',\r\n  ja: '日本語'\r\n};\r\n\r\n// 初始化 i18n\r\ni18n\r\n  .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources: {\r\n      en: {\r\n        translation: enTranslation\r\n      },\r\n      zh: {\r\n        translation: {\r\n          ...zhRoot,\r\n          ...zhTranslation\r\n        }\r\n      },\r\n      'zh-CN': {\r\n        translation: {\r\n          ...zhRoot,\r\n          ...zhTranslation\r\n        }\r\n      },\r\n      ko: {\r\n        translation: koTranslation\r\n      },\r\n      ja: {\r\n        translation: jaTranslation\r\n      }\r\n    },\r\n    supportedLngs,\r\n    fallbackLng: 'en',\r\n    lng: localStorage.getItem('i18nextLng') || 'zh',\r\n    detection: {\r\n      order: ['localStorage', 'navigator'],\r\n      caches: ['localStorage'],\r\n      lookupLocalStorage: 'i18nextLng'\r\n    },\r\n    interpolation: {\r\n      escapeValue: false,\r\n      format: (value, format) => {\r\n        if (format === 'uppercase') return value.toUpperCase();\r\n        if (format === 'lowercase') return value.toLowerCase();\r\n        return value;\r\n      }\r\n    },\r\n    returnObjects: true,\r\n    react: {\r\n      useSuspense: false,\r\n      bindI18n: 'languageChanged loaded',\r\n      bindI18nStore: 'added removed',\r\n      transEmptyNodeValue: '',\r\n      transSupportBasicHtmlNodes: true,\r\n      transKeepBasicHtmlNodesFor: ['br', 'strong', 'i', 'p'],\r\n    },\r\n    debug: process.env.NODE_ENV === 'development',\r\n    saveMissing: process.env.NODE_ENV === 'development',\r\n    missingKeyHandler: (lngs, ns, key, fallbackValue) => {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.warn(`Missing translation key: ${key} for languages: ${lngs.join(', ')}`);\r\n      }\r\n    },\r\n    parseMissingKeyHandler: (key) => {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.warn(`Missing translation key: ${key}`);\r\n      }\r\n      return key;\r\n    }\r\n  });\r\n\r\n// 语言切换工具函数\r\nexport const changeLanguage = (lng: SupportedLng) => {\r\n  i18n.changeLanguage(lng);\r\n};\r\n\r\n// 获取当前语言\r\nexport const getCurrentLanguage = (): SupportedLng => {\r\n  return (i18n.language as SupportedLng) || 'en';\r\n};\r\n\r\n// 监听语言变化\r\ni18n.on('languageChanged', (lng) => {\r\n  console.log('Language changed to:', lng);\r\n  localStorage.setItem('i18nextLng', lng);\r\n  document.documentElement.lang = lng;\r\n  i18n.emit('loaded');\r\n});\r\n\r\n// 导出 i18n 实例\r\nexport default i18n; ","import React from 'react';\r\nimport { Box } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { useBackgroundContext } from '../../contexts/BackgroundContext';\r\n\r\nconst GlobalBackground: React.FC = () => {\r\n  const { backgroundTheme } = useBackgroundContext();\r\n  const theme = useTheme();\r\n\r\n  const getBackgroundStyle = () => {\r\n    if (backgroundTheme === 'gradient') {\r\n      return 'linear-gradient(135deg, rgba(0, 255, 184, 0.05) 0%, rgba(0, 255, 184, 0.02) 100%)';\r\n    }\r\n    return theme.palette.background.default;\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        zIndex: -1,\r\n        background: getBackgroundStyle(),\r\n        '&::before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          background: 'radial-gradient(circle at center, rgba(0, 255, 184, 0.1) 0%, transparent 70%)',\r\n          opacity: 0.1,\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GlobalBackground; ","import React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNotification } from '../contexts/NotificationContext';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n  InputAdornment,\r\n  useTheme,\r\n  Paper,\r\n  Grid,\r\n  Avatar,\r\n  Divider,\r\n} from '@mui/material';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\r\nimport ShieldIcon from '@mui/icons-material/Shield';\r\nimport { motion } from 'framer-motion';\r\nimport { fadeIn, slideUp } from '../animations';\r\nimport { useTranslation } from 'react-i18next';\r\nimport GlobalBackground from '../components/common/GlobalBackground';\r\n\r\nconst Login = () => {\r\n  const { t } = useTranslation();\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const { loginWithEmail } = useAuth();\r\n  const { showNotification } = useNotification();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      await loginWithEmail(formData.email, formData.password);\r\n      showNotification('登录成功', 'success');\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      showNotification('登录失败，请检查邮箱和密码', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ \r\n      minHeight: '100vh',\r\n      width: '100%',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      py: { xs: 8, md: 12 },\r\n      overflow: 'hidden',\r\n      position: 'relative',\r\n      '&::before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.1) 0%, rgba(0, 0, 0, 0) 100%)',\r\n        zIndex: 0,\r\n      },\r\n    }}>\r\n      <GlobalBackground />\r\n      \r\n      <Container \r\n        maxWidth=\"lg\" \r\n        sx={{ \r\n          position: 'relative', \r\n          zIndex: 1,\r\n          px: { xs: 2, md: 4 }\r\n        }}\r\n      >\r\n        <Grid container spacing={6} alignItems=\"center\">\r\n          <Grid item xs={12} md={6}>\r\n            <motion.div\r\n              initial={{ opacity: 0, x: -50 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              transition={{ duration: 0.8 }}\r\n            >\r\n              <Box sx={{ mb: 4 }}>\r\n                <Typography\r\n                  variant=\"h2\"\r\n                  sx={{\r\n                    fontWeight: 700,\r\n                    mb: 2,\r\n                    background: 'linear-gradient(45deg, #00FFB8 30%, #00B8FF 90%)',\r\n                    WebkitBackgroundClip: 'text',\r\n                    WebkitTextFillColor: 'transparent',\r\n                  }}\r\n                >\r\n                  欢迎回来\r\n                </Typography>\r\n                <Typography variant=\"h5\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n                  登录您的账户，开始智能交易之旅\r\n                </Typography>\r\n              </Box>\r\n              \r\n              <Box sx={{ display: 'flex', gap: 2, mb: 4 }}>\r\n                <Paper\r\n                  elevation={0}\r\n                  sx={{\r\n                    p: 2,\r\n                    flex: 1,\r\n                    textAlign: 'center',\r\n                    background: 'rgba(0, 255, 184, 0.05)',\r\n                    borderRadius: 2,\r\n                    transition: 'all 0.3s',\r\n                    '&:hover': {\r\n                      transform: 'translateY(-4px)',\r\n                      boxShadow: '0 8px 24px rgba(0, 255, 184, 0.1)',\r\n                    },\r\n                  }}\r\n                >\r\n                  <TrendingUpIcon sx={{ fontSize: 40, color: 'primary.main', mb: 1 }} />\r\n                  <Typography variant=\"h6\">智能交易</Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    月化收益50%-300%\r\n                  </Typography>\r\n                </Paper>\r\n                <Paper\r\n                  elevation={0}\r\n                  sx={{\r\n                    p: 2,\r\n                    flex: 1,\r\n                    textAlign: 'center',\r\n                    background: 'rgba(0, 255, 184, 0.05)',\r\n                    borderRadius: 2,\r\n                    transition: 'all 0.3s',\r\n                    '&:hover': {\r\n                      transform: 'translateY(-4px)',\r\n                      boxShadow: '0 8px 24px rgba(0, 255, 184, 0.1)',\r\n                    },\r\n                  }}\r\n                >\r\n                  <ShieldIcon sx={{ fontSize: 40, color: 'primary.main', mb: 1 }} />\r\n                  <Typography variant=\"h6\">安全保障</Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    银行级安全防护\r\n                  </Typography>\r\n                </Paper>\r\n              </Box>\r\n            </motion.div>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <motion.div\r\n              initial={{ opacity: 0, x: 50 }}\r\n              animate={{ opacity: 1, x: 0 }}\r\n              transition={{ duration: 0.8 }}\r\n            >\r\n              <Paper\r\n                elevation={0}\r\n                sx={{\r\n                  p: { xs: 3, md: 4 },\r\n                  borderRadius: 4,\r\n                  background: 'rgba(255, 255, 255, 0.9)',\r\n                  backdropFilter: 'blur(10px)',\r\n                  boxShadow: '0 8px 32px rgba(0, 255, 184, 0.1)',\r\n                }}\r\n              >\r\n                <Box sx={{ textAlign: 'center', mb: 4 }}>\r\n                  <Avatar\r\n                    sx={{\r\n                      width: 80,\r\n                      height: 80,\r\n                      bgcolor: 'primary.main',\r\n                      mb: 2,\r\n                      mx: 'auto',\r\n                    }}\r\n                  >\r\n                    <AccountCircleIcon sx={{ fontSize: 50 }} />\r\n                  </Avatar>\r\n                  <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\r\n                    登录账户\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"邮箱\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                    margin=\"normal\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <EmailIcon color=\"primary\" />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    sx={{ mb: 3 }}\r\n                  />\r\n\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"密码\"\r\n                    name=\"password\"\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    value={formData.password}\r\n                    onChange={handleChange}\r\n                    margin=\"normal\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <LockIcon color=\"primary\" />\r\n                        </InputAdornment>\r\n                      ),\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            onClick={() => setShowPassword(!showPassword)}\r\n                            edge=\"end\"\r\n                          >\r\n                            {showPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    sx={{ mb: 3 }}\r\n                  />\r\n\r\n                  <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                    sx={{\r\n                      py: 1.5,\r\n                      borderRadius: 2,\r\n                      background: 'linear-gradient(45deg, #00FFB8 30%, #00B8FF 90%)',\r\n                      '&:hover': {\r\n                        background: 'linear-gradient(45deg, #00FFB8 40%, #00B8FF 100%)',\r\n                      },\r\n                    }}\r\n                  >\r\n                    {loading ? '登录中...' : '登录'}\r\n                    <ArrowForwardIcon sx={{ ml: 1 }} />\r\n                  </Button>\r\n\r\n                  <Box sx={{ mt: 3, textAlign: 'center' }}>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      还没有账户？{' '}\r\n                      <Link\r\n                        to=\"/register\"\r\n                        style={{\r\n                          color: theme.palette.primary.main,\r\n                          textDecoration: 'none',\r\n                          fontWeight: 600,\r\n                        }}\r\n                      >\r\n                        立即注册\r\n                      </Link>\r\n                    </Typography>\r\n                  </Box>\r\n                </form>\r\n              </Paper>\r\n            </motion.div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login; ","import { Variants } from 'framer-motion';\r\n\r\nexport const fadeIn: Variants = {\r\n  initial: {\r\n    opacity: 0,\r\n  },\r\n  animate: {\r\n    opacity: 1,\r\n    transition: {\r\n      duration: 0.5,\r\n    },\r\n  },\r\n};\r\n\r\nexport const slideUp: Variants = {\r\n  initial: {\r\n    opacity: 0,\r\n    y: 20,\r\n  },\r\n  animate: (index: number) => ({\r\n    opacity: 1,\r\n    y: 0,\r\n    transition: {\r\n      delay: index * 0.1,\r\n      duration: 0.5,\r\n    },\r\n  }),\r\n};\r\n\r\nexport const staggerChildren: Variants = {\r\n  initial: {},\r\n  animate: {\r\n    transition: {\r\n      staggerChildren: 0.1,\r\n    },\r\n  },\r\n};\r\n\r\nexport const scaleIn: Variants = {\r\n  initial: {\r\n    scale: 0.8,\r\n    opacity: 0,\r\n  },\r\n  animate: {\r\n    scale: 1,\r\n    opacity: 1,\r\n    transition: {\r\n      duration: 0.3,\r\n      ease: 'easeOut',\r\n    },\r\n  },\r\n};\r\n\r\nexport const rotateIn: Variants = {\r\n  initial: {\r\n    rotate: -10,\r\n    opacity: 0,\r\n  },\r\n  animate: {\r\n    rotate: 0,\r\n    opacity: 1,\r\n    transition: {\r\n      duration: 0.5,\r\n    },\r\n  },\r\n}; ","import React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNotification } from '../contexts/NotificationContext';\r\nimport { Box, Typography, Container, useTheme, Paper, TextField, Button, InputAdornment, IconButton, Grid, Avatar } from '@mui/material';\r\nimport { motion, Variants } from 'framer-motion';\r\nimport { \r\n  Email as EmailIcon,\r\n  Person as PersonIcon,\r\n  Lock as LockIcon,\r\n  VpnKey as VpnKeyIcon,\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n} from '@mui/icons-material';\r\nimport PandaCard from '../components/common/PandaCard';\r\nimport AuthForm from '../components/common/AuthForm';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { themeUtils } from '../theme';\r\nimport { fadeIn, slideUp } from '@/animations';\r\nimport GlobalBackground from '@/components/common/GlobalBackground';\r\n\r\nconst Register: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const { register } = useAuth();\r\n  const { showNotification } = useNotification();\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const theme = useTheme();\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (formData.password !== formData.confirmPassword) {\r\n      showNotification('两次输入的密码不一致', 'error');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      await register(formData.email, formData.password, formData.username);\r\n      showNotification('注册成功', 'success');\r\n      navigate('/dashboard');\r\n    } catch (error: any) {\r\n      const errorMessage = error.response?.data?.message || error.message || t('register.error');\r\n      setError(errorMessage);\r\n      showNotification(errorMessage, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ \r\n      minHeight: '100vh',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      position: 'relative',\r\n      overflow: 'hidden',\r\n    }}>\r\n      <GlobalBackground />\r\n      \r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={6} alignItems=\"center\">\r\n          <Grid item xs={12} md={6}>\r\n            <motion.div\r\n              initial=\"hidden\"\r\n              animate=\"visible\"\r\n              variants={fadeIn}\r\n            >\r\n              <Box sx={{ \r\n                textAlign: 'center',\r\n                mb: 4,\r\n              }}>\r\n                <motion.div\r\n                  animate={{\r\n                    y: [0, -20, 0],\r\n                    rotate: [0, 5, 0],\r\n                  }}\r\n                  transition={{\r\n                    duration: 4,\r\n                    repeat: Infinity,\r\n                    ease: \"easeInOut\",\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    sx={{\r\n                      fontSize: '8rem',\r\n                      lineHeight: 1,\r\n                      mb: 2,\r\n                    }}\r\n                  >\r\n                    🐼\r\n                  </Typography>\r\n                </motion.div>\r\n                <Typography\r\n                  variant=\"h2\"\r\n                  sx={{\r\n                    color: '#00FFB8',\r\n                    fontWeight: 700,\r\n                    mb: 2,\r\n                    fontSize: { xs: '2.5rem', md: '3.5rem' },\r\n                    lineHeight: 1.2,\r\n                    background: 'linear-gradient(45deg, #00FFB8 30%, #00B8FF 90%)',\r\n                    WebkitBackgroundClip: 'text',\r\n                    WebkitTextFillColor: 'transparent',\r\n                  }}\r\n                >\r\n                  加入熊猫量化\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  sx={{\r\n                    color: '#666666',\r\n                    mb: 4,\r\n                    fontSize: '1.2rem',\r\n                  }}\r\n                >\r\n                  开启您的智能量化交易之旅\r\n                </Typography>\r\n              </Box>\r\n            </motion.div>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <motion.div\r\n              initial=\"hidden\"\r\n              animate=\"visible\"\r\n              variants={slideUp}\r\n            >\r\n              <Paper\r\n                elevation={0}\r\n                sx={{\r\n                  p: { xs: 3, md: 4 },\r\n                  borderRadius: 4,\r\n                  background: 'rgba(255, 255, 255, 0.95)',\r\n                  backdropFilter: 'blur(10px)',\r\n                  border: '1px solid rgba(0, 255, 184, 0.1)',\r\n                  boxShadow: '0 8px 32px rgba(0, 255, 184, 0.1)',\r\n                }}\r\n              >\r\n                <form onSubmit={handleSubmit}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"用户名\"\r\n                    name=\"username\"\r\n                    value={formData.username}\r\n                    onChange={handleChange}\r\n                    margin=\"normal\"\r\n                    required\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <PersonIcon sx={{ color: '#00FFB8' }} />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    sx={{\r\n                      '& .MuiOutlinedInput-root': {\r\n                        '& fieldset': {\r\n                          borderColor: 'rgba(0, 255, 184, 0.3)',\r\n                        },\r\n                        '&:hover fieldset': {\r\n                          borderColor: '#00FFB8',\r\n                        },\r\n                        '&.Mui-focused fieldset': {\r\n                          borderColor: '#00FFB8',\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"邮箱\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleChange}\r\n                    margin=\"normal\"\r\n                    required\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <EmailIcon sx={{ color: '#00FFB8' }} />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    sx={{\r\n                      '& .MuiOutlinedInput-root': {\r\n                        '& fieldset': {\r\n                          borderColor: 'rgba(0, 255, 184, 0.3)',\r\n                        },\r\n                        '&:hover fieldset': {\r\n                          borderColor: '#00FFB8',\r\n                        },\r\n                        '&.Mui-focused fieldset': {\r\n                          borderColor: '#00FFB8',\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"密码\"\r\n                    name=\"password\"\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    value={formData.password}\r\n                    onChange={handleChange}\r\n                    margin=\"normal\"\r\n                    required\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <LockIcon sx={{ color: '#00FFB8' }} />\r\n                        </InputAdornment>\r\n                      ),\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            onClick={() => setShowPassword(!showPassword)}\r\n                            edge=\"end\"\r\n                          >\r\n                            {showPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    sx={{\r\n                      '& .MuiOutlinedInput-root': {\r\n                        '& fieldset': {\r\n                          borderColor: 'rgba(0, 255, 184, 0.3)',\r\n                        },\r\n                        '&:hover fieldset': {\r\n                          borderColor: '#00FFB8',\r\n                        },\r\n                        '&.Mui-focused fieldset': {\r\n                          borderColor: '#00FFB8',\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"确认密码\"\r\n                    name=\"confirmPassword\"\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    value={formData.confirmPassword}\r\n                    onChange={handleChange}\r\n                    margin=\"normal\"\r\n                    required\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <LockIcon sx={{ color: '#00FFB8' }} />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    sx={{\r\n                      '& .MuiOutlinedInput-root': {\r\n                        '& fieldset': {\r\n                          borderColor: 'rgba(0, 255, 184, 0.3)',\r\n                        },\r\n                        '&:hover fieldset': {\r\n                          borderColor: '#00FFB8',\r\n                        },\r\n                        '&.Mui-focused fieldset': {\r\n                          borderColor: '#00FFB8',\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    disabled={loading}\r\n                    sx={{\r\n                      mt: 3,\r\n                      mb: 2,\r\n                      py: 1.5,\r\n                      bgcolor: '#00FFB8',\r\n                      color: '#000000',\r\n                      fontSize: '1.1rem',\r\n                      fontWeight: 600,\r\n                      borderRadius: 2,\r\n                      '&:hover': {\r\n                        bgcolor: '#00CC93',\r\n                        transform: 'translateY(-2px)',\r\n                        boxShadow: '0 8px 20px rgba(0, 255, 184, 0.3)',\r\n                      },\r\n                      transition: 'all 0.3s ease',\r\n                    }}\r\n                  >\r\n                    {loading ? '注册中...' : '注册'}\r\n                  </Button>\r\n                  <Button\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    onClick={() => navigate('/login')}\r\n                    sx={{\r\n                      py: 1.5,\r\n                      borderColor: '#00FFB8',\r\n                      color: '#00FFB8',\r\n                      fontSize: '1.1rem',\r\n                      fontWeight: 600,\r\n                      borderRadius: 2,\r\n                      '&:hover': {\r\n                        borderColor: '#00CC93',\r\n                        bgcolor: 'rgba(0, 255, 184, 0.1)',\r\n                      },\r\n                      transition: 'all 0.3s ease',\r\n                    }}\r\n                  >\r\n                    已有账户？立即登录\r\n                  </Button>\r\n                </form>\r\n              </Paper>\r\n            </motion.div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      \r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"dark\"\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Register; ","import { useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ethereum?: EthereumProvider;\r\n    okxwallet?: EthereumProvider;\r\n    tokenpocket?: EthereumProvider;\r\n    trustwallet?: EthereumProvider;\r\n    bitkeep?: EthereumProvider;\r\n    mathwallet?: EthereumProvider;\r\n    safepal?: EthereumProvider;\r\n    imToken?: EthereumProvider;\r\n    web3?: Web3Provider;\r\n  }\r\n}\r\n\r\nexport interface EthereumProvider {\r\n  request: (args: { method: string; params?: unknown[] }) => Promise<unknown>;\r\n  on: (event: string, callback: (...args: unknown[]) => void) => void;\r\n  removeListener: (event: string, callback: (...args: unknown[]) => void) => void;\r\n  isMetaMask?: boolean;\r\n  selectedAddress?: string;\r\n  chainId?: string;\r\n}\r\n\r\nexport const useWeb3 = () => {\r\n  const [provider, setProvider] = useState<ethers.BrowserProvider | null>(null);\r\n  const [account, setAccount] = useState<string | null>(null);\r\n  const [chainId, setChainId] = useState<string | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isInitialized, setIsInitialized] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const initWeb3 = async () => {\r\n      try {\r\n        // 等待 MetaMask 注入完成\r\n        if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\r\n          // 避免重复初始化\r\n          if (isInitialized) return;\r\n\r\n          // 创建 provider\r\n          const provider = new ethers.BrowserProvider(window.ethereum);\r\n          if (!mounted) return;\r\n          setProvider(provider);\r\n\r\n          try {\r\n            const accounts = await provider.send('eth_accounts', []);\r\n            if (mounted && accounts.length > 0) {\r\n              setAccount(accounts[0]);\r\n            }\r\n\r\n            const chainId = await provider.send('eth_chainId', []);\r\n            if (mounted) {\r\n              setChainId(chainId);\r\n            }\r\n          } catch (err) {\r\n            console.warn('Failed to get initial accounts or chainId:', err);\r\n          }\r\n\r\n          const handleAccountsChanged = (...args: unknown[]) => {\r\n            if (mounted) {\r\n              const accounts = args[0] as string[];\r\n              setAccount(accounts[0] || null);\r\n            }\r\n          };\r\n\r\n          const handleChainChanged = (...args: unknown[]) => {\r\n            if (mounted) {\r\n              const chainId = args[0] as string;\r\n              setChainId(chainId);\r\n              // 不要自动刷新页面，让用户决定是否刷新\r\n              // window.location.reload();\r\n            }\r\n          };\r\n\r\n          window.ethereum.on('accountsChanged', handleAccountsChanged);\r\n          window.ethereum.on('chainChanged', handleChainChanged);\r\n\r\n          setIsInitialized(true);\r\n\r\n          return () => {\r\n            if (window.ethereum) {\r\n              window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\r\n              window.ethereum.removeListener('chainChanged', handleChainChanged);\r\n            }\r\n          };\r\n        }\r\n      } catch (err) {\r\n        if (mounted) {\r\n          setError('Failed to initialize Web3');\r\n          console.error('Web3 initialization error:', err);\r\n        }\r\n      }\r\n    };\r\n\r\n    initWeb3();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [isInitialized]);\r\n\r\n  const connect = async () => {\r\n    try {\r\n      if (typeof window === 'undefined') {\r\n        throw new Error('Window is not defined');\r\n      }\r\n\r\n      if (typeof window.ethereum === 'undefined') {\r\n        throw new Error('Please install MetaMask or another Web3 wallet');\r\n      }\r\n\r\n      const accounts = await window.ethereum.request({\r\n        method: 'eth_requestAccounts'\r\n      }) as string[];\r\n\r\n      if (accounts.length > 0) {\r\n        setAccount(accounts[0]);\r\n        return accounts[0];\r\n      } else {\r\n        throw new Error('No accounts found');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Failed to connect to Web3 wallet';\r\n      setError(errorMessage);\r\n      console.error('Web3 connection error:', err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  return {\r\n    provider,\r\n    account,\r\n    chainId,\r\n    error,\r\n    connect,\r\n    isInitialized,\r\n  };\r\n}; ","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { Box, Typography, Grid } from '@mui/material';\r\nimport { fadeIn } from '../../animations';\r\nimport { AssetData } from '../../services/dashboardService';\r\n\r\nexport interface AssetOverviewProps {\r\n  assets: AssetData;\r\n}\r\n\r\nconst AssetOverview: React.FC<AssetOverviewProps> = ({ assets }) => {\r\n  return (\r\n    <motion.div\r\n      initial=\"initial\"\r\n      animate=\"animate\"\r\n      variants={fadeIn}\r\n    >\r\n      <Grid container spacing={2}>\r\n        {Object.entries(assets.currencies).map(([currency, data], index) => (\r\n          <Grid item xs={12} sm={6} md={4} key={index}>\r\n            <Box\r\n              sx={{\r\n                p: 2,\r\n                borderRadius: 1,\r\n                bgcolor: 'background.paper',\r\n                boxShadow: 1\r\n              }}\r\n            >\r\n              <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n                {currency}\r\n              </Typography>\r\n              <Typography variant=\"h6\">\r\n                {data.amount.toLocaleString()}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color={data.change24h >= 0 ? 'success.main' : 'error.main'}>\r\n                {data.change24h >= 0 ? '+' : ''}{data.change24h}%\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                ${data.valueInUSD.toLocaleString()}\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default AssetOverview; ","import React from 'react';\r\nimport { Typography, TypographyProps, useTheme, Box } from '@mui/material';\r\n\r\ninterface GradientTitleProps extends TypographyProps {\r\n  title: string;\r\n  subtitle?: string;\r\n}\r\n\r\nexport const GradientTitle: React.FC<GradientTitleProps> = ({ title, subtitle, ...props }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Box>\r\n      <Typography\r\n        {...props}\r\n        sx={{\r\n          background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n          WebkitBackgroundClip: 'text',\r\n          WebkitTextFillColor: 'transparent',\r\n          fontWeight: 'bold',\r\n          mb: 1,\r\n          ...props.sx\r\n        }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n      {subtitle && (\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          color=\"text.secondary\"\r\n          sx={{ mb: 3 }}\r\n        >\r\n          {subtitle}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Container,\r\n  Menu,\r\n  MenuItem,\r\n  Avatar,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  Menu as MenuIcon,\r\n  Language as LanguageIcon,\r\n  AccountCircle as AccountIcon,\r\n  Dashboard as DashboardIcon,\r\n  Settings as SettingsIcon,\r\n  Payment as PaymentIcon,\r\n  Logout as LogoutIcon,\r\n} from '@mui/icons-material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst UserNavbar: React.FC = () => {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [languageAnchor, setLanguageAnchor] = useState<null | HTMLElement>(null);\r\n  const [userAnchor, setUserAnchor] = useState<null | HTMLElement>(null);\r\n  const [scrolled, setScrolled] = useState(false);\r\n  const { t, i18n } = useTranslation();\r\n  const { isAuthenticated, logout } = useAuth();\r\n\r\n  const handleLogout = async () => {\r\n    await logout();\r\n    navigate('/login');\r\n  };\r\n\r\n  const navItems = [\r\n    { label: t('nav.dashboard'), path: '/dashboard', icon: <DashboardIcon /> },\r\n    { label: t('nav.strategies'), path: '/strategies', icon: <SettingsIcon /> },\r\n    { label: t('nav.api'), path: '/api-management', icon: <SettingsIcon /> },\r\n    { label: t('nav.messages'), path: '/messages', icon: <SettingsIcon /> },\r\n    { label: t('nav.invite'), path: '/invite', icon: <SettingsIcon /> },\r\n  ];\r\n\r\n  const languages = [\r\n    { code: 'en', name: t('language.english') },\r\n    { code: 'zh', name: t('language.chinese') },\r\n    { code: 'ko', name: t('language.korean') },\r\n  ];\r\n\r\n  const userMenuItems = [\r\n    { label: t('nav.profile'), path: '/account-settings/profile', icon: <AccountIcon /> },\r\n    { label: t('nav.settings'), path: '/account-settings', icon: <SettingsIcon /> },\r\n    { label: t('nav.deposit'), path: '/deposit', icon: <PaymentIcon /> },\r\n    { label: t('nav.withdraw'), path: '/withdraw', icon: <PaymentIcon /> },\r\n    { label: t('nav.referral'), path: '/referral/rewards', icon: <SettingsIcon /> },\r\n    { label: t('nav.logout'), path: '/logout', icon: <LogoutIcon />, action: handleLogout },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      setScrolled(window.scrollY > 0);\r\n    };\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  const handleLanguageClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setLanguageAnchor(event.currentTarget);\r\n  };\r\n\r\n  const handleLanguageClose = () => {\r\n    setLanguageAnchor(null);\r\n  };\r\n\r\n  const handleLanguageChange = (code: string) => {\r\n    i18n.changeLanguage(code);\r\n    handleLanguageClose();\r\n  };\r\n\r\n  const handleUserClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setUserAnchor(event.currentTarget);\r\n  };\r\n\r\n  const handleUserClose = () => {\r\n    setUserAnchor(null);\r\n  };\r\n\r\n  const toggleDrawer = () => {\r\n    setDrawerOpen(!drawerOpen);\r\n  };\r\n\r\n  const handleNavigation = (path: string) => {\r\n    navigate(path);\r\n    setDrawerOpen(false);\r\n  };\r\n\r\n  const Logo = () => (\r\n    <Box\r\n      component={motion.div}\r\n      whileHover={{ scale: 1.05 }}\r\n      whileTap={{ scale: 0.95 }}\r\n      sx={{ cursor: 'pointer' }}\r\n      onClick={() => navigate('/')}\r\n    >\r\n      <Typography\r\n        variant=\"h6\"\r\n        sx={{\r\n          fontWeight: 'bold',\r\n          background: 'linear-gradient(45deg, #FF6B6B, #4ECDC4)',\r\n          WebkitBackgroundClip: 'text',\r\n          WebkitTextFillColor: 'transparent',\r\n        }}\r\n      >\r\n        PANDA QUANT\r\n      </Typography>\r\n    </Box>\r\n  );\r\n\r\n  const UserMenu = () => (\r\n    <Menu\r\n      anchorEl={userAnchor}\r\n      open={Boolean(userAnchor)}\r\n      onClose={handleUserClose}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'right',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n    >\r\n      {userMenuItems.map((item) => (\r\n        <MenuItem\r\n          key={item.path}\r\n          onClick={() => {\r\n            if (item.action) {\r\n              item.action();\r\n            } else {\r\n              handleNavigation(item.path);\r\n            }\r\n            handleUserClose();\r\n          }}\r\n        >\r\n          {item.icon}\r\n          <ListItemText primary={item.label} sx={{ ml: 1 }} />\r\n        </MenuItem>\r\n      ))}\r\n    </Menu>\r\n  );\r\n\r\n  const DesktopNav = () => (\r\n    <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n      {navItems.map((item) => (\r\n        <Button\r\n          key={item.path}\r\n          color=\"inherit\"\r\n          onClick={() => handleNavigation(item.path)}\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: 1,\r\n          }}\r\n        >\r\n          {item.icon}\r\n          {item.label}\r\n        </Button>\r\n      ))}\r\n      <IconButton color=\"inherit\" onClick={handleLanguageClick}>\r\n        <LanguageIcon />\r\n      </IconButton>\r\n      <IconButton color=\"inherit\" onClick={handleUserClick}>\r\n        <Avatar sx={{ width: 32, height: 32 }} />\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n\r\n  const MobileNav = () => (\r\n    <>\r\n      <IconButton color=\"inherit\" onClick={toggleDrawer}>\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={drawerOpen}\r\n        onClose={toggleDrawer}\r\n        PaperProps={{\r\n          sx: {\r\n            width: '100%',\r\n            maxWidth: 360,\r\n            bgcolor: theme.palette.background.default,\r\n          },\r\n        }}\r\n      >\r\n        <List>\r\n          {navItems.map((item) => (\r\n            <ListItem\r\n              key={item.path}\r\n              button\r\n              onClick={() => handleNavigation(item.path)}\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: 1,\r\n              }}\r\n            >\r\n              {item.icon}\r\n              <ListItemText primary={item.label} />\r\n            </ListItem>\r\n          ))}\r\n          <ListItem button onClick={handleLanguageClick}>\r\n            <LanguageIcon sx={{ mr: 1 }} />\r\n            <ListItemText primary={t('nav.language')} />\r\n          </ListItem>\r\n          <ListItem button onClick={handleUserClick}>\r\n            <AccountIcon sx={{ mr: 1 }} />\r\n            <ListItemText primary={t('nav.profile')} />\r\n          </ListItem>\r\n          <ListItem button onClick={handleLogout}>\r\n            <LogoutIcon sx={{ mr: 1 }} />\r\n            <ListItemText primary={t('nav.logout')} />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      elevation={scrolled ? 4 : 0}\r\n      sx={{\r\n        bgcolor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        transition: 'all 0.3s ease',\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Toolbar sx={{ justifyContent: 'space-between' }}>\r\n          <Logo />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n            <DesktopNav />\r\n          </Box>\r\n          <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\r\n            <MobileNav />\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n      <UserMenu />\r\n      <Menu\r\n        anchorEl={languageAnchor}\r\n        open={Boolean(languageAnchor)}\r\n        onClose={handleLanguageClose}\r\n      >\r\n        {languages.map((lang) => (\r\n          <MenuItem\r\n            key={lang.code}\r\n            onClick={() => handleLanguageChange(lang.code)}\r\n          >\r\n            {lang.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default UserNavbar; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Container,\r\n  Menu,\r\n  MenuItem,\r\n  Avatar,\r\n  useTheme,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  Menu as MenuIcon,\r\n  Language as LanguageIcon,\r\n  AccountCircle as AccountIcon,\r\n  Dashboard as DashboardIcon,\r\n} from '@mui/icons-material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useNavigate, useLocation, Link as RouterLink } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { alpha } from '@mui/material/styles';\r\nimport { themeUtils } from '../../theme';\r\n\r\nconst Navbar: React.FC = () => {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [languageAnchor, setLanguageAnchor] = useState<null | HTMLElement>(null);\r\n  const [userAnchor, setUserAnchor] = useState<null | HTMLElement>(null);\r\n  const [scrolled, setScrolled] = useState(false);\r\n  const { t, i18n } = useTranslation();\r\n  const { isAuthenticated, logout } = useAuth();\r\n\r\n  const navItems = [\r\n    { label: '产品介绍', path: '/product' },\r\n    { label: '收益榜', path: '/profit' },\r\n    { label: '量化策略', path: '/product/strategies' },\r\n    { label: '安全保障', path: '/security' },\r\n    { label: '邀请返佣', path: '/invite' },\r\n  ];\r\n\r\n  const languages = [\r\n    { code: 'en', name: t('language.english') },\r\n    { code: 'zh', name: t('language.chinese') },\r\n    { code: 'ko', name: t('language.korean') },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      setScrolled(window.scrollY > 50);\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  const handleLanguageClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setLanguageAnchor(event.currentTarget);\r\n  };\r\n\r\n  const handleLanguageClose = () => {\r\n    setLanguageAnchor(null);\r\n  };\r\n\r\n  const handleLanguageChange = (code: string) => {\r\n    i18n.changeLanguage(code);\r\n    handleLanguageClose();\r\n  };\r\n\r\n  const handleUserClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setUserAnchor(event.currentTarget);\r\n  };\r\n\r\n  const handleUserClose = () => {\r\n    setUserAnchor(null);\r\n  };\r\n\r\n  const toggleDrawer = () => {\r\n    setDrawerOpen(!drawerOpen);\r\n  };\r\n\r\n  const handleNavigation = (path: string) => {\r\n    navigate(path);\r\n    setDrawerOpen(false);\r\n    handleUserClose();\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logout();\r\n      handleUserClose();\r\n      setDrawerOpen(false);\r\n    } catch (error) {\r\n      console.error('Logout failed:', error);\r\n    }\r\n  };\r\n\r\n  const Logo = () => (\r\n    <Box \r\n      sx={{ \r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        gap: 1.5,\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n          '& .panda-logo': {\r\n            transform: 'scale(1.1)',\r\n          }\r\n        }\r\n      }}\r\n      onClick={() => handleNavigation('/')}\r\n    >\r\n      <Box\r\n        className=\"panda-logo\"\r\n        sx={{\r\n          fontSize: '1.8rem',\r\n          transition: 'transform 0.3s ease',\r\n          display: 'inline-flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          width: '40px',\r\n          height: '40px',\r\n          borderRadius: '50%',\r\n          background: alpha(theme.palette.primary.main, 0.1),\r\n        }}\r\n      >\r\n        🐼\r\n      </Box>\r\n      <Typography\r\n        variant=\"h6\"\r\n        sx={{\r\n          background: themeUtils.createGradient(theme.palette.primary.main, theme.palette.primary.dark),\r\n          WebkitBackgroundClip: 'text',\r\n          WebkitTextFillColor: 'transparent',\r\n          fontWeight: 700,\r\n          fontSize: '1.3rem',\r\n          letterSpacing: '0.5px',\r\n        }}\r\n      >\r\n        Panda Quant\r\n      </Typography>\r\n    </Box>\r\n  );\r\n\r\n  const UserMenu = () => (\r\n    <Menu\r\n      anchorEl={userAnchor}\r\n      open={Boolean(userAnchor)}\r\n      onClose={handleUserClose}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'right',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n    >\r\n      <MenuItem onClick={() => handleNavigation('/dashboard')}>\r\n        <DashboardIcon sx={{ mr: 1 }} />\r\n        {t('nav.dashboard')}\r\n      </MenuItem>\r\n      <MenuItem onClick={handleLogout}>\r\n        <AccountIcon sx={{ mr: 1 }} />\r\n        {t('nav.logout')}\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const DesktopNav = () => (\r\n    <Box sx={{ display: 'flex', alignItems: 'center', gap: 3, justifyContent: 'center', flex: 1 }}>\r\n      {navItems.map((item) => (\r\n        <Button\r\n          key={item.path}\r\n          onClick={() => handleNavigation(item.path)}\r\n          sx={{\r\n            color: location.pathname === item.path ? theme.palette.primary.main : theme.palette.text.secondary,\r\n            fontWeight: 600,\r\n            fontSize: '1rem',\r\n            textTransform: 'none',\r\n            position: 'relative',\r\n            textAlign: 'center',\r\n            '&::after': {\r\n              content: '\"\"',\r\n              position: 'absolute',\r\n              bottom: -2,\r\n              left: 0,\r\n              width: '100%',\r\n              height: '2px',\r\n              background: themeUtils.createGradient(theme.palette.primary.main, 'transparent'),\r\n              transform: location.pathname === item.path ? 'scaleX(1)' : 'scaleX(0)',\r\n              transition: 'transform 0.3s ease',\r\n            },\r\n            '&:hover::after': {\r\n              transform: 'scaleX(1)',\r\n            },\r\n          }}\r\n        >\r\n          {item.label}\r\n        </Button>\r\n      ))}\r\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, ml: 2 }}>\r\n        <IconButton color=\"inherit\" onClick={handleLanguageClick}>\r\n          <LanguageIcon />\r\n        </IconButton>\r\n        {isAuthenticated ? (\r\n          <IconButton color=\"inherit\" onClick={handleUserClick}>\r\n            <Avatar sx={{ width: 32, height: 32 }}>\r\n              <AccountIcon />\r\n            </Avatar>\r\n          </IconButton>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              onClick={() => handleNavigation('/login')}\r\n              sx={{\r\n                color: theme.palette.primary.main,\r\n                borderColor: theme.palette.primary.main,\r\n                borderRadius: '20px',\r\n                textTransform: 'none',\r\n                fontWeight: 600,\r\n                fontSize: '0.9rem',\r\n                px: 2,\r\n                '&:hover': {\r\n                  borderColor: theme.palette.primary.dark,\r\n                  backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n                },\r\n              }}\r\n            >\r\n              登录\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              onClick={() => handleNavigation('/register')}\r\n              sx={{\r\n                background: themeUtils.createGradient(theme.palette.primary.main, theme.palette.primary.dark),\r\n                borderRadius: '20px',\r\n                textTransform: 'none',\r\n                fontWeight: 600,\r\n                fontSize: '0.9rem',\r\n                px: 2,\r\n                '&:hover': {\r\n                  background: themeUtils.createGradient(theme.palette.primary.dark, theme.palette.primary.main),\r\n                },\r\n              }}\r\n            >\r\n              注册\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  const MobileNav = () => (\r\n    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n      <IconButton color=\"inherit\" onClick={handleLanguageClick}>\r\n        <LanguageIcon />\r\n      </IconButton>\r\n      {isAuthenticated ? (\r\n        <IconButton color=\"inherit\" onClick={handleUserClick}>\r\n          <Avatar sx={{ width: 32, height: 32 }}>\r\n            <AccountIcon />\r\n          </Avatar>\r\n        </IconButton>\r\n      ) : (\r\n        <>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={() => handleNavigation('/login')}\r\n            sx={{\r\n              color: theme.palette.primary.main,\r\n              borderColor: theme.palette.primary.main,\r\n              borderRadius: '20px',\r\n              textTransform: 'none',\r\n              fontWeight: 600,\r\n              fontSize: '0.9rem',\r\n              px: 2,\r\n              '&:hover': {\r\n                borderColor: theme.palette.primary.dark,\r\n                backgroundColor: alpha(theme.palette.primary.main, 0.05),\r\n              },\r\n            }}\r\n          >\r\n            登录\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            onClick={() => handleNavigation('/register')}\r\n            sx={{\r\n              background: themeUtils.createGradient(theme.palette.primary.main, theme.palette.primary.dark),\r\n              borderRadius: '20px',\r\n              textTransform: 'none',\r\n              fontWeight: 600,\r\n              fontSize: '0.9rem',\r\n              px: 2,\r\n              '&:hover': {\r\n                background: themeUtils.createGradient(theme.palette.primary.dark, theme.palette.primary.main),\r\n              },\r\n            }}\r\n          >\r\n            注册\r\n          </Button>\r\n        </>\r\n      )}\r\n      <IconButton color=\"inherit\" onClick={toggleDrawer}>\r\n        <MenuIcon />\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      sx={{\r\n        bgcolor: scrolled ? 'rgba(255, 255, 255, 0.95)' : 'transparent',\r\n        backdropFilter: 'blur(10px)',\r\n        boxShadow: scrolled ? '0 2px 10px rgba(0, 0, 0, 0.1)' : 'none',\r\n        transition: 'all 0.3s ease',\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Toolbar disableGutters sx={{ justifyContent: 'space-between' }}>\r\n          <Logo />\r\n          {isMobile ? <MobileNav /> : <DesktopNav />}\r\n        </Toolbar>\r\n      </Container>\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={drawerOpen}\r\n        onClose={toggleDrawer}\r\n        sx={{\r\n          '& .MuiDrawer-paper': {\r\n            width: '100%',\r\n            maxWidth: '400px',\r\n            bgcolor: 'background.paper',\r\n          },\r\n        }}\r\n      >\r\n        <Box sx={{ p: 2 }}>\r\n          <List>\r\n            {navItems.map((item) => (\r\n              <ListItem\r\n                key={item.path}\r\n                button\r\n                onClick={() => handleNavigation(item.path)}\r\n                sx={{\r\n                  py: 1,\r\n                  '&:hover': {\r\n                    bgcolor: alpha(theme.palette.primary.main, 0.05),\r\n                  },\r\n                }}\r\n              >\r\n                <ListItemText\r\n                  primary={item.label}\r\n                  sx={{\r\n                    color: location.pathname === item.path ? theme.palette.primary.main : theme.palette.text.primary,\r\n                    fontWeight: location.pathname === item.path ? 600 : 400,\r\n                  }}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n      </Drawer>\r\n      <Menu\r\n        anchorEl={languageAnchor}\r\n        open={Boolean(languageAnchor)}\r\n        onClose={handleLanguageClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n      >\r\n        {languages.map((lang) => (\r\n          <MenuItem\r\n            key={lang.code}\r\n            onClick={() => handleLanguageChange(lang.code)}\r\n            selected={i18n.language === lang.code}\r\n          >\r\n            {lang.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n      <UserMenu />\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar; ","import React from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Container,\r\n  useTheme,\r\n  Card,\r\n  CardContent,\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  Speed as SpeedIcon,\r\n  Security as SecurityIcon,\r\n  AutoGraph as AutoGraphIcon,\r\n  SupportAgent as SupportIcon,\r\n} from '@mui/icons-material';\r\n\r\ninterface Advantage {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  icon: React.ReactNode;\r\n  color: string;\r\n  stats: string;\r\n}\r\n\r\nconst advantages: Advantage[] = [\r\n  {\r\n    id: 1,\r\n    title: '高效交易',\r\n    description: '毫秒级交易执行，把握每一个市场机会',\r\n    icon: <SpeedIcon />,\r\n    color: '#00FFB8',\r\n    stats: '0.001秒',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: '安全可靠',\r\n    description: '多重安全防护，保障您的资产安全',\r\n    icon: <SecurityIcon />,\r\n    color: '#00FFB8',\r\n    stats: '99.99%',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: '智能策略',\r\n    description: '基于AI的智能交易策略，持续优化收益',\r\n    icon: <AutoGraphIcon />,\r\n    color: '#00FFB8',\r\n    stats: '50-300%',\r\n  },\r\n  {\r\n    id: 4,\r\n    title: '专业支持',\r\n    description: '7x24小时专业团队支持，随时解决您的问题',\r\n    icon: <SupportIcon />,\r\n    color: '#00FFB8',\r\n    stats: '24/7',\r\n  },\r\n];\r\n\r\nconst CoreAdvantages = () => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        py: { xs: 8, md: 12 },\r\n        overflow: 'hidden',\r\n        bgcolor: '#FFFFFF',\r\n        position: 'relative',\r\n        '&::before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.05) 0%, rgba(0, 255, 184, 0.02) 100%)',\r\n          zIndex: 0,\r\n        },\r\n      }}\r\n    >\r\n      <Container \r\n        maxWidth=\"lg\" \r\n        sx={{ \r\n          position: 'relative', \r\n          zIndex: 1,\r\n          px: { xs: 2, md: 4 }\r\n        }}\r\n      >\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          <Typography\r\n            variant=\"h2\"\r\n            sx={{\r\n              color: '#00FFB8',\r\n              fontWeight: 700,\r\n              textAlign: 'center',\r\n              mb: 2,\r\n              fontSize: { xs: '2.5rem', md: '3.5rem' },\r\n              lineHeight: 1.2,\r\n              position: 'relative',\r\n              display: 'inline-block',\r\n              left: '50%',\r\n              transform: 'translateX(-50%)',\r\n              '&::after': {\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                bottom: -10,\r\n                left: '50%',\r\n                transform: 'translateX(-50%)',\r\n                width: '80px',\r\n                height: '4px',\r\n                background: 'linear-gradient(90deg, transparent, #00FFB8, transparent)',\r\n                borderRadius: '2px',\r\n              },\r\n            }}\r\n          >\r\n            核心优势\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body1\"\r\n            sx={{\r\n              color: '#666666',\r\n              textAlign: 'center',\r\n              mb: 6,\r\n              fontSize: '1.2rem',\r\n              maxWidth: '800px',\r\n              mx: 'auto',\r\n            }}\r\n          >\r\n            为什么选择我们的量化交易服务\r\n          </Typography>\r\n        </motion.div>\r\n\r\n        <Grid container spacing={4}>\r\n          {advantages.map((advantage, index) => (\r\n            <Grid item xs={12} md={6} key={advantage.id}>\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ \r\n                  duration: 0.5,\r\n                  delay: index * 0.1\r\n                }}\r\n              >\r\n                <Card\r\n                  sx={{\r\n                    height: '100%',\r\n                    background: 'rgba(255, 255, 255, 0.9)',\r\n                    backdropFilter: 'blur(10px)',\r\n                    boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\r\n                    border: '1px solid rgba(0, 255, 184, 0.1)',\r\n                    borderRadius: '24px',\r\n                    transition: 'all 0.3s ease',\r\n                    position: 'relative',\r\n                    overflow: 'hidden',\r\n                    '&::before': {\r\n                      content: '\"\"',\r\n                      position: 'absolute',\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      background: 'linear-gradient(45deg, transparent, rgba(0,255,184,0.05), transparent)',\r\n                      transform: 'translateX(-100%)',\r\n                      transition: 'transform 0.6s ease',\r\n                    },\r\n                    '&:hover': {\r\n                      transform: 'translateY(-5px)',\r\n                      boxShadow: '0 8px 30px rgba(0, 255, 184, 0.15)',\r\n                      border: '1px solid rgba(0, 255, 184, 0.2)',\r\n                      '&::before': {\r\n                        transform: 'translateX(100%)',\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  <CardContent sx={{ p: 4 }}>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        mb: 3,\r\n                      }}\r\n                    >\r\n                      <Box\r\n                        sx={{\r\n                          width: 64,\r\n                          height: 64,\r\n                          borderRadius: '16px',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          justifyContent: 'center',\r\n                          bgcolor: 'rgba(0, 255, 184, 0.1)',\r\n                          color: '#00FFB8',\r\n                          mr: 3,\r\n                          position: 'relative',\r\n                          '&::after': {\r\n                            content: '\"\"',\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            left: 0,\r\n                            right: 0,\r\n                            bottom: 0,\r\n                            borderRadius: '16px',\r\n                            background: 'radial-gradient(circle, rgba(0,255,184,0.2) 0%, rgba(0,255,184,0) 70%)',\r\n                            animation: 'pulse 3s ease-in-out infinite',\r\n                            '@keyframes pulse': {\r\n                              '0%': { transform: 'scale(1)' },\r\n                              '50%': { transform: 'scale(1.2)' },\r\n                              '100%': { transform: 'scale(1)' },\r\n                            },\r\n                          },\r\n                        }}\r\n                      >\r\n                        {advantage.icon}\r\n                      </Box>\r\n                      <Box sx={{ flex: 1 }}>\r\n                        <Typography\r\n                          variant=\"h5\"\r\n                          sx={{\r\n                            color: '#333333',\r\n                            fontWeight: 600,\r\n                            mb: 1,\r\n                          }}\r\n                        >\r\n                          {advantage.title}\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"h4\"\r\n                          sx={{\r\n                            color: '#00FFB8',\r\n                            fontWeight: 700,\r\n                            background: 'linear-gradient(90deg, #00FFB8, #00B8FF)',\r\n                            WebkitBackgroundClip: 'text',\r\n                            WebkitTextFillColor: 'transparent',\r\n                          }}\r\n                        >\r\n                          {advantage.stats}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{\r\n                        color: '#666666',\r\n                        lineHeight: 1.8,\r\n                        position: 'relative',\r\n                        pl: 2,\r\n                        '&::before': {\r\n                          content: '\"\"',\r\n                          position: 'absolute',\r\n                          left: 0,\r\n                          top: 0,\r\n                          width: '2px',\r\n                          height: '100%',\r\n                          background: 'linear-gradient(to bottom, #00FFB8, transparent)',\r\n                          borderRadius: '1px',\r\n                        },\r\n                      }}\r\n                    >\r\n                      {advantage.description}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </motion.div>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CoreAdvantages; ","import React from 'react';\nimport {\n  Box,\n  Typography,\n  Container,\n  Button,\n  useTheme,\n  Grid,\n  Card,\n  CardContent,\n  IconButton,\n} from '@mui/material';\nimport { motion } from 'framer-motion';\nimport { \n  ArrowForward as ArrowForwardIcon,\n  Security as SecurityIcon,\n  AutoGraph as AutoGraphIcon,\n  Psychology as PsychologyIcon,\n} from '@mui/icons-material';\nimport { themeUtils } from '../../theme';\n\nconst HeroSection = () => {\n  const theme = useTheme();\n\n  const advantages = [\n    {\n      title: 'AI 智能交易',\n      description: '基于深度学习的智能交易系统，24小时自动运行，月化收益可达50%-300%。采用先进的机器学习算法，实时分析市场数据，自动调整交易策略，让您的投资更智能、更高效。',\n      icon: <PsychologyIcon sx={{ fontSize: 40, color: theme.palette.primary.main }} />,\n    },\n    {\n      title: '量化策略',\n      description: '剥头皮、超级趋势、网格套利等多策略组合，专业团队持续优化，风险分散，稳定收益。每个策略都经过严格回测和实盘验证，确保在不同市场环境下都能获得稳定收益。',\n      icon: <AutoGraphIcon sx={{ fontSize: 40, color: theme.palette.primary.main }} />,\n    },\n    {\n      title: '安全保障',\n      description: '银行级安全防护，API只读授权，资金隔离，多重风控，确保资产安全无忧。采用多重加密技术，实时监控交易风险，为您的投资保驾护航。',\n      icon: <SecurityIcon sx={{ fontSize: 40, color: theme.palette.primary.main }} />,\n    },\n  ];\n\n  // 生成随机K线数据\n  const generateKLineData = () => {\n    const data = [];\n    let lastClose = 200;\n    for (let i = 0; i < 20; i++) {\n      const open = lastClose;\n      const high = open + Math.random() * 20;\n      const low = open - Math.random() * 20;\n      const close = low + Math.random() * (high - low);\n      lastClose = close;\n      data.push({ open, high, low, close });\n    }\n    return data;\n  };\n\n  const kLineData = generateKLineData();\n\n  return (\n    <Box\n      sx={{\n        minHeight: '100vh',\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        py: { xs: 8, md: 12 },\n        overflow: 'hidden',\n        bgcolor: '#FFFFFF',\n        position: 'relative',\n        '&::before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.05) 0%, rgba(0, 255, 184, 0.02) 100%)',\n          zIndex: 0,\n        },\n      }}\n    >\n      <Container \n        maxWidth=\"lg\" \n        sx={{ \n          position: 'relative', \n          zIndex: 1,\n          px: { xs: 2, md: 4 }\n        }}\n      >\n        <Grid container spacing={6} alignItems=\"center\">\n          <Grid item xs={12} md={6} sx={{ pl: { xs: 0, md: 4 } }}>\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ \n                duration: 0.8,\n                ease: [0.6, -0.05, 0.01, 0.99]\n              }}\n            >\n              <Typography\n                variant=\"h1\"\n                sx={{\n                  color: '#00FFB8',\n                  fontWeight: 800,\n                  mb: 3,\n                  fontSize: { xs: '3.5rem', md: '5rem' },\n                  lineHeight: 1.1,\n                  position: 'relative',\n                  '&::after': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    bottom: -12,\n                    left: 0,\n                    width: '120px',\n                    height: '4px',\n                    background: 'linear-gradient(90deg, #00FFB8, transparent)',\n                    borderRadius: '2px',\n                  },\n                }}\n              >\n                熊猫量化\n              </Typography>\n              <Typography\n                variant=\"h2\"\n                sx={{\n                  color: '#333333',\n                  fontWeight: 700,\n                  mb: 4,\n                  fontSize: { xs: '2.5rem', md: '3.5rem' },\n                  lineHeight: 1.2,\n                }}\n              >\n                让投资更简单\n              </Typography>\n              <Typography\n                variant=\"body1\"\n                sx={{\n                  color: '#666666',\n                  mb: 6,\n                  fontSize: '1.25rem',\n                  maxWidth: '600px',\n                  lineHeight: 1.8,\n                  position: 'relative',\n                  pl: 3,\n                  '&::before': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    left: 0,\n                    top: 0,\n                    width: '4px',\n                    height: '100%',\n                    background: 'linear-gradient(to bottom, #00FFB8, transparent)',\n                    borderRadius: '2px',\n                  },\n                }}\n              >\n                基于先进AI技术，为您提供专业的量化交易策略和实时市场分析，让您的投资更智能、更高效。\n              </Typography>\n              <Box\n                sx={{\n                  display: 'flex',\n                  gap: 3,\n                  flexDirection: { xs: 'column', sm: 'row' },\n                }}\n              >\n                <motion.div\n                  whileHover={{ \n                    scale: 1.05,\n                    y: -5,\n                    transition: {\n                      duration: 0.3,\n                      ease: \"easeOut\"\n                    }\n                  }}\n                  whileTap={{ \n                    scale: 0.95,\n                    transition: {\n                      duration: 0.1\n                    }\n                  }}\n                >\n                  <Button\n                    variant=\"contained\"\n                    size=\"large\"\n                    endIcon={<ArrowForwardIcon />}\n                    sx={{\n                      bgcolor: '#00FFB8',\n                      color: '#000000',\n                      py: 2,\n                      px: 4,\n                      fontSize: '1.1rem',\n                      borderRadius: 3,\n                      position: 'relative',\n                      overflow: 'hidden',\n                      fontWeight: 600,\n                      '&::before': {\n                        content: '\"\"',\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        background: 'linear-gradient(45deg, transparent, rgba(255,255,255,0.2), transparent)',\n                        transform: 'translateX(-100%)',\n                        transition: 'transform 0.6s ease',\n                      },\n                      '&:hover': {\n                        bgcolor: '#00CC93',\n                        transform: 'translateY(-2px)',\n                        boxShadow: '0 10px 20px rgba(0, 255, 184, 0.2)',\n                        '&::before': {\n                          transform: 'translateX(100%)',\n                        },\n                      },\n                    }}\n                  >\n                    立即开始\n                  </Button>\n                </motion.div>\n                <motion.div\n                  whileHover={{ \n                    scale: 1.05,\n                    y: -5,\n                    transition: {\n                      duration: 0.3,\n                      ease: \"easeOut\"\n                    }\n                  }}\n                  whileTap={{ \n                    scale: 0.95,\n                    transition: {\n                      duration: 0.1\n                    }\n                  }}\n                >\n                  <Button\n                    variant=\"outlined\"\n                    size=\"large\"\n                    sx={{\n                      borderColor: '#00FFB8',\n                      color: '#00FFB8',\n                      py: 2,\n                      px: 4,\n                      fontSize: '1.1rem',\n                      borderRadius: 3,\n                      position: 'relative',\n                      overflow: 'hidden',\n                      fontWeight: 600,\n                      '&::before': {\n                        content: '\"\"',\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        background: 'linear-gradient(45deg, transparent, rgba(0,255,184,0.1), transparent)',\n                        transform: 'translateX(-100%)',\n                        transition: 'transform 0.6s ease',\n                      },\n                      '&:hover': {\n                        borderColor: '#00CC93',\n                        bgcolor: 'rgba(0, 255, 184, 0.1)',\n                        transform: 'translateY(-2px)',\n                        '&::before': {\n                          transform: 'translateX(100%)',\n                        },\n                      },\n                    }}\n                  >\n                    了解更多\n                  </Button>\n                </motion.div>\n              </Box>\n            </motion.div>\n          </Grid>\n\n          <Grid item xs={12} md={6} sx={{ pr: { xs: 0, md: 4 } }}>\n            <motion.div\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ \n                duration: 0.8,\n                ease: [0.6, -0.05, 0.01, 0.99]\n              }}\n            >\n              <Card\n                sx={{\n                  position: 'relative',\n                  width: { xs: '100%', md: '90%' },\n                  height: { xs: '300px', md: '400px' },\n                  background: 'rgba(255, 255, 255, 0.9)',\n                  backdropFilter: 'blur(10px)',\n                  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\n                  border: '1px solid rgba(0, 255, 184, 0.1)',\n                  borderRadius: '24px',\n                  overflow: 'hidden',\n                  '&::before': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.1) 0%, rgba(0, 255, 184, 0.05) 100%)',\n                    animation: 'pulse 3s ease-in-out infinite',\n                    '@keyframes pulse': {\n                      '0%': { opacity: 0.5 },\n                      '50%': { opacity: 0.8 },\n                      '100%': { opacity: 0.5 },\n                    },\n                  },\n                }}\n              >\n                <CardContent sx={{ p: 0, height: '100%' }}>\n                  <Box\n                    component=\"svg\"\n                    viewBox=\"0 0 400 300\"\n                    sx={{\n                      width: '100%',\n                      height: '100%',\n                      '& .grid': {\n                        stroke: 'rgba(0, 255, 184, 0.1)',\n                        strokeWidth: 1,\n                      },\n                      '& .candle': {\n                        stroke: '#00FFB8',\n                        strokeWidth: 2,\n                        fill: 'none',\n                        animation: 'drawCandle 4s ease-in-out infinite',\n                      },\n                      '& .line': {\n                        stroke: '#00FFB8',\n                        strokeWidth: 2,\n                        fill: 'none',\n                        strokeDasharray: 1000,\n                        strokeDashoffset: 1000,\n                        animation: 'drawLine 6s ease-in-out infinite',\n                      },\n                      '@keyframes drawLine': {\n                        '0%': { strokeDashoffset: 1000 },\n                        '100%': { strokeDashoffset: 0 },\n                      },\n                      '@keyframes drawCandle': {\n                        '0%': { opacity: 0 },\n                        '50%': { opacity: 1 },\n                        '100%': { opacity: 0 },\n                      },\n                    }}\n                  >\n                    <g className=\"grid\">\n                      {Array.from({ length: 6 }).map((_, i) => (\n                        <line\n                          key={`h-${i}`}\n                          x1=\"0\"\n                          y1={i * 60}\n                          x2=\"400\"\n                          y2={i * 60}\n                        />\n                      ))}\n                      {Array.from({ length: 8 }).map((_, i) => (\n                        <line\n                          key={`v-${i}`}\n                          x1={i * 50}\n                          y1=\"0\"\n                          x2={i * 50}\n                          y2=\"300\"\n                        />\n                      ))}\n                    </g>\n                    <g className=\"candle\">\n                      {kLineData.map((candle, i) => (\n                        <g key={i} style={{ animationDelay: `${i * 0.2}s` }}>\n                          <line\n                            x1={i * 20 + 10}\n                            y1={candle.low}\n                            x2={i * 20 + 10}\n                            y2={candle.high}\n                          />\n                          <rect\n                            x={i * 20 + 5}\n                            y={Math.min(candle.open, candle.close)}\n                            width=\"10\"\n                            height={Math.abs(candle.close - candle.open)}\n                            fill={candle.close > candle.open ? '#00FFB8' : '#FF4D4D'}\n                          />\n                        </g>\n                      ))}\n                    </g>\n                    <path\n                      className=\"line\"\n                      d=\"M50,200 C100,150 150,250 200,180 C250,110 300,220 350,150\"\n                    />\n                  </Box>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </Grid>\n        </Grid>\n\n        <Grid \n          container \n          spacing={4} \n          sx={{ \n            mt: { xs: 8, md: 10 }\n          }}\n        >\n          {advantages.map((advantage, index) => (\n            <Grid item xs={12} md={4} key={index}>\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ \n                  duration: 0.8,\n                  delay: index * 0.2,\n                  ease: [0.6, -0.05, 0.01, 0.99]\n                }}\n              >\n                <Card\n                  sx={{\n                    height: { xs: 'auto', md: '280px' },\n                    minHeight: { xs: '240px', md: '280px' },\n                    background: 'rgba(255, 255, 255, 0.9)',\n                    backdropFilter: 'blur(10px)',\n                    boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\n                    border: '1px solid rgba(0, 255, 184, 0.1)',\n                    borderRadius: '16px',\n                    transition: 'all 0.3s ease',\n                    position: 'relative',\n                    overflow: 'hidden',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    width: '100%',\n                    '&::before': {\n                      content: '\"\"',\n                      position: 'absolute',\n                      top: 0,\n                      left: 0,\n                      width: '100%',\n                      height: '100%',\n                      background: 'linear-gradient(45deg, transparent, rgba(0,255,184,0.05), transparent)',\n                      transform: 'translateX(-100%)',\n                      transition: 'transform 0.6s ease',\n                    },\n                    '&:hover': {\n                      transform: 'translateY(-5px)',\n                      boxShadow: '0 8px 30px rgba(0, 255, 184, 0.15)',\n                      border: '1px solid rgba(0, 255, 184, 0.2)',\n                      '&::before': {\n                        transform: 'translateX(100%)',\n                      },\n                    },\n                  }}\n                >\n                  <CardContent sx={{ \n                    p: 3,\n                    height: '100%',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'space-between'\n                  }}>\n                    <Box>\n                      <Box\n                        sx={{\n                          display: 'flex',\n                          alignItems: 'center',\n                          mb: 2,\n                        }}\n                      >\n                        <Box\n                          sx={{\n                            width: 60,\n                            height: 60,\n                            borderRadius: '16px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            bgcolor: 'rgba(0, 255, 184, 0.1)',\n                            mr: 2,\n                          }}\n                        >\n                          {advantage.icon}\n                        </Box>\n                        <Typography\n                          variant=\"h5\"\n                          sx={{\n                            color: '#333333',\n                            fontWeight: 600,\n                          }}\n                        >\n                          {advantage.title}\n                        </Typography>\n                      </Box>\n                      <Typography\n                        variant=\"body1\"\n                        sx={{\n                          color: '#666666',\n                          lineHeight: 1.8,\n                          position: 'relative',\n                          pl: 2,\n                          '&::before': {\n                            content: '\"\"',\n                            position: 'absolute',\n                            left: 0,\n                            top: 0,\n                            width: '2px',\n                            height: '100%',\n                            background: 'linear-gradient(to bottom, #00FFB8, transparent)',\n                            borderRadius: '1px',\n                          },\n                        }}\n                      >\n                        {advantage.description}\n                      </Typography>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n\nexport default HeroSection; ","import React from 'react';\r\nimport { Box, Container, Typography, Grid, Card, CardContent, useTheme } from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Speed as SpeedIcon,\r\n  Security as SecurityIcon,\r\n  Analytics as AnalyticsIcon,\r\n  AutoGraph as AutoGraphIcon,\r\n  Api as ApiIcon,\r\n  SupportAgent as SupportIcon\r\n} from '@mui/icons-material';\r\n\r\nconst features = [\r\n  {\r\n    icon: <SpeedIcon sx={{ fontSize: 40 }} />,\r\n    title: '高速交易',\r\n    description: '毫秒级交易执行，把握每一个市场机会'\r\n  },\r\n  {\r\n    icon: <SecurityIcon sx={{ fontSize: 40 }} />,\r\n    title: '安全可靠',\r\n    description: '多重安全防护，保障您的资产安全'\r\n  },\r\n  {\r\n    icon: <AnalyticsIcon sx={{ fontSize: 40 }} />,\r\n    title: '智能分析',\r\n    description: '基于AI的市场分析，提供精准的交易决策'\r\n  },\r\n  {\r\n    icon: <AutoGraphIcon sx={{ fontSize: 40 }} />,\r\n    title: '自动交易',\r\n    description: '24小时自动运行，无需人工干预'\r\n  },\r\n  {\r\n    icon: <ApiIcon sx={{ fontSize: 40 }} />,\r\n    title: 'API集成',\r\n    description: '支持主流交易所API，轻松接入'\r\n  },\r\n  {\r\n    icon: <SupportIcon sx={{ fontSize: 40 }} />,\r\n    title: '专业支持',\r\n    description: '7x24小时专业团队支持，随时解决您的问题'\r\n  }\r\n];\r\n\r\nconst FeaturesSection: React.FC = () => {\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        py: { xs: 8, md: 12 },\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        bgcolor: '#FFFFFF',\r\n        '&::before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.05) 0%, rgba(0, 255, 184, 0.02) 100%)',\r\n          zIndex: 0,\r\n        },\r\n      }}\r\n    >\r\n      <Container \r\n        maxWidth=\"lg\" \r\n        sx={{ \r\n          position: 'relative', \r\n          zIndex: 1,\r\n          px: { xs: 2, md: 4 }\r\n        }}\r\n      >\r\n        <Box\r\n          component={motion.div}\r\n          initial={{ opacity: 0, y: 20 }}\r\n          whileInView={{ opacity: 1, y: 0 }}\r\n          viewport={{ once: true }}\r\n          transition={{ duration: 0.5 }}\r\n          sx={{ textAlign: 'center', mb: 8 }}\r\n        >\r\n          <Typography\r\n            variant=\"h2\"\r\n            component=\"h2\"\r\n            gutterBottom\r\n            sx={{\r\n              color: '#00FFB8',\r\n              fontWeight: 700,\r\n              fontSize: { xs: '2.5rem', md: '3.5rem' },\r\n              lineHeight: 1.2,\r\n              position: 'relative',\r\n              display: 'inline-block',\r\n              '&::after': {\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                bottom: -10,\r\n                left: '50%',\r\n                transform: 'translateX(-50%)',\r\n                width: '80px',\r\n                height: '4px',\r\n                background: 'linear-gradient(90deg, transparent, #00FFB8, transparent)',\r\n                borderRadius: '2px',\r\n              },\r\n            }}\r\n          >\r\n            核心功能\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h5\"\r\n            color=\"text.secondary\"\r\n            sx={{\r\n              fontSize: { xs: '1.1rem', md: '1.25rem' },\r\n              maxWidth: '800px',\r\n              mx: 'auto',\r\n              opacity: 0.8\r\n            }}\r\n          >\r\n            为您提供全方位的量化交易解决方案\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={2}>\r\n          {features.map((feature, index) => (\r\n            <Grid item xs={12} sm={6} md={4} key={index}>\r\n              <Box\r\n                component={motion.div}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                whileInView={{ opacity: 1, y: 0 }}\r\n                viewport={{ once: true }}\r\n                transition={{ duration: 0.5, delay: index * 0.1 }}\r\n                sx={{ height: '100%' }}\r\n              >\r\n                <Card\r\n                  sx={{\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    bgcolor: 'rgba(255, 255, 255, 0.95)',\r\n                    backdropFilter: 'blur(10px)',\r\n                    borderRadius: '16px',\r\n                    boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\r\n                    border: '1px solid rgba(0, 255, 184, 0.1)',\r\n                    transition: 'all 0.3s ease',\r\n                    '&:hover': {\r\n                      transform: 'translateY(-4px)',\r\n                      boxShadow: '0 8px 30px rgba(0, 255, 184, 0.15)',\r\n                      border: '1px solid rgba(0, 255, 184, 0.2)',\r\n                    },\r\n                  }}\r\n                >\r\n                  <CardContent\r\n                    sx={{\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      alignItems: 'center',\r\n                      textAlign: 'center',\r\n                      p: 3,\r\n                      height: '100%',\r\n                      minHeight: '240px',\r\n                    }}\r\n                  >\r\n                    <Box\r\n                      sx={{\r\n                        width: 60,\r\n                        height: 60,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        bgcolor: 'rgba(0, 255, 184, 0.1)',\r\n                        borderRadius: '16px',\r\n                        mb: 2,\r\n                        color: '#00FFB8',\r\n                      }}\r\n                    >\r\n                      {feature.icon}\r\n                    </Box>\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      component=\"h3\"\r\n                      gutterBottom\r\n                      sx={{\r\n                        fontWeight: 600,\r\n                        color: 'text.primary',\r\n                        mb: 1.5,\r\n                        fontSize: { xs: '1.1rem', md: '1.25rem' },\r\n                      }}\r\n                    >\r\n                      {feature.title}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      color=\"text.secondary\"\r\n                      sx={{\r\n                        opacity: 0.8,\r\n                        lineHeight: 1.5,\r\n                        fontSize: { xs: '0.9rem', md: '0.95rem' },\r\n                      }}\r\n                    >\r\n                      {feature.description}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Box>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FeaturesSection; ","import React from 'react';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Container,\n  useTheme,\n  Card,\n  CardContent,\n  Divider,\n} from '@mui/material';\nimport { motion } from 'framer-motion';\nimport {\n  AccountCircle as AccountIcon,\n  AddCircle as AddIcon,\n  Settings as SettingsIcon,\n  PlayCircle as PlayIcon,\n} from '@mui/icons-material';\nimport { themeUtils } from '../../theme';\n\ninterface Step {\n  id: number;\n  title: string;\n  description: string;\n  icon: React.ReactNode;\n  color: string;\n  time: string;\n}\n\nconst steps: Step[] = [\n  {\n    id: 1,\n    title: '注册账号',\n    description: '快速注册，立即开始您的量化交易之旅',\n    icon: <AccountIcon />,\n    color: '#00FFB8',\n    time: '1分钟',\n  },\n  {\n    id: 2,\n    title: '创建策略',\n    description: '选择或自定义您的交易策略，设置参数',\n    icon: <AddIcon />,\n    color: '#00FFB8',\n    time: '5分钟',\n  },\n  {\n    id: 3,\n    title: '配置账户',\n    description: '连接您的交易账户，设置风险控制',\n    icon: <SettingsIcon />,\n    color: '#00FFB8',\n    time: '3分钟',\n  },\n  {\n    id: 4,\n    title: '开始交易',\n    description: '一键启动，让AI为您自动执行交易',\n    icon: <PlayIcon />,\n    color: '#00FFB8',\n    time: '立即开始',\n  },\n];\n\nconst HowItWorks = () => {\n  const theme = useTheme();\n\n  return (\n    <Box\n      sx={{\n        minHeight: '100vh',\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        py: { xs: 8, md: 12 },\n        overflow: 'hidden',\n        bgcolor: '#FFFFFF',\n        position: 'relative',\n        '&::before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.05) 0%, rgba(0, 255, 184, 0.02) 100%)',\n          zIndex: 0,\n        },\n      }}\n    >\n      <Container maxWidth=\"lg\" sx={{ position: 'relative', zIndex: 1 }}>\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n        >\n          <Typography\n            variant=\"h2\"\n            sx={{\n              color: '#00FFB8',\n              fontWeight: 700,\n              textAlign: 'center',\n              mb: 2,\n              fontSize: { xs: '2.5rem', md: '3.5rem' },\n              lineHeight: 1.2,\n              position: 'relative',\n              display: 'inline-block',\n              left: '50%',\n              transform: 'translateX(-50%)',\n              '&::after': {\n                content: '\"\"',\n                position: 'absolute',\n                bottom: -10,\n                left: '50%',\n                transform: 'translateX(-50%)',\n                width: '80px',\n                height: '4px',\n                background: 'linear-gradient(90deg, transparent, #00FFB8, transparent)',\n                borderRadius: '2px',\n              },\n            }}\n          >\n            使用流程\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            sx={{\n              color: '#666666',\n              textAlign: 'center',\n              mb: 6,\n              fontSize: '1.2rem',\n              maxWidth: '800px',\n              mx: 'auto',\n            }}\n          >\n            简单四步，开启您的量化交易之旅\n          </Typography>\n        </motion.div>\n\n        <Box\n          sx={{\n            position: 'relative',\n            '&::before': {\n              content: '\"\"',\n              position: 'absolute',\n              top: 0,\n              left: '50%',\n              transform: 'translateX(-50%)',\n              width: '2px',\n              height: '100%',\n              background: 'linear-gradient(to bottom, #00FFB8, transparent)',\n              zIndex: 0,\n            },\n          }}\n        >\n          {steps.map((step, index) => (\n            <motion.div\n              key={step.id}\n              initial={{ opacity: 0, x: index % 2 === 0 ? -20 : 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ \n                duration: 0.5,\n                delay: index * 0.1\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  mb: 4,\n                  position: 'relative',\n                  '&:last-child': {\n                    mb: 0,\n                  },\n                }}\n              >\n                <Box\n                  sx={{\n                    width: '50%',\n                    order: index % 2 === 0 ? 1 : 2,\n                    pr: index % 2 === 0 ? 4 : 0,\n                    pl: index % 2 === 0 ? 0 : 4,\n                  }}\n                >\n                  <Card\n                    sx={{\n                      background: 'rgba(255, 255, 255, 0.9)',\n                      backdropFilter: 'blur(10px)',\n                      boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\n                      border: '1px solid rgba(0, 255, 184, 0.1)',\n                      borderRadius: '24px',\n                      transition: 'all 0.3s ease',\n                      '&:hover': {\n                        transform: 'translateY(-5px)',\n                        boxShadow: '0 8px 30px rgba(0, 255, 184, 0.15)',\n                        border: '1px solid rgba(0, 255, 184, 0.2)',\n                      },\n                    }}\n                  >\n                    <CardContent sx={{ p: 4 }}>\n                      <Box\n                        sx={{\n                          display: 'flex',\n                          alignItems: 'center',\n                          mb: 3,\n                        }}\n                      >\n                        <Box\n                          sx={{\n                            width: 64,\n                            height: 64,\n                            borderRadius: '16px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                            bgcolor: 'rgba(0, 255, 184, 0.1)',\n                            color: '#00FFB8',\n                            mr: 3,\n                    position: 'relative',\n                            '&::after': {\n                              content: '\"\"',\n                              position: 'absolute',\n                              top: 0,\n                              left: 0,\n                              right: 0,\n                              bottom: 0,\n                              borderRadius: '16px',\n                              background: 'radial-gradient(circle, rgba(0,255,184,0.2) 0%, rgba(0,255,184,0) 70%)',\n                              animation: 'pulse 3s ease-in-out infinite',\n                              '@keyframes pulse': {\n                                '0%': { transform: 'scale(1)' },\n                                '50%': { transform: 'scale(1.2)' },\n                                '100%': { transform: 'scale(1)' },\n                              },\n                            },\n                  }}\n                >\n                  {step.icon}\n                </Box>\n                        <Box sx={{ flex: 1 }}>\n                <Typography\n                  variant=\"h5\"\n                            sx={{\n                              color: '#333333',\n                              fontWeight: 600,\n                              mb: 1,\n                            }}\n                >\n                  {step.title}\n                </Typography>\n                <Typography\n                            variant=\"h6\"\n                            sx={{\n                              color: '#00FFB8',\n                              fontWeight: 700,\n                              background: 'linear-gradient(90deg, #00FFB8, #00B8FF)',\n                              WebkitBackgroundClip: 'text',\n                              WebkitTextFillColor: 'transparent',\n                            }}\n                          >\n                            预计时间：{step.time}\n                          </Typography>\n                        </Box>\n                      </Box>\n                      <Typography\n                        variant=\"body1\"\n                        sx={{\n                          color: '#666666',\n                          lineHeight: 1.8,\n                          position: 'relative',\n                          pl: 2,\n                          '&::before': {\n                            content: '\"\"',\n                            position: 'absolute',\n                            left: 0,\n                            top: 0,\n                            width: '2px',\n                            height: '100%',\n                            background: 'linear-gradient(to bottom, #00FFB8, transparent)',\n                            borderRadius: '1px',\n                          },\n                        }}\n                >\n                  {step.description}\n                </Typography>\n                    </CardContent>\n                  </Card>\n                </Box>\n                <Box\n                  sx={{\n                    width: '50%',\n                    order: index % 2 === 0 ? 2 : 1,\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                >\n                  <Box\n                    sx={{\n                      width: 40,\n                      height: 40,\n                      borderRadius: '50%',\n                      bgcolor: '#00FFB8',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      color: '#FFFFFF',\n                      fontWeight: 700,\n                      fontSize: '1.2rem',\n                      boxShadow: '0 4px 20px rgba(0, 255, 184, 0.3)',\n                    }}\n                  >\n                    {step.id}\n                  </Box>\n                </Box>\n              </Box>\n            </motion.div>\n          ))}\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default HowItWorks; ","import React from 'react';\r\nimport { Box, Typography, Grid, Container } from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst SecuritySection: React.FC = () => {\r\n  const securityFeatures = [\r\n    {\r\n      title: '资金安全',\r\n      description: '采用多重加密技术，确保用户资金安全',\r\n      icon: '🔒',\r\n    },\r\n    {\r\n      title: '风险控制',\r\n      description: '严格的风险控制体系，保护用户投资安全',\r\n      icon: '🛡️',\r\n    },\r\n    {\r\n      title: '数据加密',\r\n      description: '所有数据采用端到端加密，确保隐私安全',\r\n      icon: '🔐',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        py: { xs: 6, md: 10 },\r\n        overflow: 'visible',\r\n        bgcolor: '#FFFFFF',\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.6 }}\r\n        >\r\n          <Typography\r\n            variant=\"h2\"\r\n            sx={{\r\n              fontSize: { xs: '2rem', sm: '2.5rem', md: '3rem' },\r\n              fontWeight: 700,\r\n              textAlign: 'center',\r\n              mb: 2,\r\n              color: '#00FFB8',\r\n              textShadow: '0 0 10px rgba(0, 255, 184, 0.3)',\r\n            }}\r\n          >\r\n            安全保障\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h4\"\r\n            sx={{\r\n              color: '#666666',\r\n              textAlign: 'center',\r\n              mb: { xs: 4, md: 8 },\r\n              maxWidth: '800px',\r\n              mx: 'auto',\r\n              fontWeight: 400,\r\n              fontSize: { xs: '1.25rem', md: '1.5rem' },\r\n            }}\r\n          >\r\n            多重安全防护，让投资更安心\r\n          </Typography>\r\n        </motion.div>\r\n\r\n        <Grid container spacing={{ xs: 3, md: 4 }}>\r\n          {securityFeatures.map((feature, index) => (\r\n            <Grid item xs={12} md={4} key={index}>\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ duration: 0.6, delay: index * 0.15 }}\r\n                whileHover={{ scale: 1.02 }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    p: { xs: 3, md: 4 },\r\n                    borderRadius: 3,\r\n                    bgcolor: '#FFFFFF',\r\n                    boxShadow: '0 8px 30px rgba(0, 0, 0, 0.08)',\r\n                    height: '100%',\r\n                    transition: 'all 0.3s ease',\r\n                    border: '1px solid rgba(0, 255, 184, 0.1)',\r\n                    '&:hover': {\r\n                      bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                      transform: 'translateY(-8px)',\r\n                      boxShadow: '0 12px 40px rgba(0, 255, 184, 0.15)',\r\n                      borderColor: 'rgba(0, 255, 184, 0.3)',\r\n                    },\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    variant=\"h1\"\r\n                    sx={{\r\n                      mb: 3,\r\n                      fontSize: { xs: '2.5rem', md: '3rem' },\r\n                      textAlign: 'center',\r\n                      color: '#00FFB8',\r\n                      textShadow: '0 0 10px rgba(0, 255, 184, 0.3)',\r\n                    }}\r\n                  >\r\n                    {feature.icon}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"h4\"\r\n                    sx={{\r\n                      mb: 2,\r\n                      textAlign: 'center',\r\n                      color: '#00FFB8',\r\n                      fontWeight: 600,\r\n                      fontSize: { xs: '1.25rem', md: '1.5rem' },\r\n                    }}\r\n                  >\r\n                    {feature.title}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    sx={{\r\n                      textAlign: 'center',\r\n                      color: '#666666',\r\n                      lineHeight: 1.8,\r\n                      fontSize: { xs: '0.9rem', md: '1rem' },\r\n                    }}\r\n                  >\r\n                    {feature.description}\r\n                  </Typography>\r\n                </Box>\r\n              </motion.div>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SecuritySection; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Avatar,\r\n  Container,\r\n  alpha,\r\n  useTheme,\r\n  Card,\r\n  CardContent,\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport { themeUtils } from '../../theme';\r\n\r\ninterface Review {\r\n  name: string;\r\n  country: string;\r\n  avatar: string;\r\n  amount: string;\r\n  content: string;\r\n  time: string;\r\n}\r\n\r\nconst UserReviews = () => {\r\n  const theme = useTheme();\r\n  const [reviews, setReviews] = useState<Review[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const generateRandomReviews = () => {\r\n      const countries = [\r\n        { \r\n          name: '中国', \r\n          flag: '🇨🇳',\r\n          nicknames: [\r\n            '星辰大海', '风清扬', '逍遥子', '云游四海', '笑看风云',\r\n            '追梦人', '独行侠', '浪迹天涯', '清风徐来', '明月照我心'\r\n          ]\r\n        },\r\n        { \r\n          name: '美国', \r\n          flag: '🇺🇸',\r\n          nicknames: [\r\n            'CryptoKing', 'BitcoinPro', 'TradingMaster', 'DigitalNomad', 'BlockchainGuru',\r\n            'CryptoTrader', 'BitcoinHunter', 'TradingNinja', 'DigitalExplorer', 'BlockchainWizard'\r\n          ]\r\n        },\r\n        { \r\n          name: '日本', \r\n          flag: '🇯🇵',\r\n          nicknames: [\r\n            '桜の風', '月の光', '星の海', '雲の上', '風の道',\r\n            '花の香', '空の色', '夢の翼', '光の道', '虹の橋'\r\n          ]\r\n        },\r\n        { \r\n          name: '韩国', \r\n          flag: '🇰🇷',\r\n          nicknames: [\r\n            '별빛', '달빛', '꿈의여행', '하늘길', '바람길',\r\n            '별의노래', '달의노래', '꿈의노래', '하늘의노래', '바람의노래'\r\n          ]\r\n        },\r\n        { \r\n          name: '英国', \r\n          flag: '🇬🇧',\r\n          nicknames: [\r\n            'CryptoLord', 'BitcoinBaron', 'TradingKnight', 'DigitalDuke', 'BlockchainEarl',\r\n            'CryptoCount', 'BitcoinViscount', 'TradingBaronet', 'DigitalKnight', 'BlockchainSquire'\r\n          ]\r\n        },\r\n        { \r\n          name: '德国', \r\n          flag: '🇩🇪',\r\n          nicknames: [\r\n            'KryptoKönig', 'BitcoinMeister', 'Handelsmeister', 'DigitalExperte', 'BlockchainProfi',\r\n            'KryptoExperte', 'BitcoinProfi', 'Handelsprofi', 'DigitalMeister', 'BlockchainMeister'\r\n          ]\r\n        },\r\n        { \r\n          name: '法国', \r\n          flag: '🇫🇷',\r\n          nicknames: [\r\n            'RoiCrypto', 'MaîtreBitcoin', 'MaîtreTrading', 'ExpertDigital', 'ProBlockchain',\r\n            'ExpertCrypto', 'ProBitcoin', 'ExpertTrading', 'MaîtreDigital', 'ProDigital'\r\n          ]\r\n        },\r\n        { \r\n          name: '俄罗斯', \r\n          flag: '🇷🇺',\r\n          nicknames: [\r\n            'КриптоКороль', 'БиткойнМастер', 'ТрейдингЭксперт', 'ЦифровойГуру', 'БлокчейнПрофи',\r\n            'КриптоЭксперт', 'БиткойнПрофи', 'ТрейдингПрофи', 'ЦифровойПрофи', 'БлокчейнМастер'\r\n          ]\r\n        }\r\n      ];\r\n\r\n      const contents = [\r\n        '熊猫量化真是太棒了！收益稳定，操作简单，非常适合新手。',\r\n        '使用熊猫量化后，我的投资收益翻了一倍，感谢这个平台！',\r\n        '作为一个上班族，熊猫量化帮我实现了财务自由的第一步。',\r\n        '熊猫量化的策略非常稳健，让我在熊市也能保持盈利。',\r\n        '这是我用过的最好的量化交易平台，强烈推荐！',\r\n        '熊猫量化的客服团队非常专业，解决问题很及时。',\r\n        '界面设计很人性化，功能也很强大，非常满意！',\r\n        '熊猫量化的风控做得很好，让我很放心。',\r\n      ];\r\n\r\n      const newReviews = Array.from({ length: 20 }, (_, i) => {\r\n        const country = countries[Math.floor(Math.random() * countries.length)];\r\n        const isMale = Math.random() > 0.5;\r\n        const randomAmount = (Math.random() * 10000 + 1000).toFixed(2);\r\n        const randomHours = Math.floor(Math.random() * 24);\r\n        const randomMinutes = Math.floor(Math.random() * 60);\r\n        const date = new Date();\r\n        date.setHours(randomHours);\r\n        date.setMinutes(randomMinutes);\r\n\r\n        const nickname = country.nicknames[Math.floor(Math.random() * country.nicknames.length)];\r\n\r\n        return {\r\n          name: nickname,\r\n          country: `${country.flag} ${country.name}`,\r\n          avatar: isMale ? '👨' : '👩',\r\n          amount: `${randomAmount} USDT`,\r\n          content: contents[Math.floor(Math.random() * contents.length)],\r\n          time: date.toLocaleTimeString('zh-CN', { hour: '2-digit', minute: '2-digit' }),\r\n        };\r\n      });\r\n\r\n      return newReviews;\r\n    };\r\n\r\n    const generatedReviews = generateRandomReviews();\r\n    setReviews(generatedReviews);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '200px' }}>\r\n        <Typography>加载中...</Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (!reviews || reviews.length === 0) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '200px' }}>\r\n        <Typography>暂无评论</Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        py: { xs: 0.5, md: 1 },\r\n        overflow: 'hidden',\r\n        bgcolor: '#FFFFFF',\r\n        position: 'relative',\r\n        '&::before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.05) 0%, rgba(0, 255, 184, 0.02) 100%)',\r\n          zIndex: 0,\r\n        },\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\" sx={{ position: 'relative', zIndex: 1 }}>\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          <Typography\r\n            variant=\"h2\"\r\n            sx={{\r\n              color: '#00FFB8',\r\n              fontWeight: 700,\r\n              textAlign: 'center',\r\n              mb: 2,\r\n              fontSize: { xs: '2.5rem', md: '3.5rem' },\r\n              lineHeight: 1.2,\r\n              position: 'relative',\r\n              display: 'inline-block',\r\n              left: '50%',\r\n              transform: 'translateX(-50%)',\r\n              '&::after': {\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                bottom: -10,\r\n                left: '50%',\r\n                transform: 'translateX(-50%)',\r\n                width: '80px',\r\n                height: '4px',\r\n                background: 'linear-gradient(90deg, transparent, #00FFB8, transparent)',\r\n                borderRadius: '2px',\r\n              },\r\n            }}\r\n          >\r\n            用户评价\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body1\"\r\n            sx={{\r\n              color: '#666666',\r\n              textAlign: 'center',\r\n              mb: 1,\r\n              fontSize: '1.2rem',\r\n              maxWidth: '800px',\r\n              mx: 'auto',\r\n            }}\r\n          >\r\n            听听用户怎么说\r\n          </Typography>\r\n        </motion.div>\r\n\r\n        <Box\r\n          sx={{\r\n            height: '300px',\r\n            overflow: 'hidden',\r\n            position: 'relative',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <motion.div\r\n            animate={{\r\n              x: [0, -2000],\r\n            }}\r\n            transition={{ \r\n              duration: 40,\r\n              repeat: Infinity,\r\n              ease: \"linear\",\r\n            }}\r\n          >\r\n            <Box \r\n              sx={{ \r\n                display: 'flex', \r\n                flexDirection: 'row',\r\n                gap: 3,\r\n                width: 'max-content',\r\n                padding: '0 20px',\r\n              }}\r\n            >\r\n              {reviews.map((review, index) => (\r\n                <motion.div\r\n                  key={index}\r\n                  initial={{ opacity: 0, x: 20 }}\r\n                  animate={{ opacity: 1, x: 0 }}\r\n                  transition={{ duration: 0.5 }}\r\n                  style={{ minWidth: '300px' }}\r\n                >\r\n                  <Card\r\n                    sx={{\r\n                      height: '100%',\r\n                      background: 'rgba(255, 255, 255, 0.9)',\r\n                      backdropFilter: 'blur(10px)',\r\n                      boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\r\n                      border: '1px solid rgba(0, 255, 184, 0.1)',\r\n                      borderRadius: '24px',\r\n                      transition: 'all 0.3s ease',\r\n                      position: 'relative',\r\n                      overflow: 'hidden',\r\n                      '&::before': {\r\n                        content: '\"\"',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        background: 'linear-gradient(45deg, transparent, rgba(0,255,184,0.05), transparent)',\r\n                        transform: 'translateX(-100%)',\r\n                        transition: 'transform 0.6s ease',\r\n                      },\r\n                      '&:hover': {\r\n                        transform: 'translateY(-5px)',\r\n                        boxShadow: '0 8px 30px rgba(0, 255, 184, 0.15)',\r\n                        border: '1px solid rgba(0, 255, 184, 0.2)',\r\n                        '&::before': {\r\n                          transform: 'translateX(100%)',\r\n                        },\r\n                      },\r\n                    }}\r\n                  >\r\n                    <CardContent sx={{ p: 4 }}>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                        <Avatar\r\n                          sx={{\r\n                            width: 40,\r\n                            height: 40,\r\n                            fontSize: '1.5rem',\r\n                            mr: 2,\r\n                            background: 'linear-gradient(135deg, #00FFB8 0%, #00B8FF 100%)',\r\n                            color: '#FFFFFF',\r\n                            boxShadow: '0 0 10px rgba(0, 255, 184, 0.5)',\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            border: '2px solid rgba(255, 255, 255, 0.5)',\r\n                          }}\r\n                        >\r\n                          {review.avatar}\r\n                        </Avatar>\r\n                        <Box>\r\n                          <Typography\r\n                            sx={{\r\n                              fontWeight: 500,\r\n                              background: 'linear-gradient(135deg, #00FFB8 0%, #00B8FF 100%)',\r\n                              WebkitBackgroundClip: 'text',\r\n                              WebkitTextFillColor: 'transparent',\r\n                            }}\r\n                          >\r\n                            {review.name}\r\n                          </Typography>\r\n                          <Typography\r\n                            sx={{\r\n                              color: '#666666',\r\n                            }}\r\n                          >\r\n                            {review.country}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n                      <Typography\r\n                        sx={{\r\n                          color: '#333333',\r\n                          mb: 2,\r\n                          lineHeight: 1.6,\r\n                        }}\r\n                      >\r\n                        {review.content}\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                        <Typography\r\n                          sx={{\r\n                            color: '#00FFB8',\r\n                            fontWeight: 500,\r\n                          }}\r\n                        >\r\n                          {review.amount}\r\n                        </Typography>\r\n                        <Typography\r\n                          sx={{\r\n                            color: '#666666',\r\n                          }}\r\n                        >\r\n                          {review.time}\r\n                        </Typography>\r\n                      </Box>\r\n                    </CardContent>\r\n                  </Card>\r\n                </motion.div>\r\n              ))}\r\n            </Box>\r\n          </motion.div>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserReviews; ","import React, { useState, useMemo, useEffect, useRef } from 'react';\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  IconButton,\n  useTheme,\n  Grid,\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Container,\n  Chip,\n  Avatar,\n  Divider,\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  ContentCopy as ContentCopyIcon,\n  Share as ShareIcon,\n  CheckCircle as CheckCircleIcon,\n  ArrowForward as ArrowForwardIcon,\n  Person as PersonIcon,\n  AttachMoney as MoneyIcon,\n  AccessTime as TimeIcon,\n  People as PeopleIcon,\n  AccountCircle as AccountCircleIcon,\n  AccessTime as AccessTimeIcon,\n} from '@mui/icons-material';\nimport { useAuth } from '../../contexts/AuthContext';\n\ninterface CommissionRecord {\n  username: string;\n  amount: number;\n  time: string;\n}\n\ninterface User {\n  inviteCode?: string;\n  // Add other user properties as needed\n}\n\nconst InviteSection = () => {\n  const { t } = useTranslation();\n  const theme = useTheme();\n  const [copySuccess, setCopySuccess] = useState(false);\n  const { user } = useAuth();\n  const inviteCode = (user as User)?.inviteCode || '';\n  const [records, setRecords] = useState<CommissionRecord[]>([]);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [isScrolling, setIsScrolling] = useState(true);\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n\n  // 生成随机用户名\n  const generateRandomUsername = () => {\n    const letters = 'abcdefghijklmnopqrstuvwxyz';\n    const numbers = '0123456789';\n    let tail = '';\n    \n    // 生成6位尾号（字母和数字混合）\n    for (let i = 0; i < 6; i++) {\n      const isLetter = Math.random() > 0.3; // 70%概率是字母\n      tail += isLetter \n        ? letters.charAt(Math.floor(Math.random() * letters.length))\n        : numbers.charAt(Math.floor(Math.random() * numbers.length));\n    }\n    \n    return `用户${tail}****`;\n  };\n\n  // 生成随机返佣记录\n  const generateRandomRecord = () => {\n    const randomUsername = generateRandomUsername();\n    // 使用指数分布生成更真实的金额分布\n    const getRandomAmount = () => {\n      const random = Math.random();\n      if (random < 0.6) { // 60%的概率是小额\n        return Math.floor(Math.random() * 100) + 1; // 1-100 USDT\n      } else if (random < 0.9) { // 30%的概率是中等金额\n        return Math.floor(Math.random() * 900) + 100; // 100-1000 USDT\n      } else { // 10%的概率是大额\n        return Math.floor(Math.random() * 9000) + 1000; // 1000-10000 USDT\n      }\n    };\n    const randomAmount = getRandomAmount();\n    const now = new Date();\n    const time = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}`;\n    \n    return {\n      username: randomUsername,\n      amount: randomAmount,\n      time,\n    };\n  };\n\n  useEffect(() => {\n    // 初始化10条记录\n    const initialRecords = Array.from({ length: 10 }, () => generateRandomRecord());\n    setRecords(initialRecords);\n\n    // 每3秒添加一条新记录\n    const interval = setInterval(() => {\n      setRecords(prev => {\n        const newRecord = generateRandomRecord();\n        return [...prev.slice(1), newRecord];\n      });\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // 自动滚动到底部\n  useEffect(() => {\n    if (scrollContainerRef.current) {\n      scrollContainerRef.current.scrollTop = scrollContainerRef.current.scrollHeight;\n    }\n  }, [records]);\n\n  // 格式化时间\n  const formatTime = (time: string) => {\n    return time;\n  };\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(inviteCode);\n      setCopySuccess(true);\n      setTimeout(() => setCopySuccess(false), 300);\n    } catch (err) {\n      console.error('Failed to copy text: ', err);\n    }\n  };\n\n  const handleShare = () => {\n    const shareText = t('invite.share.text', { code: inviteCode });\n    if (navigator.share) {\n      navigator.share({\n        title: t('invite.share.title'),\n        text: shareText,\n      }).catch(console.error);\n    } else {\n      navigator.clipboard.writeText(shareText);\n      setCopySuccess(true);\n      setTimeout(() => setCopySuccess(false), 300);\n    }\n  };\n\n  const inviteBenefits = useMemo(() => [\n    {\n      level: t('invite.benefits.0.level', '一代'),\n      rate: t('invite.benefits.0.rate', '20%'),\n      description: t('invite.benefits.0.description', '直接邀请好友，获得其收益的20%'),\n      color: theme.palette.primary.main,\n    },\n    {\n      level: t('invite.benefits.1.level', '二代'),\n      rate: t('invite.benefits.1.rate', '10%'),\n      description: t('invite.benefits.1.description', '好友邀请的好友，获得其收益的10%'),\n      color: theme.palette.primary.main,\n    },\n  ], [t, theme.palette]);\n\n  const inviteData = useMemo(() => ({\n    title: t('invite.title', '邀请返佣'),\n    subtitle: t('invite.subtitle', '推荐好友赚 USDT，享受多重收益'),\n    levels: [\n      {\n        level: t('invite.levels.1', '一代'),\n        commission: '20%',\n        description: t('invite.levels.1.description', '直接推荐好友的交易手续费'),\n      },\n      {\n        level: t('invite.levels.2', '二代'),\n        commission: '10%',\n        description: t('invite.levels.2.description', '间接推荐好友的交易手续费'),\n      },\n    ],\n    features: [\n      t('invite.features.0', '实时返佣，自动结算'),\n      t('invite.features.1', '多级返佣，收益倍增'),\n      t('invite.features.2', '透明数据，随时查看'),\n    ],\n  }), [t]);\n\n  return (\n    <Box\n      sx={{\n        minHeight: '100vh',\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        py: { xs: 8, md: 12 },\n        overflow: 'hidden',\n        bgcolor: '#FFFFFF',\n        position: 'relative',\n        '&::before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.05) 0%, rgba(0, 255, 184, 0.02) 100%)',\n          zIndex: 0,\n        },\n      }}\n    >\n      <Container maxWidth=\"lg\" sx={{ position: 'relative', zIndex: 1 }}>\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n        >\n          <Typography\n            variant=\"h2\"\n            sx={{\n              color: '#00FFB8',\n              fontWeight: 700,\n              textAlign: 'center',\n              mb: 2,\n              fontSize: { xs: '2.5rem', md: '3.5rem' },\n              lineHeight: 1.2,\n              position: 'relative',\n              display: 'inline-block',\n              left: '50%',\n              transform: 'translateX(-50%)',\n              '&::after': {\n                content: '\"\"',\n                position: 'absolute',\n                bottom: -10,\n                left: '50%',\n                transform: 'translateX(-50%)',\n                width: '80px',\n                height: '4px',\n                background: 'linear-gradient(90deg, transparent, #00FFB8, transparent)',\n                borderRadius: '2px',\n              },\n            }}\n          >\n            邀请返佣\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            sx={{\n              color: '#666666',\n              textAlign: 'center',\n              mb: 6,\n              fontSize: '1.2rem',\n              maxWidth: '800px',\n              mx: 'auto',\n            }}\n          >\n            推荐好友赚 USDT，享受多重收益\n          </Typography>\n        </motion.div>\n\n        <Grid container spacing={4}>\n          <Grid item xs={12} md={6}>\n            <motion.div\n              initial={{ opacity: 0, x: -50 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.5 }}\n            >\n              <Card\n                sx={{\n                  height: '100%',\n                  background: 'rgba(255, 255, 255, 0.9)',\n                  backdropFilter: 'blur(10px)',\n                  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\n                  border: '1px solid rgba(0, 255, 184, 0.1)',\n                  borderRadius: '24px',\n                  transition: 'all 0.3s ease',\n                  position: 'relative',\n                  overflow: 'hidden',\n                  '&::before': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    background: 'linear-gradient(45deg, transparent, rgba(0,255,184,0.05), transparent)',\n                    transform: 'translateX(-100%)',\n                    transition: 'transform 0.6s ease',\n                  },\n                  '&:hover': {\n                    transform: 'translateY(-5px)',\n                    boxShadow: '0 8px 30px rgba(0, 255, 184, 0.15)',\n                    border: '1px solid rgba(0, 255, 184, 0.2)',\n                    '&::before': {\n                      transform: 'translateX(100%)',\n                    },\n                  },\n                }}\n              >\n                <CardContent sx={{ p: 4 }}>\n                  <Typography\n                    variant=\"h5\"\n                    sx={{\n                      color: '#333333',\n                      fontWeight: 600,\n                      mb: 3,\n                    }}\n                  >\n                    邀请链接\n                  </Typography>\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      flexDirection: 'column',\n                      gap: 2,\n                    }}\n                  >\n                    {inviteBenefits.map((benefit, index) => (\n                      <Box\n                        key={index}\n                        sx={{\n                          display: 'flex',\n                          alignItems: 'center',\n                          gap: 2,\n                          p: 2,\n                          borderRadius: '12px',\n                          bgcolor: 'rgba(0, 255, 184, 0.05)',\n                        }}\n                      >\n                        <Avatar\n                          sx={{\n                            width: 40,\n                            height: 40,\n                            bgcolor: 'rgba(0, 255, 184, 0.1)',\n                            color: '#00FFB8',\n                          }}\n                        >\n                          {index + 1}\n                        </Avatar>\n                        <Box sx={{ flex: 1 }}>\n                          <Typography\n                            variant=\"subtitle1\"\n                            sx={{\n                              color: '#333333',\n                              fontWeight: 600,\n                            }}\n                          >\n                            {benefit.level}返佣 {benefit.rate}\n                          </Typography>\n                          <Typography\n                            variant=\"body2\"\n                            sx={{\n                              color: '#666666',\n                            }}\n                          >\n                            {benefit.description}\n                          </Typography>\n                        </Box>\n                      </Box>\n                    ))}\n                  </Box>\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      flexDirection: 'column',\n                      gap: 2,\n                      mt: 2,\n                    }}\n                  >\n                    <Typography\n                      variant=\"subtitle1\"\n                      sx={{\n                        color: '#333333',\n                        fontWeight: 600,\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: 1,\n                      }}\n                    >\n                      <ShareIcon sx={{ color: '#00FFB8' }} />\n                      邀请链接\n                    </Typography>\n                    {user ? (\n                      <Box\n                        sx={{\n                          display: 'flex',\n                          gap: 2,\n                        }}\n                      >\n                        <TextField\n                          fullWidth\n                          value={`https://panda-quant.com/invite/${inviteCode}`}\n                          InputProps={{\n                            readOnly: true,\n                            sx: {\n                              borderRadius: '12px',\n                              bgcolor: 'rgba(0, 255, 184, 0.05)',\n                              '& fieldset': {\n                                borderColor: 'rgba(0, 255, 184, 0.2)',\n                              },\n                              '& input': {\n                                color: '#333333',\n                                fontWeight: 500,\n                              },\n                            },\n                          }}\n                        />\n                        <Button\n                          variant=\"contained\"\n                          onClick={handleCopy}\n                          sx={{\n                            bgcolor: 'rgba(0, 255, 184, 0.1)',\n                            color: '#00FFB8',\n                            minWidth: 'auto',\n                            px: 2,\n                            borderRadius: '12px',\n                            '&:hover': {\n                              bgcolor: 'rgba(0, 255, 184, 0.2)',\n                            },\n                          }}\n                        >\n                          {copySuccess ? <CheckCircleIcon /> : <ContentCopyIcon />}\n                        </Button>\n                      </Box>\n                    ) : (\n                      <Box\n                        sx={{\n                          p: 3,\n                          borderRadius: '12px',\n                          bgcolor: 'rgba(0, 255, 184, 0.05)',\n                          textAlign: 'center',\n                        }}\n                      >\n                      <Typography\n                        variant=\"body1\"\n                        sx={{\n                          color: '#666666',\n                            mb: 2,\n                        }}\n                      >\n                          登录后即可获取专属邀请链接\n                      </Typography>\n                      <Button\n                        variant=\"contained\"\n                        href=\"/login\"\n                        sx={{\n                          bgcolor: '#00FFB8',\n                            color: '#FFFFFF',\n                            px: 4,\n                            py: 1.5,\n                            borderRadius: '12px',\n                            fontSize: '1.1rem',\n                          fontWeight: 600,\n                          '&:hover': {\n                              bgcolor: '#00E0A3',\n                          },\n                        }}\n                      >\n                          立即登录\n                      </Button>\n                    </Box>\n                  )}\n                  </Box>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <motion.div\n              initial={{ opacity: 0, x: 50 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.5 }}\n            >\n              <Card\n                sx={{\n                  height: '100%',\n                  background: 'rgba(255, 255, 255, 0.9)',\n                  backdropFilter: 'blur(10px)',\n                  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\n                  border: '1px solid rgba(0, 255, 184, 0.1)',\n                  borderRadius: '24px',\n                  transition: 'all 0.3s ease',\n                  position: 'relative',\n                  overflow: 'hidden',\n                  '&::before': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    background: 'linear-gradient(45deg, transparent, rgba(0,255,184,0.05), transparent)',\n                    transform: 'translateX(-100%)',\n                    transition: 'transform 0.6s ease',\n                  },\n                  '&:hover': {\n                    transform: 'translateY(-5px)',\n                    boxShadow: '0 8px 30px rgba(0, 255, 184, 0.15)',\n                    border: '1px solid rgba(0, 255, 184, 0.2)',\n                    '&::before': {\n                      transform: 'translateX(100%)',\n                    },\n                  },\n                }}\n              >\n                <CardContent sx={{ p: 4 }}>\n                  <Typography\n                    variant=\"h5\"\n                    sx={{\n                      color: '#333333',\n                      fontWeight: 600,\n                      mb: 3,\n                    }}\n                  >\n                    实时返佣记录\n                  </Typography>\n                  <Box sx={{ mb: 2 }}>\n                    <Typography\n                      variant=\"h6\"\n                      sx={{\n                        color: '#00FFB8',\n                        fontWeight: 600,\n                        mb: 1,\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: 1,\n                      }}\n                    >\n                      <PeopleIcon />\n                      实时返佣\n                    </Typography>\n                    <Box\n                      ref={scrollContainerRef}\n                      sx={{\n                        height: '400px',\n                        width: '100%',\n                        overflow: 'hidden',\n                        position: 'relative',\n                        '&::before, &::after': {\n                          content: '\"\"',\n                          position: 'absolute',\n                          left: 0,\n                          right: 0,\n                          height: '40px',\n                          zIndex: 1,\n                          pointerEvents: 'none',\n                        },\n                        '&::before': {\n                          top: 0,\n                          background: 'linear-gradient(to bottom, rgba(255,255,255,0.9), transparent)',\n                        },\n                        '&::after': {\n                          bottom: 0,\n                          background: 'linear-gradient(to top, rgba(255,255,255,0.9), transparent)',\n                        },\n                      }}\n                    >\n                      <Box\n                        sx={{\n                          height: '100%',\n                          width: '100%',\n                          overflowY: 'auto',\n                          scrollBehavior: 'smooth',\n                          '&::-webkit-scrollbar': {\n                            width: '4px',\n                          },\n                          '&::-webkit-scrollbar-track': {\n                            background: 'rgba(0, 255, 184, 0.1)',\n                            borderRadius: '2px',\n                          },\n                          '&::-webkit-scrollbar-thumb': {\n                            background: '#00FFB8',\n                            borderRadius: '2px',\n                          },\n                        }}\n                      >\n                        <AnimatePresence mode=\"popLayout\">\n                          {records.map((record, index) => (\n                            <motion.div\n                              key={index}\n                              initial={{ \n                                opacity: 0, \n                                y: 200,\n                                scale: 0.8,\n                                '--blur': '4px',\n                                x: 50\n                              }}\n                              animate={{ \n                                opacity: 1, \n                                y: 0,\n                                scale: 1,\n                                '--blur': '0px',\n                                x: 0\n                              }}\n                              exit={{ \n                                opacity: 0, \n                                y: -150,\n                                scale: 1.2,\n                                '--blur': '4px',\n                                x: -50\n                              }}\n                              style={{\n                                filter: 'blur(var(--blur))'\n                              }}\n                              transition={{ \n                                duration: 0.8,\n                                delay: index * 0.15,\n                                type: \"spring\",\n                                stiffness: 150,\n                                damping: 12,\n                                mass: 0.8,\n                                exit: {\n                                  duration: 0.5,\n                                  ease: \"easeInOut\"\n                                }\n                              }}\n                              layout\n                            >\n                              <Box\n                                sx={{\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  justifyContent: 'space-between',\n                                  p: 3,\n                                  mb: 2,\n                                  mx: 3,\n                                  borderRadius: 4,\n                                  bgcolor: 'rgba(0, 255, 184, 0.05)',\n                                  border: '1px solid rgba(0, 255, 184, 0.2)',\n                                  boxShadow: '0 4px 12px rgba(0, 255, 184, 0.15)',\n                                  transform: 'translateZ(0)',\n                                  '&:hover': {\n                                    bgcolor: 'rgba(0, 255, 184, 0.08)',\n                                    transform: 'translateY(-2px) scale(1.02)',\n                                    boxShadow: '0 6px 16px rgba(0, 255, 184, 0.2)',\n                                  },\n                                  transition: 'all 0.3s ease',\n                                }}\n                              >\n                                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2.5 }}>\n                                  <AccountCircleIcon sx={{ \n                                    color: '#00FFB8',\n                                    fontSize: '2.5rem',\n                                    filter: 'drop-shadow(0 2px 4px rgba(0, 255, 184, 0.3))'\n                                  }} />\n                                  <Box>\n                                    <Typography\n                                      variant=\"body2\"\n                                      sx={{\n                                        color: '#00FFB8',\n                                        fontWeight: 600,\n                                        fontSize: '1.2rem',\n                                      }}\n                                    >\n                                      {record.username}\n                                    </Typography>\n                                    <Typography\n                                      variant=\"caption\"\n                                      sx={{\n                                        color: 'rgba(0, 255, 184, 0.7)',\n                                        fontSize: '0.9rem',\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        gap: 0.5,\n                                      }}\n                                    >\n                                      <AccessTimeIcon sx={{ fontSize: '1rem' }} />\n                                      {formatTime(record.time)}\n                                    </Typography>\n                                  </Box>\n                                </Box>\n                                <Typography\n                                  variant=\"body2\"\n                                  sx={{\n                                    color: '#00FFB8',\n                                    fontWeight: 700,\n                                    fontSize: '1.3rem',\n                                    textShadow: '0 2px 4px rgba(0, 255, 184, 0.3)',\n                                  }}\n                                >\n                                  +{record.amount.toLocaleString()} USDT\n                                </Typography>\n                              </Box>\n                            </motion.div>\n                          ))}\n                        </AnimatePresence>\n                      </Box>\n                    </Box>\n                  </Box>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n\nexport default InviteSection; ","import React from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  useTheme,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  Avatar,\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  SupportAgent as SupportIcon,\r\n  Email as EmailIcon,\r\n  Forum as ForumIcon,\r\n  HelpCenter as HelpIcon,\r\n} from '@mui/icons-material';\r\n\r\ninterface Support {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  icon: React.ReactNode;\r\n  color: string;\r\n  action: string;\r\n}\r\n\r\nconst supports: Support[] = [\r\n  {\r\n    id: 1,\r\n    title: '在线客服',\r\n    description: '7x24小时专业客服团队，随时解答您的问题',\r\n    icon: <SupportIcon />,\r\n    color: '#00FFB8',\r\n    action: '联系客服',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: '邮件支持',\r\n    description: '发送邮件至 support@pandaquant.com，我们将在24小时内回复',\r\n    icon: <EmailIcon />,\r\n    color: '#00FFB8',\r\n    action: '发送邮件',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: '社区论坛',\r\n    description: '加入我们的社区，与其他用户交流经验，分享心得',\r\n    icon: <ForumIcon />,\r\n    color: '#00FFB8',\r\n    action: '加入社区',\r\n  },\r\n  {\r\n    id: 4,\r\n    title: '帮助中心',\r\n    description: '查看常见问题解答，快速解决您的问题',\r\n    icon: <HelpIcon />,\r\n    color: '#00FFB8',\r\n    action: '查看帮助',\r\n  },\r\n];\r\n\r\nconst SupportSection = () => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        py: { xs: 8, md: 12 },\r\n        overflow: 'hidden',\r\n        bgcolor: '#FFFFFF',\r\n        position: 'relative',\r\n        '&::before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.05) 0%, rgba(0, 255, 184, 0.02) 100%)',\r\n          zIndex: 0,\r\n        },\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\" sx={{ position: 'relative', zIndex: 1 }}>\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          <Typography\r\n            variant=\"h2\"\r\n            sx={{\r\n              color: '#00FFB8',\r\n              fontWeight: 700,\r\n              textAlign: 'center',\r\n              mb: 2,\r\n              fontSize: { xs: '2.5rem', md: '3.5rem' },\r\n              lineHeight: 1.2,\r\n              position: 'relative',\r\n              display: 'inline-block',\r\n              left: '50%',\r\n              transform: 'translateX(-50%)',\r\n              '&::after': {\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                bottom: -10,\r\n                left: '50%',\r\n                transform: 'translateX(-50%)',\r\n                width: '80px',\r\n                height: '4px',\r\n                background: 'linear-gradient(90deg, transparent, #00FFB8, transparent)',\r\n                borderRadius: '2px',\r\n              },\r\n            }}\r\n          >\r\n            支持服务\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body1\"\r\n            sx={{\r\n              color: '#666666',\r\n              textAlign: 'center',\r\n              mb: 6,\r\n              fontSize: '1.2rem',\r\n              maxWidth: '800px',\r\n              mx: 'auto',\r\n            }}\r\n          >\r\n            全方位的支持服务，让您的交易之旅更加顺畅\r\n          </Typography>\r\n        </motion.div>\r\n\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: { xs: 'column', md: 'row' },\r\n            gap: 4,\r\n            position: 'relative',\r\n          }}\r\n        >\r\n          {supports.map((support, index) => (\r\n            <motion.div\r\n              key={support.id}\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ \r\n                duration: 0.5,\r\n                delay: index * 0.1\r\n              }}\r\n              style={{ flex: 1 }}\r\n            >\r\n              <Card\r\n                sx={{\r\n                  height: '100%',\r\n                  background: 'rgba(255, 255, 255, 0.9)',\r\n                  backdropFilter: 'blur(10px)',\r\n                  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\r\n                  border: '1px solid rgba(0, 255, 184, 0.1)',\r\n                  borderRadius: '24px',\r\n                  transition: 'all 0.3s ease',\r\n                  position: 'relative',\r\n                  overflow: 'hidden',\r\n                  '&::before': {\r\n                    content: '\"\"',\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    background: 'linear-gradient(45deg, transparent, rgba(0,255,184,0.05), transparent)',\r\n                    transform: 'translateX(-100%)',\r\n                    transition: 'transform 0.6s ease',\r\n                  },\r\n                  '&:hover': {\r\n                    transform: 'translateY(-5px)',\r\n                    boxShadow: '0 8px 30px rgba(0, 255, 184, 0.15)',\r\n                    border: '1px solid rgba(0, 255, 184, 0.2)',\r\n                    '&::before': {\r\n                      transform: 'translateX(100%)',\r\n                    },\r\n                  },\r\n                }}\r\n              >\r\n                <CardContent sx={{ p: 4 }}>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      alignItems: 'center',\r\n                      textAlign: 'center',\r\n                      height: '100%',\r\n                    }}\r\n                  >\r\n                    <Avatar\r\n                      sx={{\r\n                        width: 80,\r\n                        height: 80,\r\n                        bgcolor: 'rgba(0, 255, 184, 0.1)',\r\n                        color: '#00FFB8',\r\n                        mb: 3,\r\n                        position: 'relative',\r\n                        '&::after': {\r\n                          content: '\"\"',\r\n                          position: 'absolute',\r\n                          top: 0,\r\n                          left: 0,\r\n                          right: 0,\r\n                          bottom: 0,\r\n                          borderRadius: '50%',\r\n                          background: 'radial-gradient(circle, rgba(0,255,184,0.2) 0%, rgba(0,255,184,0) 70%)',\r\n                          animation: 'pulse 3s ease-in-out infinite',\r\n                          '@keyframes pulse': {\r\n                            '0%': { transform: 'scale(1)' },\r\n                            '50%': { transform: 'scale(1.2)' },\r\n                            '100%': { transform: 'scale(1)' },\r\n                          },\r\n                        },\r\n                      }}\r\n                    >\r\n                      {support.icon}\r\n                    </Avatar>\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      sx={{\r\n                        color: '#333333',\r\n                        fontWeight: 600,\r\n                        mb: 2,\r\n                      }}\r\n                    >\r\n                      {support.title}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{\r\n                        color: '#666666',\r\n                        lineHeight: 1.8,\r\n                        mb: 3,\r\n                        flex: 1,\r\n                      }}\r\n                    >\r\n                      {support.description}\r\n                    </Typography>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      sx={{\r\n                        bgcolor: 'rgba(0, 255, 184, 0.1)',\r\n                        color: '#00FFB8',\r\n                        '&:hover': {\r\n                          bgcolor: 'rgba(0, 255, 184, 0.2)',\r\n                        },\r\n                      }}\r\n                    >\r\n                      {support.action}\r\n                    </Button>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </motion.div>\r\n          ))}\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SupportSection; ","import React from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Link,\r\n  IconButton,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport TelegramIcon from '@mui/icons-material/Telegram';\r\nimport TwitterIcon from '@mui/icons-material/Twitter';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport { motion } from 'framer-motion';\r\nimport { themeUtils } from '../../theme';\r\n\r\nconst Footer = () => {\r\n  const theme = useTheme();\r\n\r\n  const footerLinks = [\r\n    {\r\n      title: '产品',\r\n      links: [\r\n        { text: '交易策略', href: '/product/strategies' },\r\n        { text: '量化交易', href: '/product/quant' },\r\n        { text: 'API文档', href: '/product/api' },\r\n        { text: '价格方案', href: '/product/pricing' },\r\n      ],\r\n    },\r\n    {\r\n      title: '资源',\r\n      links: [\r\n        { text: '帮助中心', href: '/resources/help' },\r\n        { text: '博客', href: '/resources/blog' },\r\n        { text: '社区', href: '/resources/community' },\r\n        { text: '更新日志', href: '/resources/changelog' },\r\n      ],\r\n    },\r\n    {\r\n      title: '公司',\r\n      links: [\r\n        { text: '关于我们', href: '/about' },\r\n        { text: '新闻动态', href: '/news' },\r\n        { text: '团队介绍', href: '/team' },\r\n        { text: '加入我们', href: '/company/careers' },\r\n        { text: '合作伙伴', href: '/partners' },\r\n        { text: '联系我们', href: '/contact' },\r\n      ],\r\n    },\r\n    {\r\n      title: '法律',\r\n      links: [\r\n        { text: '服务条款', href: '/legal/terms' },\r\n        { text: '隐私政策', href: '/legal/privacy' },\r\n        { text: 'Cookie政策', href: '/legal/cookies' },\r\n        { text: '风险提示', href: '/legal/risk' },\r\n        { text: '免责声明', href: '/legal/disclaimer' },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const socialLinks = [\r\n    { icon: <TelegramIcon />, href: 'https://t.me/pandaquant', label: 'Telegram' },\r\n    { icon: <TwitterIcon />, href: 'https://twitter.com/pandaquant', label: 'Twitter' },\r\n    { icon: <GitHubIcon />, href: 'https://github.com/pandaquant', label: 'GitHub' },\r\n    { icon: <EmailIcon />, href: 'mailto:contact@pandaquant.com', label: 'Email' },\r\n  ];\r\n\r\n  return (\r\n    <Box\r\n      component=\"footer\"\r\n      sx={{\r\n        py: { xs: 4, sm: 6, md: 8 },\r\n        bgcolor: '#FFFFFF',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        '&::before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.05) 0%, rgba(0, 255, 184, 0.02) 100%)',\r\n          zIndex: 0,\r\n        },\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\" sx={{ position: 'relative', zIndex: 1 }}>\r\n        <Box sx={{ \r\n          maxWidth: '1200px',\r\n          mx: 'auto',\r\n          width: '100%',\r\n        }}>\r\n          <Grid container spacing={{ xs: 3, sm: 4 }}>\r\n            <Grid item xs={12} md={4}>\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ duration: 0.5 }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    mb: { xs: 2, sm: 3 },\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    sx={{\r\n                      color: '#00FFB8',\r\n                      fontWeight: 700,\r\n                      fontSize: { xs: '1.2rem', sm: '1.5rem' },\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      gap: 1,\r\n                    }}\r\n                  >\r\n                    <span style={{ fontSize: '1.5rem' }}>🐼</span>\r\n                    <span style={{\r\n                      background: 'linear-gradient(45deg, #00FFB8 30%, #00CC93 90%)',\r\n                      WebkitBackgroundClip: 'text',\r\n                      WebkitTextFillColor: 'transparent',\r\n                    }}>\r\n                      Panda Quant\r\n                    </span>\r\n                  </Typography>\r\n                </Box>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  sx={{\r\n                    color: '#666666',\r\n                    mb: { xs: 2, sm: 3 },\r\n                    maxWidth: '300px',\r\n                    fontSize: { xs: '0.875rem', sm: '0.9rem' },\r\n                  }}\r\n                >\r\n                  专业的量化交易平台，为投资者提供智能、高效、安全的交易解决方案。\r\n                </Typography>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    gap: { xs: 1.5, sm: 2 },\r\n                  }}\r\n                >\r\n                  {socialLinks.map((social, index) => (\r\n                    <motion.div\r\n                      key={social.label}\r\n                      initial={{ opacity: 0, y: 20 }}\r\n                      animate={{ opacity: 1, y: 0 }}\r\n                      transition={{\r\n                        duration: 0.5,\r\n                        delay: index * 0.1,\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        component=\"a\"\r\n                        href={social.href}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        sx={{\r\n                          color: '#00FFB8',\r\n                          bgcolor: 'rgba(0, 255, 184, 0.1)',\r\n                          '&:hover': {\r\n                            bgcolor: 'rgba(0, 255, 184, 0.2)',\r\n                            transform: 'translateY(-2px)',\r\n                          },\r\n                          transition: 'all 0.3s ease',\r\n                          width: { xs: 36, sm: 40 },\r\n                          height: { xs: 36, sm: 40 },\r\n                        }}\r\n                      >\r\n                        {social.icon}\r\n                      </IconButton>\r\n                    </motion.div>\r\n                  ))}\r\n                </Box>\r\n              </motion.div>\r\n            </Grid>\r\n\r\n            {footerLinks.map((section, index) => (\r\n              <Grid item xs={6} sm={3} md={2} key={section.title}>\r\n                <motion.div\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  transition={{\r\n                    duration: 0.5,\r\n                    delay: index * 0.1,\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    variant=\"subtitle1\"\r\n                    sx={{\r\n                      color: '#333333',\r\n                      fontWeight: 600,\r\n                      mb: { xs: 1.5, sm: 2 },\r\n                      position: 'relative',\r\n                      fontSize: { xs: '0.9rem', sm: '1rem' },\r\n                      '&::after': {\r\n                        content: '\"\"',\r\n                        position: 'absolute',\r\n                        bottom: -8,\r\n                        left: 0,\r\n                        width: '30px',\r\n                        height: '2px',\r\n                        background: 'linear-gradient(90deg, #00FFB8, transparent)',\r\n                      },\r\n                    }}\r\n                  >\r\n                    {section.title}\r\n                  </Typography>\r\n                  <Box\r\n                    component=\"ul\"\r\n                    sx={{\r\n                      listStyle: 'none',\r\n                      p: 0,\r\n                      m: 0,\r\n                    }}\r\n                  >\r\n                    {section.links.map((link) => (\r\n                      <Box\r\n                        component=\"li\"\r\n                        key={link.text}\r\n                        sx={{\r\n                          mb: { xs: 1, sm: 1.5 },\r\n                        }}\r\n                      >\r\n                        <Link\r\n                          href={link.href}\r\n                          sx={{\r\n                            color: '#666666',\r\n                            textDecoration: 'none',\r\n                            transition: 'all 0.3s ease',\r\n                            fontSize: { xs: '0.8rem', sm: '0.875rem' },\r\n                            '&:hover': {\r\n                              color: '#00FFB8',\r\n                              transform: 'translateX(5px)',\r\n                            },\r\n                          }}\r\n                        >\r\n                          {link.text}\r\n                        </Link>\r\n                      </Box>\r\n                    ))}\r\n                  </Box>\r\n                </motion.div>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          <Box\r\n            sx={{\r\n              mt: { xs: 4, sm: 6 },\r\n              pt: { xs: 3, sm: 4 },\r\n              borderTop: '1px solid rgba(0, 255, 184, 0.1)',\r\n            }}\r\n          >\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n              <Grid item xs={12} md={6}>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  sx={{\r\n                    color: '#666666',\r\n                    fontSize: { xs: '0.75rem', sm: '0.875rem' },\r\n                  }}\r\n                >\r\n                  © {new Date().getFullYear()} Panda Quant. All rights reserved.\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: { xs: 'flex-start', md: 'flex-end' },\r\n                    gap: { xs: 2, sm: 3 },\r\n                    flexWrap: 'wrap',\r\n                  }}\r\n                >\r\n                  <Link\r\n                    href=\"/legal/terms\"\r\n                    sx={{\r\n                      color: '#666666',\r\n                      textDecoration: 'none',\r\n                      transition: 'all 0.3s ease',\r\n                      fontSize: { xs: '0.75rem', sm: '0.875rem' },\r\n                      '&:hover': {\r\n                        color: '#00FFB8',\r\n                      },\r\n                    }}\r\n                  >\r\n                    服务条款\r\n                  </Link>\r\n                  <Link\r\n                    href=\"/legal/privacy\"\r\n                    sx={{\r\n                      color: '#666666',\r\n                      textDecoration: 'none',\r\n                      transition: 'all 0.3s ease',\r\n                      fontSize: { xs: '0.75rem', sm: '0.875rem' },\r\n                      '&:hover': {\r\n                        color: '#00FFB8',\r\n                      },\r\n                    }}\r\n                  >\r\n                    隐私政策\r\n                  </Link>\r\n                  <Link\r\n                    href=\"/legal/risk\"\r\n                    sx={{\r\n                      color: '#666666',\r\n                      textDecoration: 'none',\r\n                      transition: 'all 0.3s ease',\r\n                      fontSize: { xs: '0.75rem', sm: '0.875rem' },\r\n                      '&:hover': {\r\n                        color: '#00FFB8',\r\n                      },\r\n                    }}\r\n                  >\r\n                    风险提示\r\n                  </Link>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer; ","import React from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  useTheme,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Avatar,\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  TrendingUp as TrendIcon,\r\n  AutoGraph as AutoIcon,\r\n  Psychology as PsychologyIcon,\r\n  Security as SecurityIcon,\r\n} from '@mui/icons-material';\r\n\r\nconst PandaCharacter = () => {\r\n  const theme = useTheme();\r\n\r\n  const features = [\r\n    {\r\n      title: '24小时智能交易',\r\n      description: '全天候自动运行，实时监控市场动态，把握每一个交易机会',\r\n      icon: '🔄',\r\n    },\r\n    {\r\n      title: '多重风控保障',\r\n      description: '严格的风险控制系统，确保您的投资安全无忧',\r\n      icon: '🛡️',\r\n    },\r\n    {\r\n      title: 'AI智能分析',\r\n      description: '基于深度学习的市场分析，提供精准的交易决策支持',\r\n      icon: '🧠',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        py: { xs: 8, md: 12 },\r\n        overflow: 'hidden',\r\n        bgcolor: '#FFFFFF',\r\n        position: 'relative',\r\n        '&::before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.05) 0%, rgba(0, 255, 184, 0.02) 100%)',\r\n          zIndex: 0,\r\n        },\r\n      }}\r\n    >\r\n      <Container \r\n        maxWidth=\"lg\" \r\n        sx={{ \r\n          position: 'relative', \r\n          zIndex: 1,\r\n          px: { xs: 2, md: 4 }\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            mb: { xs: 4, md: 6 },\r\n          }}\r\n        >\r\n          <motion.div\r\n            initial={{ opacity: 0, y: -20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.5 }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                position: 'relative',\r\n                mb: 4,\r\n                '&::before': {\r\n                  content: '\"\"',\r\n                  position: 'absolute',\r\n                  top: '50%',\r\n                  left: '50%',\r\n                  transform: 'translate(-50%, -50%)',\r\n                  width: '300px',\r\n                  height: '300px',\r\n                  background: 'radial-gradient(circle, rgba(0,255,184,0.2) 0%, rgba(0,255,184,0) 70%)',\r\n                  animation: 'pulse 3s ease-in-out infinite',\r\n                  '@keyframes pulse': {\r\n                    '0%': { transform: 'translate(-50%, -50%) scale(1)' },\r\n                    '50%': { transform: 'translate(-50%, -50%) scale(1.2)' },\r\n                    '100%': { transform: 'translate(-50%, -50%) scale(1)' },\r\n                  },\r\n                },\r\n              }}\r\n            >\r\n              <motion.div\r\n                animate={{\r\n                  y: [0, -20, 0],\r\n                  rotate: [0, 5, 0],\r\n                }}\r\n                transition={{\r\n                  duration: 4,\r\n                  repeat: Infinity,\r\n                  ease: \"easeInOut\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: { xs: '8rem', md: '12rem' },\r\n                    lineHeight: 1,\r\n                  }}\r\n                >\r\n                  🐼\r\n                </Typography>\r\n              </motion.div>\r\n            </Box>\r\n          </motion.div>\r\n\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.5 }}\r\n          >\r\n            <Typography\r\n              variant=\"h2\"\r\n              sx={{\r\n                color: '#00FFB8',\r\n                fontWeight: 700,\r\n                mb: 2,\r\n                fontSize: { xs: '2.5rem', md: '3.5rem' },\r\n                lineHeight: 1.2,\r\n                position: 'relative',\r\n                display: 'inline-block',\r\n                '&::after': {\r\n                  content: '\"\"',\r\n                  position: 'absolute',\r\n                  bottom: -10,\r\n                  left: '50%',\r\n                  transform: 'translateX(-50%)',\r\n                  width: '80px',\r\n                  height: '4px',\r\n                  background: 'linear-gradient(90deg, transparent, #00FFB8, transparent)',\r\n                  borderRadius: '2px',\r\n                },\r\n              }}\r\n            >\r\n              熊猫助手\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h3\"\r\n              sx={{\r\n                color: '#333333',\r\n                fontWeight: 700,\r\n                mb: 3,\r\n                fontSize: { xs: '1.8rem', md: '2.5rem' },\r\n                lineHeight: 1.2,\r\n              }}\r\n            >\r\n              您的智能量化交易伙伴\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body1\"\r\n              sx={{\r\n                color: '#666666',\r\n                mb: 4,\r\n                fontSize: '1.2rem',\r\n                maxWidth: '800px',\r\n                mx: 'auto',\r\n              }}\r\n            >\r\n              基于先进AI技术，为您提供专业的量化交易策略和实时市场分析，让您的投资更智能、更高效。\r\n            </Typography>\r\n          </motion.div>\r\n        </Box>\r\n\r\n        <Grid container spacing={3} sx={{ mt: { xs: 2, md: 4 } }}>\r\n          {features.map((feature, index) => (\r\n            <Grid item xs={12} md={4} key={`feature-${index}`}>\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ \r\n                  duration: 0.5,\r\n                  delay: index * 0.1\r\n                }}\r\n              >\r\n                <Card\r\n                  sx={{\r\n                    height: '100%',\r\n                    background: 'rgba(255, 255, 255, 0.9)',\r\n                    backdropFilter: 'blur(10px)',\r\n                    boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\r\n                    border: '1px solid rgba(0, 255, 184, 0.1)',\r\n                    borderRadius: '24px',\r\n                    transition: 'all 0.3s ease',\r\n                    position: 'relative',\r\n                    overflow: 'hidden',\r\n                    '&::before': {\r\n                      content: '\"\"',\r\n                      position: 'absolute',\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      background: 'linear-gradient(45deg, transparent, rgba(0,255,184,0.05), transparent)',\r\n                      transform: 'translateX(-100%)',\r\n                      transition: 'transform 0.6s ease',\r\n                    },\r\n                    '&:hover': {\r\n                      transform: 'translateY(-5px)',\r\n                      boxShadow: '0 8px 30px rgba(0, 255, 184, 0.15)',\r\n                      border: '1px solid rgba(0, 255, 184, 0.2)',\r\n                      '&::before': {\r\n                        transform: 'translateX(100%)',\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  <CardContent sx={{ p: 3, textAlign: 'center' }}>\r\n                    <Avatar\r\n                      sx={{\r\n                        width: 80,\r\n                        height: 80,\r\n                        bgcolor: 'rgba(0, 255, 184, 0.1)',\r\n                        color: '#00FFB8',\r\n                        fontSize: '2.5rem',\r\n                        mb: 3,\r\n                        mx: 'auto',\r\n                      }}\r\n                    >\r\n                      {feature.icon}\r\n                    </Avatar>\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      sx={{\r\n                        color: '#333333',\r\n                        fontWeight: 600,\r\n                        mb: 2,\r\n                      }}\r\n                    >\r\n                      {feature.title}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{\r\n                        color: '#666666',\r\n                        lineHeight: 1.8,\r\n                      }}\r\n                    >\r\n                      {feature.description}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </motion.div>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PandaCharacter; ","import React from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  useTheme,\r\n  Card,\r\n  CardContent,\r\n  Chip,\r\n  Grid,\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  TrendingUp as TrendIcon,\r\n  AutoGraph as AutoIcon,\r\n  Psychology as PsychologyIcon,\r\n  Security as SecurityIcon,\r\n} from '@mui/icons-material';\r\n\r\ninterface Strategy {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  icon: React.ReactNode;\r\n  color: string;\r\n  features: string[];\r\n  performance: string;\r\n}\r\n\r\nconst strategies: Strategy[] = [\r\n  {\r\n    id: 1,\r\n    title: '趋势跟踪',\r\n    description: '基于市场趋势的智能交易策略，自动识别并跟随市场趋势',\r\n    icon: <TrendIcon />,\r\n    color: '#00FFB8',\r\n    features: ['自动识别趋势', '动态调整仓位', '风险控制'],\r\n    performance: '年化收益 50-100%',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: '网格交易',\r\n    description: '在价格区间内自动买卖，利用市场波动获取收益',\r\n    icon: <AutoIcon />,\r\n    color: '#00FFB8',\r\n    features: ['自动网格布局', '智能止盈止损', '资金管理'],\r\n    performance: '年化收益 30-80%',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'AI预测',\r\n    description: '基于深度学习的市场预测模型，提前捕捉市场机会',\r\n    icon: <PsychologyIcon />,\r\n    color: '#00FFB8',\r\n    features: ['深度学习模型', '实时市场分析', '多维度预测'],\r\n    performance: '年化收益 80-150%',\r\n  },\r\n  {\r\n    id: 4,\r\n    title: '套利策略',\r\n    description: '利用市场价差进行套利交易，获取稳定收益',\r\n    icon: <SecurityIcon />,\r\n    color: '#00FFB8',\r\n    features: ['多市场套利', '低风险交易', '稳定收益'],\r\n    performance: '年化收益 20-50%',\r\n  },\r\n];\r\n\r\nconst StrategySection = () => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        py: { xs: 8, md: 12 },\r\n        overflow: 'hidden',\r\n        bgcolor: '#FFFFFF',\r\n        position: 'relative',\r\n        '&::before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.05) 0%, rgba(0, 255, 184, 0.02) 100%)',\r\n          zIndex: 0,\r\n        },\r\n      }}\r\n    >\r\n      <Container \r\n        maxWidth=\"lg\" \r\n        sx={{ \r\n          position: 'relative', \r\n          zIndex: 1,\r\n          px: { xs: 2, md: 4 }\r\n        }}\r\n      >\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          <Typography\r\n            variant=\"h2\"\r\n            sx={{\r\n              color: '#00FFB8',\r\n              fontWeight: 700,\r\n              textAlign: 'center',\r\n              mb: 2,\r\n              fontSize: { xs: '2.5rem', md: '3.5rem' },\r\n              lineHeight: 1.2,\r\n              position: 'relative',\r\n              display: 'inline-block',\r\n              left: '50%',\r\n              transform: 'translateX(-50%)',\r\n              '&::after': {\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                bottom: -10,\r\n                left: '50%',\r\n                transform: 'translateX(-50%)',\r\n                width: '80px',\r\n                height: '4px',\r\n                background: 'linear-gradient(90deg, transparent, #00FFB8, transparent)',\r\n                borderRadius: '2px',\r\n              },\r\n            }}\r\n          >\r\n            交易策略\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body1\"\r\n            sx={{\r\n              color: '#666666',\r\n              textAlign: 'center',\r\n              mb: 6,\r\n              fontSize: '1.2rem',\r\n              maxWidth: '800px',\r\n              mx: 'auto',\r\n            }}\r\n          >\r\n            多种智能交易策略，满足不同投资需求\r\n          </Typography>\r\n        </motion.div>\r\n\r\n        <Grid container spacing={4}>\r\n          {strategies.map((strategy, index) => (\r\n            <Grid item xs={12} md={6} key={strategy.id}>\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ \r\n                  duration: 0.5,\r\n                  delay: index * 0.1\r\n                }}\r\n              >\r\n                <Card\r\n                  sx={{\r\n                    height: '100%',\r\n                    background: 'rgba(255, 255, 255, 0.9)',\r\n                    backdropFilter: 'blur(10px)',\r\n                    boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\r\n                    border: '1px solid rgba(0, 255, 184, 0.1)',\r\n                    borderRadius: '24px',\r\n                    transition: 'all 0.3s ease',\r\n                    position: 'relative',\r\n                    overflow: 'hidden',\r\n                    '&::before': {\r\n                      content: '\"\"',\r\n                      position: 'absolute',\r\n                      top: 0,\r\n                      left: 0,\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      background: 'linear-gradient(45deg, transparent, rgba(0,255,184,0.05), transparent)',\r\n                      transform: 'translateX(-100%)',\r\n                      transition: 'transform 0.6s ease',\r\n                    },\r\n                    '&:hover': {\r\n                      transform: 'translateY(-5px)',\r\n                      boxShadow: '0 8px 30px rgba(0, 255, 184, 0.15)',\r\n                      border: '1px solid rgba(0, 255, 184, 0.2)',\r\n                      '&::before': {\r\n                        transform: 'translateX(100%)',\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  <CardContent sx={{ p: 4 }}>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        mb: 3,\r\n                      }}\r\n                    >\r\n                      <Box\r\n                        sx={{\r\n                          width: 64,\r\n                          height: 64,\r\n                          borderRadius: '16px',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          justifyContent: 'center',\r\n                          bgcolor: 'rgba(0, 255, 184, 0.1)',\r\n                          color: '#00FFB8',\r\n                          mr: 3,\r\n                          position: 'relative',\r\n                          '&::after': {\r\n                            content: '\"\"',\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            left: 0,\r\n                            right: 0,\r\n                            bottom: 0,\r\n                            borderRadius: '16px',\r\n                            background: 'radial-gradient(circle, rgba(0,255,184,0.2) 0%, rgba(0,255,184,0) 70%)',\r\n                            animation: 'pulse 3s ease-in-out infinite',\r\n                            '@keyframes pulse': {\r\n                              '0%': { transform: 'scale(1)' },\r\n                              '50%': { transform: 'scale(1.2)' },\r\n                              '100%': { transform: 'scale(1)' },\r\n                            },\r\n                          },\r\n                        }}\r\n                      >\r\n                        {strategy.icon}\r\n                      </Box>\r\n                      <Box sx={{ flex: 1 }}>\r\n                        <Typography\r\n                          variant=\"h5\"\r\n                          sx={{\r\n                            color: '#333333',\r\n                            fontWeight: 600,\r\n                            mb: 1,\r\n                          }}\r\n                        >\r\n                          {strategy.title}\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"h6\"\r\n                          sx={{\r\n                            color: '#00FFB8',\r\n                            fontWeight: 700,\r\n                            background: 'linear-gradient(90deg, #00FFB8, #00B8FF)',\r\n                            WebkitBackgroundClip: 'text',\r\n                            WebkitTextFillColor: 'transparent',\r\n                          }}\r\n                        >\r\n                          {strategy.performance}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{\r\n                        color: '#666666',\r\n                        lineHeight: 1.8,\r\n                        mb: 3,\r\n                      }}\r\n                    >\r\n                      {strategy.description}\r\n                    </Typography>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        flexWrap: 'wrap',\r\n                        gap: 1,\r\n                      }}\r\n                    >\r\n                      {strategy.features.map((feature, index) => (\r\n                        <Chip\r\n                          key={index}\r\n                          label={feature}\r\n                          sx={{\r\n                            bgcolor: 'rgba(0, 255, 184, 0.1)',\r\n                            color: '#00FFB8',\r\n                            fontWeight: 500,\r\n                            '&:hover': {\r\n                              bgcolor: 'rgba(0, 255, 184, 0.2)',\r\n                            },\r\n                          }}\r\n                        />\r\n                      ))}\r\n                    </Box>\r\n                  </CardContent>\r\n                </Card>\r\n              </motion.div>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StrategySection; ","import React, { useState, useMemo } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  TextField,\r\n  Slider,\r\n  Button,\r\n  useTheme,\r\n  InputAdornment,\r\n  IconButton,\r\n  Tooltip,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport { themeUtils } from '../../theme';\r\nimport {\r\n  TrendingUp as TrendingUpIcon,\r\n  AttachMoney as MoneyIcon,\r\n  Info as InfoIcon,\r\n  Security as SecurityIcon,\r\n  Speed as SpeedIcon,\r\n  Balance as BalanceIcon,\r\n  ArrowForward as ArrowForwardIcon,\r\n  Savings as SavingsIcon,\r\n  Timeline as TimelineIcon,\r\n  Rocket as RocketIcon,\r\n} from '@mui/icons-material';\r\n\r\ninterface ProfitData {\r\n  initialAmount: number;\r\n  monthlyReturn: number;\r\n  months: number;\r\n  totalProfit: number;\r\n  finalAmount: number;\r\n  strategy: 'conservative' | 'balanced' | 'aggressive';\r\n}\r\n\r\nconst strategyData = {\r\n  conservative: {\r\n    label: '保守策略',\r\n    icon: <SavingsIcon />,\r\n    description: '低风险，稳定收益',\r\n    monthlyReturn: 50,\r\n    color: '#4CAF50',\r\n  },\r\n  balanced: {\r\n    label: '平衡策略',\r\n    icon: <TimelineIcon />,\r\n    description: '风险与收益平衡',\r\n    monthlyReturn: 150,\r\n    color: '#2196F3',\r\n  },\r\n  aggressive: {\r\n    label: '激进策略',\r\n    icon: <RocketIcon />,\r\n    description: '高风险，高收益',\r\n    monthlyReturn: 300,\r\n    color: '#FF5722',\r\n  },\r\n};\r\n\r\nconst ProfitSection = () => {\r\n  const theme = useTheme();\r\n  const [profitData, setProfitData] = useState<ProfitData>({\r\n    initialAmount: 10000,\r\n    monthlyReturn: 50,\r\n    months: 12,\r\n    totalProfit: 0,\r\n    finalAmount: 0,\r\n    strategy: 'balanced',\r\n  });\r\n\r\n  const calculateProfit = useMemo(() => {\r\n    const { initialAmount, monthlyReturn, months } = profitData;\r\n    const monthlyRate = monthlyReturn / 100;\r\n    let amount = initialAmount;\r\n    let totalProfit = 0;\r\n\r\n    for (let i = 0; i < months; i++) {\r\n      const profit = amount * monthlyRate;\r\n      totalProfit += profit;\r\n      amount += profit;\r\n    }\r\n\r\n    return {\r\n      totalProfit: Math.round(totalProfit * 100) / 100,\r\n      finalAmount: Math.round(amount * 100) / 100,\r\n    };\r\n  }, [profitData]);\r\n\r\n  const handleInputChange = (field: keyof ProfitData) => (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const value = parseFloat(event.target.value);\r\n    if (!isNaN(value)) {\r\n      setProfitData((prev) => ({\r\n        ...prev,\r\n        [field]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSliderChange = (field: keyof ProfitData) => (\r\n    event: Event,\r\n    value: number | number[]\r\n  ) => {\r\n    setProfitData((prev) => ({\r\n      ...prev,\r\n      [field]: value as number,\r\n    }));\r\n  };\r\n\r\n  const handleStrategyChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const strategy = event.target.value as 'conservative' | 'balanced' | 'aggressive';\r\n    setProfitData((prev) => ({\r\n      ...prev,\r\n      strategy,\r\n      monthlyReturn: strategyData[strategy].monthlyReturn,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        py: { xs: 6, md: 10 },\r\n        overflow: 'hidden',\r\n        bgcolor: '#FFFFFF',\r\n        position: 'relative',\r\n        '&::before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.03) 0%, rgba(0, 0, 0, 0) 100%)',\r\n          zIndex: 0,\r\n        },\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\" sx={{ position: 'relative', zIndex: 1 }}>\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          whileInView={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n          viewport={{ once: true }}\r\n        >\r\n          <Typography\r\n            variant=\"h2\"\r\n            sx={{\r\n              mb: 1,\r\n              textAlign: 'center',\r\n              fontSize: { xs: '2rem', md: '2.5rem' },\r\n              fontFamily: '\"PingFang SC\", \"Microsoft YaHei\", sans-serif',\r\n              background: 'linear-gradient(45deg, #00FFB8 30%, #00B8FF 90%)',\r\n              WebkitBackgroundClip: 'text',\r\n              WebkitTextFillColor: 'transparent',\r\n              fontWeight: 700,\r\n            }}\r\n          >\r\n            收益计算器\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body1\"\r\n            sx={{\r\n              color: 'text.secondary',\r\n              textAlign: 'center',\r\n              mb: 3,\r\n              fontSize: '0.9rem',\r\n              opacity: 0.8,\r\n            }}\r\n          >\r\n            计算您的潜在收益，开启量化交易之旅\r\n          </Typography>\r\n        </motion.div>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={6}>\r\n            <motion.div\r\n              initial={{ opacity: 0, x: -20 }}\r\n              whileInView={{ opacity: 1, x: 0 }}\r\n              transition={{ duration: 0.5, delay: 0.2 }}\r\n              viewport={{ once: true }}\r\n            >\r\n              <Card\r\n                sx={{\r\n                  height: '100%',\r\n                  background: '#FFFFFF',\r\n                  backdropFilter: 'blur(10px)',\r\n                  boxShadow: '0 8px 32px rgba(0, 255, 184, 0.1)',\r\n                  border: '1px solid rgba(0, 255, 184, 0.2)',\r\n                  borderRadius: '12px',\r\n                  transition: 'all 0.3s ease',\r\n                  position: 'relative',\r\n                  overflow: 'hidden',\r\n                  '&::before': {\r\n                    content: '\"\"',\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    background: 'linear-gradient(45deg, transparent, rgba(0,255,184,0.03), transparent)',\r\n                    transform: 'translateX(-100%)',\r\n                    transition: 'transform 0.6s ease',\r\n                  },\r\n                  '&:hover': {\r\n                    transform: 'translateY(-5px)',\r\n                    boxShadow: '0 12px 40px rgba(0, 255, 184, 0.2)',\r\n                    '&::before': {\r\n                      transform: 'translateX(100%)',\r\n                    },\r\n                  },\r\n                }}\r\n              >\r\n                <CardContent sx={{ p: 2 }}>\r\n                  <Box sx={{ mb: 2 }}>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      sx={{\r\n                        mb: 1,\r\n                        color: '#00FFB8',\r\n                        fontWeight: 600,\r\n                        fontSize: '1rem',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 1,\r\n                      }}\r\n                    >\r\n                      <MoneyIcon />\r\n                      初始投资金额 (USDT)\r\n                    </Typography>\r\n                    <TextField\r\n                      fullWidth\r\n                      type=\"number\"\r\n                      value={profitData.initialAmount}\r\n                      onChange={handleInputChange('initialAmount')}\r\n                      size=\"small\"\r\n                      sx={{\r\n                        '& .MuiInputBase-input': {\r\n                          color: '#000000',\r\n                        },\r\n                      }}\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <MoneyIcon sx={{ color: '#00FFB8' }} />\r\n                          </InputAdornment>\r\n                        ),\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <Typography sx={{ color: '#00FFB8', fontSize: '0.8rem' }}>USDT</Typography>\r\n                          </InputAdornment>\r\n                        ),\r\n                        sx: {\r\n                          '& .MuiOutlinedInput-notchedOutline': {\r\n                            borderColor: 'rgba(0, 255, 184, 0.2)',\r\n                          },\r\n                          '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                            borderColor: '#00FFB8',\r\n                          },\r\n                          '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                            borderColor: '#00FFB8',\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                    <Slider\r\n                      value={profitData.initialAmount}\r\n                      onChange={handleSliderChange('initialAmount')}\r\n                      min={1000}\r\n                      max={100000}\r\n                      step={1000}\r\n                      sx={{\r\n                        color: '#00FFB8',\r\n                        mt: 1,\r\n                        '& .MuiSlider-thumb': {\r\n                          '&:hover, &.Mui-focusVisible': {\r\n                            boxShadow: '0 0 0 8px rgba(0, 255, 184, 0.16)',\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Box>\r\n\r\n                  <Box sx={{ mb: 2 }}>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      sx={{\r\n                        mb: 1,\r\n                        color: '#00FFB8',\r\n                        fontWeight: 600,\r\n                        fontSize: '1rem',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 1,\r\n                      }}\r\n                    >\r\n                      <TrendingUpIcon />\r\n                      月收益率 (%)\r\n                    </Typography>\r\n                    <Box\r\n                      sx={{\r\n                        p: 2,\r\n                        borderRadius: 1,\r\n                        border: '1px solid rgba(0, 255, 184, 0.2)',\r\n                        bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        variant=\"h4\"\r\n                        sx={{\r\n                          color: '#00FFB8',\r\n                          fontWeight: 700,\r\n                          fontSize: '1.5rem',\r\n                        }}\r\n                      >\r\n                        {profitData.monthlyReturn}%\r\n                      </Typography>\r\n                    </Box>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      sx={{\r\n                        color: 'text.secondary',\r\n                        mt: 1,\r\n                        textAlign: 'center',\r\n                        fontSize: '0.8rem',\r\n                      }}\r\n                    >\r\n                      当前策略: {strategyData[profitData.strategy].label}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box sx={{ mb: 2 }}>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      sx={{\r\n                        mb: 1,\r\n                        color: '#00FFB8',\r\n                        fontWeight: 600,\r\n                        fontSize: '1rem',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 1,\r\n                      }}\r\n                    >\r\n                      <SecurityIcon />\r\n                      投资期限 (月)\r\n                    </Typography>\r\n                    <TextField\r\n                      fullWidth\r\n                      type=\"number\"\r\n                      value={profitData.months}\r\n                      onChange={handleInputChange('months')}\r\n                      size=\"small\"\r\n                      sx={{\r\n                        '& .MuiInputBase-input': {\r\n                          color: '#000000',\r\n                        },\r\n                      }}\r\n                      InputProps={{\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <Typography sx={{ color: '#00FFB8', fontSize: '0.8rem' }}>个月</Typography>\r\n                          </InputAdornment>\r\n                        ),\r\n                        sx: {\r\n                          '& .MuiOutlinedInput-notchedOutline': {\r\n                            borderColor: 'rgba(0, 255, 184, 0.2)',\r\n                          },\r\n                          '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                            borderColor: '#00FFB8',\r\n                          },\r\n                          '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                            borderColor: '#00FFB8',\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                    <Slider\r\n                      value={profitData.months}\r\n                      onChange={handleSliderChange('months')}\r\n                      min={1}\r\n                      max={36}\r\n                      step={1}\r\n                      sx={{\r\n                        color: '#00FFB8',\r\n                        mt: 1,\r\n                        '& .MuiSlider-thumb': {\r\n                          '&:hover, &.Mui-focusVisible': {\r\n                            boxShadow: '0 0 0 8px rgba(0, 255, 184, 0.16)',\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </Box>\r\n\r\n                  <Box>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      sx={{\r\n                        mb: 1,\r\n                        color: '#00FFB8',\r\n                        fontWeight: 600,\r\n                        fontSize: '1rem',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 1,\r\n                      }}\r\n                    >\r\n                      <BalanceIcon />\r\n                      投资策略\r\n                    </Typography>\r\n                    <FormControl component=\"fieldset\">\r\n                      <RadioGroup\r\n                        value={profitData.strategy}\r\n                        onChange={handleStrategyChange}\r\n                        sx={{\r\n                          display: 'flex',\r\n                          flexDirection: 'row',\r\n                          gap: 1,\r\n                          '& .MuiFormControlLabel-root': {\r\n                            margin: 0,\r\n                            flex: 1,\r\n                          },\r\n                        }}\r\n                      >\r\n                        {Object.entries(strategyData).map(([key, data]) => (\r\n                          <motion.div\r\n                            key={key}\r\n                            whileHover={{ scale: 1.02 }}\r\n                            whileTap={{ scale: 0.98 }}\r\n                          >\r\n                            <FormControlLabel\r\n                              value={key}\r\n                              control={\r\n                                <Radio\r\n                                  sx={{\r\n                                    color: data.color,\r\n                                    '&.Mui-checked': {\r\n                                      color: data.color,\r\n                                    },\r\n                                  }}\r\n                                />\r\n                              }\r\n                              label={\r\n                                <Box\r\n                                  sx={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    alignItems: 'center',\r\n                                    p: 1,\r\n                                    borderRadius: 1,\r\n                                    border: `1px solid ${data.color}`,\r\n                                    transition: 'all 0.3s ease',\r\n                                    '&:hover': {\r\n                                      borderColor: data.color,\r\n                                      bgcolor: `${data.color}10`,\r\n                                    },\r\n                                  }}\r\n                                >\r\n                                  <Box sx={{ color: data.color, mb: 0.5 }}>\r\n                                    {data.icon}\r\n                                  </Box>\r\n                                  <Typography\r\n                                    variant=\"subtitle1\"\r\n                                    sx={{ fontWeight: 600, color: data.color, fontSize: '0.8rem' }}\r\n                                  >\r\n                                    {data.label}\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    variant=\"body2\"\r\n                                    sx={{ color: 'text.secondary', fontSize: '0.7rem' }}\r\n                                  >\r\n                                    {data.description}\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    variant=\"body2\"\r\n                                    sx={{ color: data.color, mt: 0.5, fontSize: '0.7rem' }}\r\n                                  >\r\n                                    月化收益: {data.monthlyReturn}%\r\n                                  </Typography>\r\n                                </Box>\r\n                              }\r\n                              sx={{\r\n                                width: '100%',\r\n                                m: 0,\r\n                              }}\r\n                            />\r\n                          </motion.div>\r\n                        ))}\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </motion.div>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <motion.div\r\n              initial={{ opacity: 0, x: 20 }}\r\n              whileInView={{ opacity: 1, x: 0 }}\r\n              transition={{ duration: 0.5, delay: 0.4 }}\r\n              viewport={{ once: true }}\r\n            >\r\n              <Card\r\n                sx={{\r\n                  height: '100%',\r\n                  background: '#FFFFFF',\r\n                  backdropFilter: 'blur(10px)',\r\n                  boxShadow: '0 8px 32px rgba(0, 255, 184, 0.1)',\r\n                  border: '1px solid rgba(0, 255, 184, 0.2)',\r\n                  borderRadius: '12px',\r\n                  transition: 'all 0.3s ease',\r\n                  position: 'relative',\r\n                  overflow: 'hidden',\r\n                  '&::before': {\r\n                    content: '\"\"',\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    background: 'linear-gradient(45deg, transparent, rgba(0,255,184,0.03), transparent)',\r\n                    transform: 'translateX(-100%)',\r\n                    transition: 'transform 0.6s ease',\r\n                  },\r\n                  '&:hover': {\r\n                    transform: 'translateY(-5px)',\r\n                    boxShadow: '0 12px 40px rgba(0, 255, 184, 0.2)',\r\n                    '&::before': {\r\n                      transform: 'translateX(100%)',\r\n                    },\r\n                  },\r\n                }}\r\n              >\r\n                <CardContent sx={{ p: 2 }}>\r\n                  <Box\r\n                    sx={{\r\n                      textAlign: 'center',\r\n                      mb: 2,\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant=\"h4\"\r\n                      sx={{\r\n                        color: '#00FFB8',\r\n                        fontWeight: 700,\r\n                        mb: 1,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        gap: 1,\r\n                        fontSize: '1.2rem',\r\n                      }}\r\n                    >\r\n                      <TrendingUpIcon />\r\n                      预计总收益\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"h2\"\r\n                      sx={{\r\n                        color: '#00FFB8',\r\n                        fontWeight: 800,\r\n                        mb: 1,\r\n                        fontSize: { xs: '1.8rem', md: '2.2rem' },\r\n                        background: 'linear-gradient(45deg, #00FFB8 30%, #00CC93 90%)',\r\n                        WebkitBackgroundClip: 'text',\r\n                        WebkitTextFillColor: 'transparent',\r\n                      }}\r\n                    >\r\n                      {calculateProfit.totalProfit.toLocaleString()} USDT\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{\r\n                        color: 'text.secondary',\r\n                        opacity: 0.8,\r\n                        fontSize: '0.8rem',\r\n                      }}\r\n                    >\r\n                      投资 {profitData.months} 个月后的总收益\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box\r\n                    sx={{\r\n                      textAlign: 'center',\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant=\"h4\"\r\n                      sx={{\r\n                        color: '#00FFB8',\r\n                        fontWeight: 700,\r\n                        mb: 1,\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        gap: 1,\r\n                        fontSize: '1.2rem',\r\n                      }}\r\n                    >\r\n                      <MoneyIcon />\r\n                      最终金额\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"h2\"\r\n                      sx={{\r\n                        color: '#00FFB8',\r\n                        fontWeight: 800,\r\n                        mb: 1,\r\n                        fontSize: { xs: '1.8rem', md: '2.2rem' },\r\n                        background: 'linear-gradient(45deg, #00FFB8 30%, #00CC93 90%)',\r\n                        WebkitBackgroundClip: 'text',\r\n                        WebkitTextFillColor: 'transparent',\r\n                      }}\r\n                    >\r\n                      {calculateProfit.finalAmount.toLocaleString()} USDT\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{\r\n                        color: 'text.secondary',\r\n                        opacity: 0.8,\r\n                        mb: 2,\r\n                        fontSize: '0.8rem',\r\n                      }}\r\n                    >\r\n                      包含初始投资和所有收益\r\n                    </Typography>\r\n\r\n                    <motion.div\r\n                      whileHover={{ scale: 1.02 }}\r\n                      whileTap={{ scale: 0.98 }}\r\n                    >\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        fullWidth\r\n                        endIcon={<ArrowForwardIcon />}\r\n                        sx={{\r\n                          bgcolor: '#00FFB8',\r\n                          color: '#000',\r\n                          py: 0.8,\r\n                          fontSize: '0.9rem',\r\n                          borderRadius: 2,\r\n                          fontWeight: 600,\r\n                          position: 'relative',\r\n                          overflow: 'hidden',\r\n                          '&::before': {\r\n                            content: '\"\"',\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            left: 0,\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            background: 'linear-gradient(45deg, transparent, rgba(255,255,255,0.2), transparent)',\r\n                            transform: 'translateX(-100%)',\r\n                            transition: 'transform 0.6s ease',\r\n                          },\r\n                          '&:hover': {\r\n                            bgcolor: '#00CC93',\r\n                            transform: 'translateY(-2px)',\r\n                            boxShadow: '0 10px 20px rgba(0, 255, 184, 0.2)',\r\n                            '&::before': {\r\n                              transform: 'translateX(100%)',\r\n                            },\r\n                          },\r\n                        }}\r\n                      >\r\n                        立即开始投资\r\n                      </Button>\r\n                    </motion.div>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </motion.div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfitSection; ","import React from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport { Breadcrumbs as MuiBreadcrumbs, Typography, Link, Box } from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\n\r\ninterface BreadcrumbItem {\r\n  path: string;\r\n  label: string;\r\n  icon?: React.ReactNode;\r\n}\r\n\r\nconst Breadcrumbs: React.FC = () => {\r\n  const location = useLocation();\r\n  const { t } = useTranslation();\r\n\r\n  const generateBreadcrumbs = (): BreadcrumbItem[] => {\r\n    const pathnames = location.pathname.split('/').filter((x) => x);\r\n    const breadcrumbs: BreadcrumbItem[] = [\r\n      {\r\n        path: '/',\r\n        label: t('home.title'),\r\n        icon: <HomeIcon fontSize=\"small\" sx={{ mr: 0.5 }} />,\r\n      },\r\n    ];\r\n\r\n    let currentPath = '';\r\n    pathnames.forEach((value) => {\r\n      currentPath += `/${value}`;\r\n      const translationKey = value.replace(/-/g, '_');\r\n      breadcrumbs.push({\r\n        path: currentPath,\r\n        label: t(`${translationKey}.title`, { defaultValue: value }),\r\n      });\r\n    });\r\n\r\n    return breadcrumbs;\r\n  };\r\n\r\n  const breadcrumbs = generateBreadcrumbs();\r\n\r\n  if (breadcrumbs.length === 1) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        p: 2,\r\n        bgcolor: 'background.paper',\r\n        borderRadius: 1,\r\n        boxShadow: 1,\r\n        '& .MuiBreadcrumbs-separator': {\r\n          mx: 1,\r\n        },\r\n      }}\r\n    >\r\n      <MuiBreadcrumbs\r\n        separator={<NavigateNextIcon fontSize=\"small\" />}\r\n        aria-label=\"breadcrumb\"\r\n      >\r\n        {breadcrumbs.map((item, index) => {\r\n          const isLast = index === breadcrumbs.length - 1;\r\n\r\n          return isLast ? (\r\n            <Typography\r\n              key={item.path}\r\n              color=\"text.primary\"\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                fontWeight: 500,\r\n              }}\r\n            >\r\n              {item.icon}\r\n              {item.label}\r\n            </Typography>\r\n          ) : (\r\n            <Link\r\n              key={item.path}\r\n              component={RouterLink}\r\n              to={item.path}\r\n              color=\"inherit\"\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                textDecoration: 'none',\r\n                '&:hover': {\r\n                  textDecoration: 'underline',\r\n                },\r\n              }}\r\n            >\r\n              {item.icon}\r\n              {item.label}\r\n            </Link>\r\n          );\r\n        })}\r\n      </MuiBreadcrumbs>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Breadcrumbs; ","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Box } from '@mui/material';\r\nimport UserNavbar from './common/UserNavbar';\r\nimport Navbar from './common/Navbar';\r\nimport { Footer } from './home';\r\nimport { Outlet } from 'react-router-dom';\r\nimport Breadcrumbs from './Breadcrumbs';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst Layout: React.FC = () => {\r\n  const location = useLocation();\r\n  const { isAuthenticated } = useAuth();\r\n  const isAuthPage = location.pathname === '/login' || location.pathname === '/register';\r\n  const isHomePage = location.pathname === '/';\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        background: isHomePage ? 'transparent' : 'background.default',\r\n      }}\r\n    >\r\n      {!isAuthPage && (\r\n        isAuthenticated ? <UserNavbar /> : <Navbar />\r\n      )}\r\n      {!isHomePage && !isAuthPage && (\r\n        <Box sx={{ bgcolor: 'background.paper', py: 2 }}>\r\n          <Breadcrumbs />\r\n        </Box>\r\n      )}\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          flexGrow: 1,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          ...(isAuthPage && {\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }),\r\n          ...(isHomePage && {\r\n            padding: 0,\r\n          }),\r\n        }}\r\n      >\r\n        <Outlet />\r\n      </Box>\r\n      {!isAuthPage && <Footer />}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Layout; ","export const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:3000/api';\r\n\r\nexport const APP_CONFIG = {\r\n  name: 'Panda Quant',\r\n  version: '1.0.0',\r\n  theme: {\r\n    primary: '#1976d2',\r\n    secondary: '#dc004e',\r\n    background: '#f5f5f5',\r\n    text: '#333333'\r\n  },\r\n  features: {\r\n    enableNotifications: true,\r\n    enableAnalytics: true,\r\n    enableDarkMode: true\r\n  }\r\n};\r\n\r\n// 策略配置\r\nexport const STRATEGY_CONFIG = {\r\n  // 风险等级配置\r\n  RISK_LEVELS: {\r\n    LOW: 'low',\r\n    MEDIUM: 'medium',\r\n    HIGH: 'high'\r\n  },\r\n  // 默认参数\r\n  DEFAULT_PARAMS: {\r\n    INITIAL_CAPITAL: 10000,\r\n    MAX_DRAWDOWN: 0.2,\r\n    MAX_POSITION_SIZE: 0.1,\r\n    STOP_LOSS: 0.05,\r\n    TAKE_PROFIT: 0.1\r\n  },\r\n  // 回测配置\r\n  BACKTEST: {\r\n    DEFAULT_TIME_RANGE: '1m',\r\n    AVAILABLE_TIME_RANGES: ['1d', '1w', '1m', '3m', '6m', '1y', 'all']\r\n  }\r\n};\r\n\r\n// 图表配置\r\nexport const CHART_CONFIG = {\r\n  COLORS: {\r\n    PRIMARY: '#00FFB8',\r\n    SECONDARY: '#FF6B6B',\r\n    BACKGROUND: '#FFFFFF',\r\n    TEXT: '#333333',\r\n    GRID: 'rgba(0, 0, 0, 0.1)'\r\n  },\r\n  GRADIENT: {\r\n    START: 'rgba(0, 255, 184, 0.2)',\r\n    END: 'rgba(0, 255, 184, 0)'\r\n  }\r\n};\r\n\r\n// 本地存储配置\r\nexport const STORAGE_CONFIG = {\r\n  AUTH_TOKEN: 'auth_token',\r\n  USER_INFO: 'user_info',\r\n  STRATEGY_CONFIG: 'strategy_config'\r\n};\r\n\r\n// 错误消息配置\r\nexport const ERROR_MESSAGES = {\r\n  NETWORK_ERROR: '网络连接错误，请检查您的网络设置',\r\n  AUTH_ERROR: '认证失败，请重新登录',\r\n  STRATEGY_ERROR: '策略操作失败，请稍后重试',\r\n  BACKTEST_ERROR: '回测失败，请检查参数设置'\r\n};\r\n\r\n// 成功消息配置\r\nexport const SUCCESS_MESSAGES = {\r\n  STRATEGY_CREATED: '策略创建成功',\r\n  STRATEGY_UPDATED: '策略更新成功',\r\n  STRATEGY_DELETED: '策略删除成功',\r\n  BACKTEST_COMPLETED: '回测完成'\r\n}; ","import axios from 'axios';\r\nimport { API_BASE_URL } from '../config';\r\n\r\nexport interface TimeRange {\r\n  start: string;\r\n  end: string;\r\n  interval: '1d' | '1w' | '1m' | '3m' | '1y';\r\n}\r\n\r\nexport interface AssetData {\r\n  total: number;\r\n  change24h: number;\r\n  currencies: Record<string, {\r\n    amount: number;\r\n    valueInUSD: number;\r\n    change24h: number;\r\n  }>;\r\n}\r\n\r\nexport interface StrategyData {\r\n  id: string;\r\n  name: string;\r\n  type: string;\r\n  status: 'active' | 'paused' | 'stopped';\r\n  performance: {\r\n    totalReturn: number;\r\n    annualizedReturn: number;\r\n    maxDrawdown: number;\r\n  };\r\n  riskLevel: 'low' | 'medium' | 'high';\r\n}\r\n\r\nexport interface ApiStatus {\r\n  id: string;\r\n  exchange: string;\r\n  status: 'active' | 'inactive' | 'error';\r\n  balance: number;\r\n  lastSync: string;\r\n}\r\n\r\nexport interface ChartData {\r\n  labels: string[];\r\n  datasets: {\r\n    label: string;\r\n    data: number[];\r\n    borderColor: string;\r\n    backgroundColor: string;\r\n  }[];\r\n}\r\n\r\nexport interface ProfitTarget {\r\n  id: string;\r\n  target: number;\r\n  current: number;\r\n  deadline: string;\r\n  progress: number;\r\n  status: 'active' | 'completed' | 'failed';\r\n}\r\n\r\nexport interface RiskMetrics {\r\n  sharpeRatio: number;\r\n  sortinoRatio: number;\r\n  volatility: number;\r\n  beta: number;\r\n}\r\n\r\nexport interface AssetDistribution {\r\n  total: number;\r\n  byCurrency: Record<string, number>;\r\n  byStrategy: Record<string, number>;\r\n}\r\n\r\nexport interface DashboardData {\r\n  totalAssets: number;\r\n  totalProfit: number;\r\n  activeStrategies: number;\r\n  successRate: number;\r\n  performanceData: Array<{ date: string; value: number }>;\r\n  assetDistribution: {\r\n    total: number;\r\n    byCurrency: Record<string, number>;\r\n    byStrategy: Record<string, number>;\r\n  };\r\n  recentActivities: Array<{\r\n    date: string;\r\n    type: string;\r\n    amount: number;\r\n    status: string;\r\n  }>;\r\n  strategies: Array<{\r\n    id: string;\r\n    name: string;\r\n    type: string;\r\n    status: 'active' | 'paused' | 'stopped';\r\n    performance: {\r\n      monthlyReturn: number;\r\n      winRate: number;\r\n      maxDrawdown: number;\r\n    };\r\n  }>;\r\n}\r\n\r\nclass DashboardService {\r\n  private static instance: DashboardService;\r\n  private baseUrl = '/api/dashboard';\r\n\r\n  private constructor() {}\r\n\r\n  static getInstance(): DashboardService {\r\n    if (!DashboardService.instance) {\r\n      DashboardService.instance = new DashboardService();\r\n    }\r\n    return DashboardService.instance;\r\n  }\r\n\r\n  async getAssets(): Promise<AssetData> {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/dashboard/assets`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching assets:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getStrategies(): Promise<StrategyData[]> {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/dashboard/strategies`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching strategies:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getApiStatus(): Promise<ApiStatus[]> {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/dashboard/api-status`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching API status:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getChartData(timeRange: TimeRange): Promise<ChartData> {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/dashboard/chart`, {\r\n        params: timeRange\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching chart data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getRiskMetrics(): Promise<RiskMetrics> {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/dashboard/risk-metrics`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching risk metrics:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async createProfitTarget(target: Omit<ProfitTarget, 'id' | 'progress' | 'status'>): Promise<ProfitTarget> {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/dashboard/profit-targets`, target);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating profit target:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteProfitTarget(id: string): Promise<void> {\r\n    try {\r\n      await axios.delete(`${API_BASE_URL}/dashboard/profit-targets/${id}`);\r\n    } catch (error) {\r\n      console.error('Error deleting profit target:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getProfitTargets(): Promise<ProfitTarget[]> {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/dashboard/profit-targets`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching profit targets:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getAssetDistribution(): Promise<AssetDistribution> {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/dashboard/asset-distribution`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching asset distribution:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async startStrategy(strategyId: string): Promise<void> {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/dashboard/strategies/${strategyId}/start`);\r\n    } catch (error) {\r\n      console.error('Error starting strategy:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async stopStrategy(strategyId: string): Promise<void> {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/dashboard/strategies/${strategyId}/stop`);\r\n    } catch (error) {\r\n      console.error('Error stopping strategy:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async pauseStrategy(strategyId: string): Promise<void> {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/dashboard/strategies/${strategyId}/pause`);\r\n    } catch (error) {\r\n      console.error('Error pausing strategy:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getDashboardData(): Promise<DashboardData> {\r\n    try {\r\n      const response = await axios.get(`${this.baseUrl}/data`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async updateStrategyStatus(strategyId: string, status: 'active' | 'paused' | 'stopped'): Promise<void> {\r\n    try {\r\n      await axios.post(`${this.baseUrl}/strategies/${strategyId}/status`, { status });\r\n    } catch (error) {\r\n      console.error('Error updating strategy status:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getPerformanceData(timeRange: '1d' | '1w' | '1m' | '3m' | '1y'): Promise<Array<{ date: string; value: number }>> {\r\n    try {\r\n      const response = await axios.get(`${this.baseUrl}/performance`, {\r\n        params: { timeRange }\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching performance data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getRecentActivities(): Promise<Array<{\r\n    date: string;\r\n    type: string;\r\n    amount: number;\r\n    status: string;\r\n  }>> {\r\n    try {\r\n      const response = await axios.get(`${this.baseUrl}/activities`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching recent activities:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DashboardService.getInstance(); ","import React from 'react';\r\nimport {\r\n  Alert,\r\n  AlertTitle,\r\n  Collapse,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\n\r\ninterface PandaAlertProps {\r\n  severity?: 'success' | 'info' | 'warning' | 'error';\r\n  title?: string;\r\n  message: string;\r\n  variant?: 'standard' | 'filled' | 'outlined';\r\n  onClose?: () => void;\r\n  closable?: boolean;\r\n  icon?: React.ReactNode;\r\n  action?: React.ReactNode;\r\n  animate?: boolean;\r\n  glow?: boolean;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst PandaAlert: React.FC<PandaAlertProps> = ({\r\n  severity = 'info',\r\n  title,\r\n  message,\r\n  variant = 'standard',\r\n  onClose,\r\n  closable = true,\r\n  icon,\r\n  action,\r\n  animate = true,\r\n  glow = false,\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const getAlertStyle = () => ({\r\n    borderRadius: theme.shape.borderRadius,\r\n    transition: 'all 0.3s ease-in-out',\r\n    '&:hover': {\r\n      boxShadow: glow ? theme.shadows[4] : 'none',\r\n    },\r\n  });\r\n\r\n  const getAnimation = () => {\r\n    if (!animate) return {};\r\n\r\n    return {\r\n      initial: { opacity: 0, y: -20 },\r\n      animate: { opacity: 1, y: 0 },\r\n      exit: { opacity: 0, y: 20 },\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Collapse in={true}>\r\n      <motion.div {...getAnimation()}>\r\n        <Alert\r\n          severity={severity}\r\n          variant={variant}\r\n          onClose={closable ? onClose : undefined}\r\n          icon={icon}\r\n          action={action}\r\n          sx={getAlertStyle()}\r\n        >\r\n          {title && <AlertTitle>{title}</AlertTitle>}\r\n          {message}\r\n        </Alert>\r\n      </motion.div>\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nexport default PandaAlert; ","import React from 'react';\r\nimport {\r\n  LinearProgress,\r\n  CircularProgress,\r\n  Typography,\r\n  Box,\r\n  useTheme,\r\n  LinearProgressProps,\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport { themeUtils } from '../../theme';\r\n\r\nexport interface PandaProgressProps extends LinearProgressProps {\r\n  value: number;\r\n  animate?: boolean;\r\n  variant?: 'determinate' | 'indeterminate' | 'buffer';\r\n  type?: 'linear' | 'circular';\r\n  size?: number | string;\r\n  color?: 'primary' | 'secondary' | 'success' | 'error' | 'info' | 'warning';\r\n  label?: string;\r\n  showValue?: boolean;\r\n  glow?: boolean;\r\n  thickness?: number;\r\n}\r\n\r\nconst PandaProgress: React.FC<PandaProgressProps> = ({\r\n  value,\r\n  animate = true,\r\n  variant = 'determinate',\r\n  type = 'linear',\r\n  size = type === 'linear' ? '100%' : 40,\r\n  color = 'primary',\r\n  label,\r\n  showValue = false,\r\n  glow = false,\r\n  thickness = type === 'linear' ? 4 : 3.6,\r\n  ...props\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const getProgressStyle = () => ({\r\n    '& .MuiLinearProgress-bar': {\r\n      borderRadius: theme.shape.borderRadius,\r\n      background: themeUtils.createGradient(\r\n        theme.palette[color].main,\r\n        theme.palette[color].light\r\n      ),\r\n    },\r\n    '& .MuiCircularProgress-circle': {\r\n      stroke: `url(#${color}Gradient)`,\r\n    },\r\n    ...(glow && {\r\n      boxShadow: `0 0 20px ${theme.palette[color].main}20`,\r\n    }),\r\n  });\r\n\r\n  const progress = (\r\n    <Box sx={{ position: 'relative', width: size, height: size }}>\r\n      {type === 'linear' ? (\r\n        <>\r\n          {label && (\r\n            <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n              {label}\r\n            </Typography>\r\n          )}\r\n          <LinearProgress\r\n            variant={variant}\r\n            value={value}\r\n            sx={getProgressStyle()}\r\n            {...props}\r\n          />\r\n          {showValue && (\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"text.secondary\"\r\n              sx={{ mt: 1, textAlign: 'right' }}\r\n            >\r\n              {`${Math.round(value)}%`}\r\n            </Typography>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <CircularProgress\r\n            variant={variant === 'buffer' ? 'determinate' : variant}\r\n            value={value}\r\n            size={size}\r\n            thickness={thickness}\r\n            sx={getProgressStyle()}\r\n            {...props}\r\n          />\r\n          {showValue && (\r\n            <Box\r\n              sx={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"caption\"\r\n                component=\"div\"\r\n                color=\"text.secondary\"\r\n              >\r\n                {`${Math.round(value)}%`}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n\r\n  if (!animate) {\r\n    return progress;\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: -10 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.3 }}\r\n    >\r\n      {progress}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default PandaProgress; ","import React, { useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  IconButton,\r\n  Collapse,\r\n  CardProps,\r\n  Box,\r\n  SxProps,\r\n  Theme,\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\ninterface PandaCardProps extends Omit<CardProps, 'content'> {\r\n  title?: string;\r\n  subheader?: string;\r\n  content?: React.ReactNode;\r\n  actions?: React.ReactNode;\r\n  expanded?: boolean;\r\n  onExpand?: () => void;\r\n  variant?: 'elevation' | 'outlined';\r\n  elevation?: number;\r\n  gradient?: boolean;\r\n  animation?: boolean;\r\n  sx?: SxProps<Theme>;\r\n  image?: string;\r\n  imagePosition?: string;\r\n  backgroundColor?: string;\r\n  borderRadius?: number;\r\n  padding?: number;\r\n  boxShadow?: string;\r\n  backdropFilter?: string;\r\n}\r\n\r\nconst PandaCard: React.FC<PandaCardProps> = ({\r\n  title,\r\n  subheader,\r\n  content,\r\n  actions,\r\n  expanded: controlledExpanded,\r\n  onExpand,\r\n  variant = 'elevation',\r\n  elevation = 0,\r\n  gradient = false,\r\n  animation = true,\r\n  sx,\r\n  image,\r\n  imagePosition,\r\n  backgroundColor,\r\n  borderRadius,\r\n  padding,\r\n  boxShadow,\r\n  backdropFilter,\r\n  ...props\r\n}) => {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const expanded = controlledExpanded ?? isExpanded;\r\n\r\n  const handleExpand = () => {\r\n    setIsExpanded(!expanded);\r\n    onExpand?.();\r\n  };\r\n\r\n  const cardStyle = {\r\n    background: gradient ? 'linear-gradient(135deg, rgba(0, 255, 184, 0.1), rgba(0, 184, 255, 0.1))' : 'transparent',\r\n    backdropFilter: 'blur(10px)',\r\n    border: '1px solid rgba(255, 255, 255, 0.1)',\r\n    ...sx,\r\n  };\r\n\r\n  const getAnimation = () => {\r\n    if (!animation) return {};\r\n    return {\r\n      initial: { opacity: 0, y: 20 },\r\n      animate: { opacity: 1, y: 0 },\r\n      exit: { opacity: 0, y: -20 },\r\n      transition: { duration: 0.3 },\r\n    };\r\n  };\r\n\r\n  return (\r\n    <motion.div {...getAnimation()}>\r\n      <Card\r\n        variant={variant}\r\n        elevation={elevation}\r\n        sx={cardStyle}\r\n        {...props}\r\n      >\r\n        {title && (\r\n          <CardHeader\r\n            title={title}\r\n            subheader={subheader}\r\n            action={\r\n              onExpand && (\r\n                <IconButton\r\n                  onClick={handleExpand}\r\n                  sx={{\r\n                    transform: expanded ? 'rotate(180deg)' : 'rotate(0)',\r\n                    transition: 'transform 0.3s',\r\n                  }}\r\n                >\r\n                  <ExpandMoreIcon />\r\n                </IconButton>\r\n              )\r\n            }\r\n          />\r\n        )}\r\n        {content && <CardContent>{content}</CardContent>}\r\n        {actions && <CardActions>{actions}</CardActions>}\r\n        {props.children}\r\n        {onExpand && (\r\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n            <Box sx={{ mt: 2 }}>\r\n              {props.children}\r\n            </Box>\r\n          </Collapse>\r\n        )}\r\n      </Card>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default PandaCard; ","import React from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  TableProps,\r\n  useTheme,\r\n  TablePagination,\r\n  TableSortLabel,\r\n  CircularProgress,\r\n  Box,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\n\r\nexport interface Column {\r\n  id: string;\r\n  label: string;\r\n  minWidth?: number;\r\n  align?: 'left' | 'right' | 'center';\r\n  format?: (value: any) => string;\r\n}\r\n\r\nexport interface PandaTableProps extends TableProps {\r\n  columns: Column[];\r\n  data: any[];\r\n  loading?: boolean;\r\n  page?: number;\r\n  rowsPerPage?: number;\r\n  totalRows?: number;\r\n  onPageChange?: (page: number) => void;\r\n  onRowsPerPageChange?: (rowsPerPage: number) => void;\r\n  orderBy?: string;\r\n  order?: 'asc' | 'desc';\r\n  onSort?: (property: string) => void;\r\n  animate?: boolean;\r\n  glow?: boolean;\r\n}\r\n\r\nconst PandaTable: React.FC<PandaTableProps> = ({\r\n  columns,\r\n  data,\r\n  loading = false,\r\n  page = 0,\r\n  rowsPerPage = 10,\r\n  totalRows = 0,\r\n  onPageChange,\r\n  onRowsPerPageChange,\r\n  orderBy,\r\n  order,\r\n  onSort,\r\n  animate = true,\r\n  glow = false,\r\n  ...props\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const getTableStyle = () => ({\r\n    borderRadius: theme.shape.borderRadius,\r\n    overflow: 'hidden',\r\n    boxShadow: glow ? theme.shadows[4] : 'none',\r\n    '& .MuiTableHead-root': {\r\n      background: theme.palette.background.paper,\r\n    },\r\n    '& .MuiTableBody-root': {\r\n      '& .MuiTableRow-root': {\r\n        '&:hover': {\r\n          background: theme.palette.action.hover,\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const getAnimation = () => {\r\n    if (!animate) return {};\r\n\r\n    return {\r\n      initial: { opacity: 0, y: 20 },\r\n      animate: { opacity: 1, y: 0 },\r\n      exit: { opacity: 0, y: -20 },\r\n    };\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    onPageChange?.(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    onRowsPerPageChange?.(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const table = (\r\n    <TableContainer component={Paper} sx={getTableStyle()}>\r\n      <Table {...props}>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map((column) => (\r\n              <TableCell\r\n                key={column.id}\r\n                align={column.align}\r\n                style={{ minWidth: column.minWidth }}\r\n              >\r\n                {onSort ? (\r\n                  <TableSortLabel\r\n                    active={orderBy === column.id}\r\n                    direction={orderBy === column.id ? order : 'asc'}\r\n                    onClick={() => onSort(column.id)}\r\n                  >\r\n                    {column.label}\r\n                  </TableSortLabel>\r\n                ) : (\r\n                  column.label\r\n                )}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {loading ? (\r\n            <TableRow>\r\n              <TableCell colSpan={columns.length} align=\"center\">\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\r\n                  <CircularProgress />\r\n                </Box>\r\n              </TableCell>\r\n            </TableRow>\r\n          ) : data.length === 0 ? (\r\n            <TableRow>\r\n              <TableCell colSpan={columns.length} align=\"center\">\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  No data available\r\n                </Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          ) : (\r\n            data.map((row, index) => (\r\n              <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                {columns.map((column) => {\r\n                  const value = row[column.id];\r\n                  return (\r\n                    <TableCell key={column.id} align={column.align}>\r\n                      {column.format ? column.format(value) : String(value)}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            ))\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n\r\n  if (!animate) {\r\n    return table;\r\n  }\r\n\r\n  return (\r\n    <motion.div {...getAnimation()}>\r\n      {table}\r\n      {onPageChange && onRowsPerPageChange && (\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={totalRows}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default PandaTable; ","import React from 'react';\r\nimport { Box, Typography, useTheme } from '@mui/material';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ninterface StrategyReturnDistributionProps {\r\n  data: {\r\n    labels: string[];\r\n    values: number[];\r\n  };\r\n  title?: string;\r\n}\r\n\r\nconst StrategyReturnDistribution: React.FC<StrategyReturnDistributionProps> = ({ data, title = '策略收益分布' }) => {\r\n  const theme = useTheme();\r\n\r\n  const chartData = {\r\n    labels: data.labels,\r\n    datasets: [\r\n      {\r\n        label: '收益分布',\r\n        data: data.values,\r\n        backgroundColor: theme.palette.primary.main,\r\n        borderColor: theme.palette.primary.dark,\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top' as const,\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: title,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: '频次',\r\n        },\r\n      },\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: '收益区间',\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%', p: 2 }}>\r\n      <Bar data={chartData} options={options} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StrategyReturnDistribution; ","import React from 'react';\r\nimport { Box, useTheme } from '@mui/material';\r\nimport {\r\n  Chart as ChartJS,\r\n  RadialLinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Filler,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Radar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  RadialLinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Filler,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ninterface RiskMetricsRadarProps {\r\n  data: {\r\n    labels: string[];\r\n    values: number[];\r\n  };\r\n  title?: string;\r\n}\r\n\r\nconst RiskMetricsRadar: React.FC<RiskMetricsRadarProps> = ({ data, title = '风险指标雷达图' }) => {\r\n  const theme = useTheme();\r\n\r\n  const chartData = {\r\n    labels: data.labels,\r\n    datasets: [\r\n      {\r\n        label: '风险指标',\r\n        data: data.values,\r\n        backgroundColor: `${theme.palette.primary.main}40`,\r\n        borderColor: theme.palette.primary.main,\r\n        borderWidth: 2,\r\n        pointBackgroundColor: theme.palette.primary.main,\r\n        pointBorderColor: '#fff',\r\n        pointHoverBackgroundColor: '#fff',\r\n        pointHoverBorderColor: theme.palette.primary.main,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top' as const,\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: title,\r\n      },\r\n    },\r\n    scales: {\r\n      r: {\r\n        beginAtZero: true,\r\n        max: 100,\r\n        ticks: {\r\n          stepSize: 20,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%', p: 2 }}>\r\n      <Radar data={chartData} options={options} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RiskMetricsRadar; ","import React from 'react';\r\nimport { Box, useTheme } from '@mui/material';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Chart } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ninterface TradeFrequencyHeatmapProps {\r\n  data: {\r\n    labels: string[];\r\n    datasets: {\r\n      label: string;\r\n      data: number[][];\r\n    }[];\r\n  };\r\n  title?: string;\r\n}\r\n\r\nconst TradeFrequencyHeatmap: React.FC<TradeFrequencyHeatmapProps> = ({ data, title = '交易频率热力图' }) => {\r\n  const theme = useTheme();\r\n\r\n  const chartData = {\r\n    labels: data.labels,\r\n    datasets: data.datasets.map(dataset => ({\r\n      ...dataset,\r\n      backgroundColor: (context: any) => {\r\n        const value = context.dataset.data[context.dataIndex];\r\n        const alpha = (value - Math.min(...dataset.data.flat())) / (Math.max(...dataset.data.flat()) - Math.min(...dataset.data.flat()));\r\n        return `${theme.palette.primary.main}${Math.floor(alpha * 255).toString(16).padStart(2, '0')}`;\r\n      },\r\n    })),\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top' as const,\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: title,\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        type: 'category' as const,\r\n        labels: data.labels,\r\n        title: {\r\n          display: true,\r\n          text: '时间',\r\n        },\r\n      },\r\n      y: {\r\n        type: 'category' as const,\r\n        labels: data.labels,\r\n        title: {\r\n          display: true,\r\n          text: '交易对',\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100%', p: 2 }}>\r\n      <Chart type=\"matrix\" data={chartData} options={options} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TradeFrequencyHeatmap; ","import React from 'react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\nimport { Box, Typography } from '@mui/material';\r\nimport type { PerformanceData } from '../../types/chart';\r\n\r\ninterface PerformanceChartProps {\r\n  data: PerformanceData[];\r\n  showMetrics?: (keyof Omit<PerformanceData, 'date'>)[];\r\n  title?: string;\r\n}\r\n\r\nconst METRIC_COLORS = {\r\n  value: '#8884d8',\r\n  dailyReturn: '#82ca9d',\r\n  monthlyReturn: '#ffc658',\r\n  annualizedReturn: '#ff7300',\r\n  sharpeRatio: '#00C49F',\r\n  maxDrawdown: '#ff0000'\r\n};\r\n\r\nconst METRIC_LABELS = {\r\n  value: '总资产',\r\n  dailyReturn: '日收益率',\r\n  monthlyReturn: '月收益率',\r\n  annualizedReturn: '年化收益率',\r\n  sharpeRatio: '夏普比率',\r\n  maxDrawdown: '最大回撤'\r\n};\r\n\r\nexport const PerformanceChart: React.FC<PerformanceChartProps> = ({ \r\n  data, \r\n  showMetrics = ['value'],\r\n  title\r\n}) => {\r\n  return (\r\n    <Box sx={{ width: '100%', height: 400 }}>\r\n      {title && (\r\n        <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <LineChart data={data}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis />\r\n          <Tooltip content={<CustomTooltip metrics={showMetrics} />} />\r\n          <Legend />\r\n          {showMetrics.map((metric) => (\r\n            <Line\r\n              key={metric}\r\n              type=\"monotone\"\r\n              dataKey={metric}\r\n              name={METRIC_LABELS[metric]}\r\n              stroke={METRIC_COLORS[metric]}\r\n              strokeWidth={2}\r\n            />\r\n          ))}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\ninterface CustomTooltipProps {\r\n  active?: boolean;\r\n  payload?: Array<any>;\r\n  label?: string;\r\n  metrics: (keyof Omit<PerformanceData, 'date'>)[];\r\n}\r\n\r\nconst CustomTooltip: React.FC<CustomTooltipProps> = ({ active, payload, label, metrics }) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.paper',\r\n          p: 2,\r\n          border: 1,\r\n          borderColor: 'divider',\r\n          borderRadius: 1,\r\n          boxShadow: 1\r\n        }}\r\n      >\r\n        <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n          {label}\r\n        </Typography>\r\n        {metrics.map((metric, index) => (\r\n          <Typography key={metric} variant=\"body2\" sx={{ color: METRIC_COLORS[metric] }}>\r\n            {METRIC_LABELS[metric]}: {\r\n              metric === 'value' \r\n                ? `¥${payload[index]?.value?.toLocaleString()}`\r\n                : `${payload[index]?.value?.toFixed(2)}${metric === 'maxDrawdown' ? '%' : ''}`\r\n            }\r\n          </Typography>\r\n        ))}\r\n      </Box>\r\n    );\r\n  }\r\n  return null;\r\n}; ","import React from 'react';\r\nimport {\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\ninterface AssetDistributionData {\r\n  total: number;\r\n  byCurrency: Record<string, number>;\r\n  byStrategy: Record<string, number>;\r\n}\r\n\r\ninterface AssetDistributionChartProps {\r\n  data: AssetDistributionData;\r\n}\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8'];\r\n\r\nexport const AssetDistributionChart: React.FC<AssetDistributionChartProps> = ({ data }) => {\r\n  const currencyData = Object.entries(data.byCurrency).map(([name, value]) => ({\r\n    name,\r\n    value\r\n  }));\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={300}>\r\n      <PieChart>\r\n        <Pie\r\n          data={currencyData}\r\n          cx=\"50%\"\r\n          cy=\"50%\"\r\n          labelLine={false}\r\n          label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\r\n          outerRadius={80}\r\n          fill=\"#8884d8\"\r\n          dataKey=\"value\"\r\n        >\r\n          {currencyData.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n          ))}\r\n        </Pie>\r\n        <Tooltip content={<CustomTooltip />} />\r\n        <Legend content={<CustomLegend />} />\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nconst CustomTooltip: React.FC<any> = ({ active, payload }) => {\r\n  if (active && payload && payload.length) {\r\n    const data = payload[0].payload;\r\n    return (\r\n      <div className=\"bg-white p-2 border border-gray-200 rounded shadow\">\r\n        <p className=\"font-medium\">{data.name}</p>\r\n        <p className=\"text-primary-600\">${data.value.toLocaleString()}</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst CustomLegend: React.FC<any> = ({ payload }) => {\r\n  return (\r\n    <div className=\"flex justify-center mt-4\">\r\n      {payload.map((entry: any, index: number) => (\r\n        <div key={`legend-${index}`} className=\"flex items-center mx-2\">\r\n          <div\r\n            className=\"w-3 h-3 mr-1\"\r\n            style={{ backgroundColor: entry.color }}\r\n          />\r\n          <span className=\"text-sm text-gray-600\">{entry.value}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}; ","import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useWeb3 } from '../hooks/useWeb3';\r\nimport AssetOverview from '../components/dashboard/AssetOverview';\r\nimport { AssetData } from '../services/dashboardService';\r\nimport { StyledCard } from '../components/common/StyledCard';\r\nimport { GradientTitle } from '../components/common/GradientTitle';\r\nimport Layout from '../components/Layout';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  Grid, \r\n  CircularProgress,\r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n  Tooltip,\r\n  useTheme,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  useMediaQuery,\r\n  Tabs,\r\n  Tab,\r\n  Paper,\r\n  FormControlLabel,\r\n  Switch,\r\n  Container,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  LinearProgress,\r\n  Button,\r\n  SelectChangeEvent,\r\n  Chip,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  CardHeader,\r\n} from '@mui/material';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { themeUtils } from '../theme';\r\nimport {\r\n  AccountBalance as AccountBalanceIcon,\r\n  TrendingUp as TrendingUpIcon,\r\n  Api as ApiIcon,\r\n  Settings as SettingsIcon,\r\n  Refresh as RefreshIcon,\r\n  Warning as WarningIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  PieChart as PieChartIcon,\r\n  Timeline as TimelineIcon,\r\n  Delete as DeleteIcon,\r\n  PlayArrow as PlayArrowIcon,\r\n  Pause as PauseIcon,\r\n  Stop as StopIcon,\r\n  Error as ErrorIcon,\r\n  PlayCircle as PlayCircleIcon,\r\n  PauseCircle as PauseCircleIcon,\r\n  StopCircle as StopCircleIcon,\r\n  Info as InfoIcon,\r\n  Link as LinkIcon,\r\n} from '@mui/icons-material';\r\nimport { Line, Bar, Pie } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  Tooltip as ChartTooltip,\r\n  Legend\r\n} from 'chart.js';\r\nimport dashboardService, { \r\n  TimeRange, \r\n  StrategyData, \r\n  ApiStatus, \r\n  ChartData, \r\n  ProfitTarget as ServiceProfitTarget,\r\n  DashboardData\r\n} from '../services/dashboardService';\r\nimport PandaAlert from '../components/common/PandaAlert';\r\nimport PandaProgress from '../components/common/PandaProgress';\r\nimport PandaButton from '../components/common/PandaButton';\r\nimport PandaCard from '../components/common/PandaCard';\r\nimport PandaTable from '../components/common/PandaTable';\r\nimport {\r\n  LineChart,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  Area,\r\n  Tooltip as RechartsTooltip,\r\n} from 'recharts';\r\nimport { StrategyReturnDistribution, RiskMetricsRadar, TradeFrequencyHeatmap } from '../components/charts';\r\nimport StrategyOverview from '../components/dashboard/StrategyOverview';\r\nimport { fadeIn, slideUp, staggerChildren } from '../animations';\r\nimport { PerformanceChart } from '../components/charts/PerformanceChart';\r\nimport { AssetDistributionChart } from '../components/charts/AssetDistributionChart';\r\nimport type { PerformanceData } from '../types/chart';\r\n\r\n// 注册 Chart.js 组件\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  ArcElement,\r\n  Title,\r\n  ChartTooltip,\r\n  Legend\r\n);\r\n\r\ntype ChartType = 'line' | 'bar' | 'pie';\r\ntype TimeInterval = '1d' | '1w' | '1m' | '3m' | '1y';\r\n\r\ninterface CurrencyData {\r\n  amount: number;\r\n  valueInUSD: number;\r\n  change24h: number;\r\n}\r\n\r\ninterface StrategyStatus {\r\n  id: string;\r\n  name: string;\r\n  type: string;\r\n  status: 'running' | 'paused' | 'stopped';\r\n  riskLevel: 'low' | 'medium' | 'high';\r\n  performance: {\r\n    totalReturn: number;\r\n    dailyReturn: number;\r\n    maxDrawdown: number;\r\n    winRate: number;\r\n  };\r\n  lastTrade: {\r\n    time: string;\r\n    type: 'buy' | 'sell';\r\n    amount: number;\r\n    price: number;\r\n  };\r\n}\r\n\r\ninterface NewProfitTarget {\r\n  currency: string;\r\n  targetAmount: number;\r\n  deadline: string;\r\n}\r\n\r\ninterface Strategy {\r\n  id: string;\r\n  name: string;\r\n  type: string;\r\n  status: 'active' | 'paused' | 'stopped';\r\n  performance: {\r\n    monthlyReturn: number;\r\n    winRate: number;\r\n    maxDrawdown: number;\r\n    totalReturn: number;\r\n    annualizedReturn: number;\r\n  };\r\n  targetReturn: {\r\n    monthly: number;\r\n    annual: number;\r\n  };\r\n}\r\n\r\ninterface User {\r\n  username: string;\r\n  email: string;\r\n}\r\n\r\ninterface DashboardProps {\r\n  user: User;\r\n}\r\n\r\nconst Dashboard: React.FC<DashboardProps> = ({ user }) => {\r\n  const { t } = useTranslation();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const navigate = useNavigate();\r\n  const { isAuthenticated, logout } = useAuth();\r\n  const { connect, disconnect, isConnected, account } = useWeb3();\r\n  \r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [chartType, setChartType] = useState<ChartType>('line');\r\n  const [timeInterval, setTimeInterval] = useState<TimeInterval>('1m');\r\n  const [chartData, setChartData] = useState<ChartData | null>(null);\r\n  const [assetDistribution, setAssetDistribution] = useState<AssetData[]>([]);\r\n  const [strategyStatus, setStrategyStatus] = useState<StrategyStatus[]>([]);\r\n  const [apiStatus, setApiStatus] = useState<ApiStatus[]>([]);\r\n  const [profitTargets, setProfitTargets] = useState<ServiceProfitTarget[]>([]);\r\n  const [selectedCurrency, setSelectedCurrency] = useState('USDT');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [autoRefresh, setAutoRefresh] = useState(true);\r\n  const [refreshInterval, setRefreshInterval] = useState(30);\r\n  const [timeRange, setTimeRange] = useState<TimeRange>('1m');\r\n  const [dashboardData, setDashboardData] = useState<DashboardData | null>(null);\r\n  const [performanceData, setPerformanceData] = useState<PerformanceData[]>([]);\r\n  const [showAddTargetDialog, setShowAddTargetDialog] = useState(false);\r\n  const [newTarget, setNewTarget] = useState<NewProfitTarget>({\r\n    currency: 'USDT',\r\n    targetAmount: 0,\r\n    deadline: new Date().toISOString().split('T')[0]\r\n  });\r\n\r\n  const [currentTab, setCurrentTab] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\r\n  const [riskMetrics, setRiskMetrics] = useState({\r\n    sharpeRatio: 0,\r\n    sortinoRatio: 0,\r\n    volatility: 0,\r\n    beta: 0\r\n  });\r\n\r\n  const [assets, setAssets] = useState<AssetData>({\r\n    total: 0,\r\n    change24h: 0,\r\n    currencies: {}\r\n  });\r\n\r\n  const [strategies] = useState<Strategy[]>([\r\n    {\r\n      id: '1',\r\n      name: 'Trend Following',\r\n      type: 'trend',\r\n      status: 'active',\r\n      performance: {\r\n        monthlyReturn: 2.1,\r\n        winRate: 65,\r\n        maxDrawdown: 15.2,\r\n        totalReturn: 24,\r\n        annualizedReturn: 24,\r\n      },\r\n      targetReturn: {\r\n        monthly: 2,\r\n        annual: 24,\r\n      },\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Mean Reversion',\r\n      type: 'meanReversion',\r\n      status: 'paused',\r\n      performance: {\r\n        monthlyReturn: 1.2,\r\n        winRate: 75,\r\n        maxDrawdown: 8.5,\r\n        totalReturn: 12,\r\n        annualizedReturn: 12,\r\n      },\r\n      targetReturn: {\r\n        monthly: 1,\r\n        annual: 12,\r\n      },\r\n    },\r\n  ]);\r\n\r\n  const [assetTrend] = useState([\r\n    { date: '2024-01', value: 900000 },\r\n    { date: '2024-02', value: 950000 },\r\n    { date: '2024-03', value: 1000000 },\r\n  ]);\r\n\r\n  // 添加新的状态用于可视化数据\r\n  const [returnDistributionData, setReturnDistributionData] = useState({\r\n    labels: ['-5%', '-3%', '-1%', '1%', '3%', '5%'],\r\n    values: [10, 20, 30, 40, 30, 20]\r\n  });\r\n\r\n  const [riskMetricsData, setRiskMetricsData] = useState({\r\n    labels: ['波动率', '最大回撤', '夏普比率', '胜率', '盈亏比'],\r\n    values: [80, 60, 70, 90, 75]\r\n  });\r\n\r\n  const [tradeFrequencyData, setTradeFrequencyData] = useState({\r\n    labels: ['00:00', '04:00', '08:00', '12:00', '16:00', '20:00'],\r\n    datasets: [{\r\n      label: 'BTC/USDT',\r\n      data: [[10, 20, 30, 40, 50, 60], [15, 25, 35, 45, 55, 65]]\r\n    }]\r\n  });\r\n\r\n  const [totalProfit, setTotalProfit] = useState(0);\r\n  const [activeStrategies, setActiveStrategies] = useState(0);\r\n  const [successRate, setSuccessRate] = useState(0);\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setActiveTab(newValue);\r\n  };\r\n\r\n  const handleChartTypeChange = (type: ChartType) => {\r\n    setChartType(type);\r\n  };\r\n\r\n  const handleTimeIntervalChange = (interval: TimeInterval) => {\r\n    setTimeInterval(interval);\r\n    fetchChartData(interval);\r\n  };\r\n\r\n  const getStartDate = (interval: TimeInterval): string => {\r\n    const now = new Date();\r\n    switch (interval) {\r\n      case '1d':\r\n        return new Date(now.setDate(now.getDate() - 1)).toISOString();\r\n      case '1w':\r\n        return new Date(now.setDate(now.getDate() - 7)).toISOString();\r\n      case '1m':\r\n        return new Date(now.setMonth(now.getMonth() - 1)).toISOString();\r\n      case '3m':\r\n        return new Date(now.setMonth(now.getMonth() - 3)).toISOString();\r\n      case '1y':\r\n        return new Date(now.setFullYear(now.getFullYear() - 1)).toISOString();\r\n      default:\r\n        return new Date(now.setDate(now.getDate() - 1)).toISOString();\r\n    }\r\n  };\r\n\r\n  const fetchChartData = async (interval: TimeInterval) => {\r\n    try {\r\n      const data = await dashboardService.getChartData({\r\n        start: getStartDate(interval),\r\n        end: new Date().toISOString(),\r\n        interval: interval,\r\n      });\r\n      setChartData(data);\r\n      \r\n      // Convert ChartData to PerformanceData\r\n      const performanceData = data.labels.map((date, index) => ({\r\n        date,\r\n        value: data.datasets[0].data[index],\r\n        change: index > 0 ? data.datasets[0].data[index] - data.datasets[0].data[index - 1] : 0,\r\n      }));\r\n      setPerformanceData(performanceData);\r\n    } catch (error) {\r\n      console.error('Error fetching chart data:', error);\r\n    }\r\n  };\r\n\r\n  const fetchDashboardData = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await dashboardService.getDashboardData();\r\n      setDashboardData(data);\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(t('dashboard.errors.fetchFailed'));\r\n      console.error('Error fetching dashboard data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [t]);\r\n\r\n  const fetchProfitTargets = useCallback(async () => {\r\n    try {\r\n      const targets = await dashboardService.getProfitTargets();\r\n      setProfitTargets(targets);\r\n    } catch (error) {\r\n      console.error('Error fetching profit targets:', error);\r\n    }\r\n  }, []);\r\n\r\n  const fetchRiskMetrics = useCallback(async () => {\r\n    try {\r\n      const metrics = await dashboardService.getRiskMetrics();\r\n      setRiskMetrics(metrics);\r\n    } catch (error) {\r\n      console.error('Error fetching risk metrics:', error);\r\n    }\r\n  }, []);\r\n\r\n  const fetchAssetDistribution = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await dashboardService.getAssetDistribution();\r\n      setAssetDistribution(response);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(error instanceof Error ? error.message : 'Failed to fetch asset distribution');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchStrategyStatus = async () => {\r\n    try {\r\n      const response = await fetch('/api/strategies/status');\r\n      const data = await response.json();\r\n      setStrategyStatus(data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch strategy status:', error);\r\n    }\r\n  };\r\n\r\n  // Add fetchAssets function\r\n  const fetchAssets = useCallback(async () => {\r\n    try {\r\n      // Mock data for now - replace with actual API call\r\n      const mockAssets: AssetData = {\r\n        total: 75000,\r\n        change24h: 1.3,\r\n        currencies: {\r\n          'BTC': { amount: 1.5, valueInUSD: 45000, change24h: 2.5 },\r\n          'ETH': { amount: 10, valueInUSD: 25000, change24h: -1.2 },\r\n          'USDT': { amount: 5000, valueInUSD: 5000, change24h: 0 }\r\n        }\r\n      };\r\n      setAssets(mockAssets);\r\n    } catch (error) {\r\n      console.error('Error fetching assets:', error);\r\n    }\r\n  }, []);\r\n\r\n  // Initial data fetch\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      fetchDashboardData();\r\n      fetchProfitTargets();\r\n      fetchRiskMetrics();\r\n      fetchAssetDistribution();\r\n      fetchStrategyStatus();\r\n    }\r\n  }, [isAuthenticated, fetchDashboardData, fetchProfitTargets, fetchRiskMetrics, fetchAssetDistribution, fetchStrategyStatus]);\r\n\r\n  useEffect(() => {\r\n    fetchAssets();\r\n  }, [fetchAssets]);\r\n\r\n  // Auto refresh setup\r\n  useEffect(() => {\r\n    if (!autoRefresh || !isAuthenticated) return;\r\n\r\n    const interval = setInterval(() => {\r\n      fetchDashboardData();\r\n    }, refreshInterval);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [autoRefresh, refreshInterval, isAuthenticated, fetchDashboardData]);\r\n\r\n  const handleTimeRangeChange = (event: SelectChangeEvent) => {\r\n    const value = event.target.value as TimeRange['interval'];\r\n    setTimeRange(prev => ({\r\n      ...prev,\r\n      interval: value\r\n    }));\r\n  };\r\n\r\n  const handleAutoRefreshChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAutoRefresh(event.target.checked);\r\n  };\r\n\r\n  const handleRefreshIntervalChange = (event: SelectChangeEvent) => {\r\n    setRefreshInterval(Number(event.target.value));\r\n  };\r\n\r\n  const handleManualRefresh = () => {\r\n    fetchDashboardData();\r\n  };\r\n\r\n  const handleStrategyAction = async (strategyId: string, action: 'start' | 'stop' | 'pause') => {\r\n    try {\r\n      setLoading(true);\r\n      switch (action) {\r\n        case 'start':\r\n          await dashboardService.startStrategy(strategyId);\r\n          break;\r\n        case 'stop':\r\n          await dashboardService.stopStrategy(strategyId);\r\n          break;\r\n        case 'pause':\r\n          await dashboardService.pauseStrategy(strategyId);\r\n          break;\r\n      }\r\n      await fetchDashboardData();\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(error instanceof Error ? error.message : 'Failed to perform strategy action');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCurrencyChange = (event: SelectChangeEvent) => {\r\n    setSelectedCurrency(event.target.value);\r\n  };\r\n\r\n  const handleAddTarget = async () => {\r\n    try {\r\n      if (!newTarget.currency || !newTarget.targetAmount || !newTarget.deadline) {\r\n        setError(t('dashboard.errors.invalidTarget'));\r\n        return;\r\n      }\r\n\r\n      const target: Omit<ServiceProfitTarget, 'id'> = {\r\n        target: newTarget.targetAmount,\r\n        current: currencies[newTarget.currency]?.amount || 0,\r\n        deadline: newTarget.deadline,\r\n        progress: 0,\r\n        status: 'active'\r\n      };\r\n\r\n      await dashboardService.createProfitTarget(target);\r\n      await fetchProfitTargets();\r\n      setShowAddTargetDialog(false);\r\n      setNewTarget({\r\n        currency: 'USD',\r\n        targetAmount: 0,\r\n        deadline: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]\r\n      });\r\n    } catch (error) {\r\n      setError(t('dashboard.errors.createTargetFailed'));\r\n      console.error('Error creating profit target:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteTarget = async (id: string) => {\r\n    try {\r\n      await dashboardService.deleteProfitTarget(id);\r\n      await fetchProfitTargets();\r\n    } catch (error) {\r\n      setError(t('dashboard.errors.deleteTargetFailed'));\r\n      console.error('Error deleting profit target:', error);\r\n    }\r\n  };\r\n\r\n  // 修复 user.name 错误\r\n  const userName = authUser?.username || authUser?.email?.split('@')[0] || 'User';\r\n\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <Box sx={{ p: 3 }}>\r\n        <PandaAlert severity=\"warning\" message={t('dashboard.authRequired')} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (loading && !lastUpdate) {\r\n    return (\r\n      <Box sx={{ \r\n        display: 'flex', \r\n        justifyContent: 'center', \r\n        alignItems: 'center', \r\n        minHeight: '400px' \r\n      }}>\r\n        <PandaProgress value={0} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Box sx={{ p: 3 }}>\r\n        <PandaAlert severity=\"error\" message={error} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  const CustomTooltip: React.FC<{\r\n    active?: boolean;\r\n    payload?: Array<{ value: number }>;\r\n    label?: string;\r\n  }> = ({ active, payload, label }) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div className=\"custom-tooltip\">\r\n          <p className=\"label\">{`${label}`}</p>\r\n          <p className=\"value\">{`$${payload[0].value.toLocaleString()}`}</p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderChart = () => {\r\n    return (\r\n      <AreaChart data={assetTrend}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"date\" />\r\n        <YAxis />\r\n        <RechartsTooltip content={<CustomTooltip />} />\r\n        <Area\r\n          type=\"monotone\"\r\n          dataKey=\"value\"\r\n          stroke=\"#8884d8\"\r\n          fill=\"#8884d8\"\r\n          fillOpacity={0.3}\r\n        />\r\n      </AreaChart>\r\n    );\r\n  };\r\n\r\n  const renderCurrencyCard = (currency: string, data: { amount: number; valueInUSD: number; change24h: number }) => {\r\n    return (\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {currency}\r\n          </Typography>\r\n          <Typography variant=\"h4\" color=\"primary\">\r\n            ${data.valueInUSD.toFixed(2)}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color={data.change24h >= 0 ? 'success.main' : 'error.main'}>\r\n            {data.change24h >= 0 ? '+' : ''}{data.change24h}%\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  const renderProfitTargetCard = (target: ServiceProfitTarget) => (\r\n    <motion.div\r\n      whileHover={{ scale: 1.02 }}\r\n      transition={{ duration: 0.2 }}\r\n    >\r\n      <PandaCard>\r\n        <CardContent>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <Typography variant=\"h6\">\r\n              {t('dashboard.profitTarget')}\r\n            </Typography>\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={() => handleDeleteTarget(target.id)}\r\n              sx={{ color: 'error.main' }}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Box>\r\n          <Box sx={{ mt: 2 }}>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {t('dashboard.target')}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              {target.target}%\r\n            </Typography>\r\n          </Box>\r\n          <Box sx={{ mt: 2 }}>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {t('dashboard.currentProgress')}\r\n            </Typography>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n              <Box sx={{ flex: 1 }}>\r\n                <LinearProgress\r\n                  variant=\"determinate\"\r\n                  value={(target.current / target.target) * 100}\r\n                  color={(target.current / target.target) * 100 >= 100 ? 'success' : 'primary'}\r\n                  sx={{ height: 8, borderRadius: 4 }}\r\n                />\r\n              </Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {((target.current / target.target) * 100).toFixed(1)}%\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Box sx={{ mt: 2, display: 'flex', justifyContent: 'space-between' }}>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {t('dashboard.current')}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              {target.current}%\r\n            </Typography>\r\n          </Box>\r\n          <Box sx={{ mt: 1, display: 'flex', justifyContent: 'space-between' }}>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {t('dashboard.deadline')}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              {new Date(target.deadline).toLocaleDateString()}\r\n            </Typography>\r\n          </Box>\r\n        </CardContent>\r\n      </PandaCard>\r\n    </motion.div>\r\n  );\r\n\r\n  const renderRiskMetrics = () => (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} sm={6} md={3}>\r\n        <PandaCard>\r\n          <CardContent>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {t('dashboard.sharpeRatio')}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              {riskMetrics.sharpeRatio.toFixed(2)}\r\n            </Typography>\r\n          </CardContent>\r\n        </PandaCard>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={3}>\r\n        <PandaCard>\r\n          <CardContent>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {t('dashboard.sortinoRatio')}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              {riskMetrics.sortinoRatio.toFixed(2)}\r\n            </Typography>\r\n          </CardContent>\r\n        </PandaCard>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={3}>\r\n        <PandaCard>\r\n          <CardContent>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {t('dashboard.volatility')}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              {riskMetrics.volatility.toFixed(2)}%\r\n            </Typography>\r\n          </CardContent>\r\n        </PandaCard>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={3}>\r\n        <PandaCard>\r\n          <CardContent>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {t('dashboard.beta')}\r\n            </Typography>\r\n            <Typography variant=\"h6\">\r\n              {riskMetrics.beta.toFixed(2)}\r\n            </Typography>\r\n          </CardContent>\r\n        </PandaCard>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  const renderAssetDistribution = () => {\r\n    const { byCurrency, byStrategy } = assetDistribution;\r\n    const currencyData = Object.entries(byCurrency).map(([currency, amount]) => ({\r\n      currency,\r\n      amount,\r\n      percentage: (amount / assetDistribution.total) * 100\r\n    }));\r\n    const strategyData = Object.entries(byStrategy).map(([strategy, amount]) => ({\r\n      strategy,\r\n      amount,\r\n      percentage: (amount / assetDistribution.total) * 100\r\n    }));\r\n\r\n    return (\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <PandaCard title={t('dashboard.currencyDistribution')}>\r\n            <Box sx={{ height: 300 }}>\r\n              <Pie\r\n                data={{\r\n                  labels: currencyData.map(item => item.currency),\r\n                  datasets: [{\r\n                    data: currencyData.map(item => item.amount),\r\n                    backgroundColor: [\r\n                      theme.palette.primary.main,\r\n                      theme.palette.secondary.main,\r\n                      theme.palette.success.main,\r\n                      theme.palette.warning.main,\r\n                      theme.palette.error.main\r\n                    ]\r\n                  }]\r\n                }}\r\n                options={{\r\n                  responsive: true,\r\n                  maintainAspectRatio: false,\r\n                  plugins: {\r\n                    legend: {\r\n                      position: 'right'\r\n                    }\r\n                  }\r\n                }}\r\n              />\r\n            </Box>\r\n            <Box sx={{ mt: 2 }}>\r\n              <PandaTable\r\n                columns={[\r\n                  { id: 'currency', label: t('dashboard.currency') },\r\n                  { id: 'amount', label: t('dashboard.amount') },\r\n                  { id: 'percentage', label: t('dashboard.percentage') }\r\n                ]}\r\n                data={currencyData.map(item => ({\r\n                  currency: item.currency,\r\n                  amount: `$${item.amount.toFixed(2)}`,\r\n                  percentage: `${item.percentage.toFixed(2)}%`\r\n                }))}\r\n                loading={loading}\r\n              />\r\n            </Box>\r\n          </PandaCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <PandaCard title={t('dashboard.strategyDistribution')}>\r\n            <Box sx={{ height: 300 }}>\r\n              <Pie\r\n                data={{\r\n                  labels: strategyData.map(item => item.strategy),\r\n                  datasets: [{\r\n                    data: strategyData.map(item => item.amount),\r\n                    backgroundColor: [\r\n                      theme.palette.primary.main,\r\n                      theme.palette.secondary.main,\r\n                      theme.palette.success.main,\r\n                      theme.palette.warning.main,\r\n                      theme.palette.error.main\r\n                    ]\r\n                  }]\r\n                }}\r\n                options={{\r\n                  responsive: true,\r\n                  maintainAspectRatio: false,\r\n                  plugins: {\r\n                    legend: {\r\n                      position: 'right'\r\n                    }\r\n                  }\r\n                }}\r\n              />\r\n            </Box>\r\n            <Box sx={{ mt: 2 }}>\r\n              <PandaTable\r\n                columns={[\r\n                  { id: 'strategy', label: t('dashboard.strategy') },\r\n                  { id: 'amount', label: t('dashboard.amount') },\r\n                  { id: 'percentage', label: t('dashboard.percentage') }\r\n                ]}\r\n                data={strategyData.map(item => ({\r\n                  strategy: item.strategy,\r\n                  amount: `$${item.amount.toFixed(2)}`,\r\n                  percentage: `${item.percentage.toFixed(2)}%`\r\n                }))}\r\n                loading={loading}\r\n              />\r\n            </Box>\r\n          </PandaCard>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const getApiStatusColor = (status: ApiStatus['status']) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return 'success';\r\n      case 'inactive':\r\n        return 'warning';\r\n      case 'error':\r\n        return 'error';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  const renderApiStatus = () => {\r\n    return (\r\n      <Card>\r\n        <CardHeader title={t('dashboard.apiStatus')} />\r\n        <CardContent>\r\n          <List>\r\n            {apiStatus.map((api) => (\r\n              <ListItem key={api.id}>\r\n                <ListItemText\r\n                  primary={api.exchange}\r\n                  secondary={`${t('dashboard.lastUpdate')}: ${new Date(api.lastSync).toLocaleString()}`}\r\n                />\r\n                <Chip\r\n                  label={t(`dashboard.status.${api.status}`)}\r\n                  color={getApiStatusColor(api.status)}\r\n                  size=\"small\"\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  const renderProfitTargets = () => (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          {t('dashboard.profitTargets')}\r\n        </Typography>\r\n        {profitTargets.map((target) => (\r\n          <Box key={target.id} sx={{ mb: 2 }}>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n              <Typography variant=\"body2\">\r\n                {t('dashboard.target')}: {target.target}%\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                {t('dashboard.deadline')}: {new Date(target.deadline).toLocaleDateString()}\r\n              </Typography>\r\n            </Box>\r\n            <LinearProgress\r\n              variant=\"determinate\"\r\n              value={(target.current / target.target) * 100}\r\n              sx={{ height: 10, borderRadius: 5 }}\r\n            />\r\n            <Typography variant=\"caption\" color=\"text.secondary\">\r\n              {t('dashboard.current')}: {target.current}%\r\n            </Typography>\r\n          </Box>\r\n        ))}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n\r\n  const renderStrategyStatus = () => (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          {t('dashboard.strategyStatus')}\r\n        </Typography>\r\n        <List>\r\n          {strategyStatus.map((strategy) => (\r\n            <ListItem key={strategy.id}>\r\n              <ListItemIcon>\r\n                {strategy.status === 'running' ? (\r\n                  <PlayCircleIcon color=\"success\" />\r\n                ) : strategy.status === 'paused' ? (\r\n                  <PauseCircleIcon color=\"warning\" />\r\n                ) : (\r\n                  <StopCircleIcon color=\"error\" />\r\n                )}\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={strategy.name}\r\n                secondary={\r\n                  <>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {t(`dashboard.strategyType.${strategy.type}`)}\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" color=\"text.secondary\">\r\n                      {t('dashboard.riskLevel')}: {t(`dashboard.riskLevel.${strategy.riskLevel}`)}\r\n                    </Typography>\r\n                    <Box sx={{ mt: 1 }}>\r\n                      <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                          <Typography variant=\"caption\" color=\"text.secondary\">\r\n                            {t('dashboard.totalReturn')}: {strategy.performance.totalReturn}%\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <Typography variant=\"caption\" color=\"text.secondary\">\r\n                            {t('dashboard.winRate')}: {strategy.performance.winRate}%\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <Typography variant=\"caption\" color=\"text.secondary\">\r\n                            {t('dashboard.maxDrawdown')}: {strategy.performance.maxDrawdown}%\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <Typography variant=\"caption\" color=\"text.secondary\">\r\n                            {t('dashboard.lastTrade')}: {new Date(strategy.lastTrade.time).toLocaleString()}\r\n                          </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                    <Box sx={{ mt: 1 }}>\r\n                      <LinearProgress\r\n                        variant=\"determinate\"\r\n                        value={strategy.status === 'running' ? 100 : 0}\r\n                        color={strategy.status === 'running' ? 'success' : 'error'}\r\n                        sx={{ height: 4, borderRadius: 2 }}\r\n                      />\r\n                    </Box>\r\n                  </>\r\n                }\r\n              />\r\n              <IconButton\r\n                edge=\"end\"\r\n                onClick={() => handleStrategyAction(strategy.id, 'pause')}\r\n                disabled={strategy.status !== 'running'}\r\n              >\r\n                <PauseIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                edge=\"end\"\r\n                onClick={() => handleStrategyAction(strategy.id, 'stop')}\r\n                disabled={strategy.status === 'stopped'}\r\n              >\r\n                <StopIcon />\r\n              </IconButton>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n\r\n  const totalChange = assetData?.change24h || 0;\r\n  const assetDataChart = [\r\n    { date: '2024-01', value: assetData?.total || 0 },\r\n    { date: '2024-02', value: assetData?.total || 0 },\r\n    { date: '2024-03', value: assetData?.total || 0 },\r\n    { date: '2024-04', value: assetData?.total || 0 },\r\n  ];\r\n\r\n  const getReturnColor = (returnValue: number) => {\r\n    if (returnValue >= 200) return 'success.main';\r\n    if (returnValue >= 100) return 'info.main';\r\n    if (returnValue >= 50) return 'warning.main';\r\n    return 'error.main';\r\n  };\r\n\r\n  const renderStrategyTable = () => (\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>{t('dashboard.strategyName')}</TableCell>\r\n            <TableCell>{t('dashboard.status')}</TableCell>\r\n            <TableCell>{t('dashboard.monthlyReturn')}</TableCell>\r\n            <TableCell>{t('dashboard.winRate')}</TableCell>\r\n            <TableCell>{t('dashboard.maxDrawdown')}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {strategies.map((strategy) => (\r\n            <TableRow key={strategy.id}>\r\n              <TableCell>{strategy.name}</TableCell>\r\n              <TableCell>\r\n                <Chip\r\n                  label={strategy.status}\r\n                  color={\r\n                    strategy.status === 'active'\r\n                      ? 'success'\r\n                      : strategy.status === 'paused'\r\n                      ? 'warning'\r\n                      : 'error'\r\n                  }\r\n                  size=\"small\"\r\n                />\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  color={getReturnColor(strategy.performance.monthlyReturn)}\r\n                  sx={{ fontWeight: 'bold' }}\r\n                >\r\n                  {strategy.performance.monthlyReturn}%\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell>{strategy.performance.winRate}%</TableCell>\r\n              <TableCell>{strategy.performance.maxDrawdown}%</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n\r\n  // 添加新的渲染函数\r\n  const renderVisualizationSection = () => (\r\n    <Grid container spacing={4}>\r\n      <Grid item xs={12} md={6}>\r\n        <PandaCard title={t('dashboard.performance')}>\r\n          <PerformanceChart data={performanceData} />\r\n        </PandaCard>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <PandaCard title={t('dashboard.assetDistribution')}>\r\n          <AssetDistributionChart data={assetDistribution} />\r\n        </PandaCard>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  useEffect(() => {\r\n    // 生成更多的性能数据点\r\n    const generatePerformanceData = () => {\r\n      const data: PerformanceData[] = [];\r\n      const startDate = new Date('2024-01-01');\r\n      const endDate = new Date('2024-03-31');\r\n      let currentValue = 1000000; // 初始资产 100 万\r\n      let previousValue = currentValue;\r\n\r\n      for (let date = startDate; date <= endDate; date.setDate(date.getDate() + 1)) {\r\n        // 生成每日波动\r\n        const dailyChange = (Math.random() * 2 - 1) * 0.02; // -2% 到 2% 之间的随机波动\r\n        currentValue = currentValue * (1 + dailyChange);\r\n\r\n        // 计算各项指标\r\n        const dailyReturn = (currentValue - previousValue) / previousValue * 100;\r\n        const monthlyReturn = calculateMonthlyReturn(data, currentValue);\r\n        const annualizedReturn = calculateAnnualizedReturn(data, currentValue, startDate, date);\r\n        const sharpeRatio = calculateSharpeRatio(data);\r\n        const maxDrawdown = calculateMaxDrawdown(data, currentValue);\r\n\r\n        data.push({\r\n          date: date.toISOString().split('T')[0],\r\n          value: Math.round(currentValue),\r\n          dailyReturn: parseFloat(dailyReturn.toFixed(2)),\r\n          monthlyReturn: parseFloat(monthlyReturn.toFixed(2)),\r\n          annualizedReturn: parseFloat(annualizedReturn.toFixed(2)),\r\n          sharpeRatio: parseFloat(sharpeRatio.toFixed(2)),\r\n          maxDrawdown: parseFloat(maxDrawdown.toFixed(2))\r\n        });\r\n\r\n        previousValue = currentValue;\r\n      }\r\n\r\n      setPerformanceData(data);\r\n    };\r\n\r\n    generatePerformanceData();\r\n  }, []);\r\n\r\n  return (\r\n    <Layout>\r\n      <Box sx={{ flexGrow: 1, p: 3 }}>\r\n        <Container maxWidth=\"lg\" sx={{ py: 8 }}>\r\n          <Box sx={{ mb: 6, textAlign: 'center' }}>\r\n            <GradientTitle>\r\n              我的交易仪表盘\r\n            </GradientTitle>\r\n            <Typography variant=\"subtitle1\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n              月化收益50%-300%，我们只收取收益的10%\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title=\"策略表现\"\r\n                  gradient\r\n                  animation\r\n                >\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs={12} md={6}>\r\n                      <PerformanceChart \r\n                        data={performanceData} \r\n                        showMetrics={['value', 'dailyReturn']}\r\n                        title=\"每日收益\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <PerformanceChart \r\n                        data={performanceData}\r\n                        showMetrics={['monthlyReturn']}\r\n                        title=\"月化收益\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <PerformanceChart \r\n                        data={performanceData}\r\n                        showMetrics={['sharpeRatio']}\r\n                        title=\"夏普比率\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <PerformanceChart \r\n                        data={performanceData}\r\n                        showMetrics={['maxDrawdown']}\r\n                        title=\"最大回撤\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </PandaCard>\r\n              </motion.div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title=\"资产概览\"\r\n                  gradient\r\n                  animation\r\n                >\r\n                  <AssetOverview assets={assets} />\r\n                </PandaCard>\r\n              </motion.div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title=\"资产分布\"\r\n                  gradient\r\n                  animation\r\n                >\r\n                  <AssetDistributionChart data={assetDistribution} />\r\n                </PandaCard>\r\n              </motion.div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title=\"风险分析\"\r\n                  gradient\r\n                  animation\r\n                >\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs={12} md={4}>\r\n                      <StrategyReturnDistribution \r\n                        data={returnDistributionData}\r\n                        title=\"策略收益分布\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                      <RiskMetricsRadar \r\n                        data={riskMetricsData}\r\n                        title=\"风险指标雷达图\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                      <TradeFrequencyHeatmap \r\n                        data={tradeFrequencyData}\r\n                        title=\"交易频率热力图\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </PandaCard>\r\n              </motion.div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title=\"API 状态\"\r\n                  gradient\r\n                  animation\r\n                >\r\n                  {renderApiStatus()}\r\n                </PandaCard>\r\n              </motion.div>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title=\"API 状态\"\r\n                  gradient\r\n                  animation\r\n                >\r\n                  {renderApiStatus()}\r\n                </PandaCard>\r\n              </motion.div>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard; ","import React from 'react';\r\nimport { Box } from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  HeroSection,\r\n  PandaCharacter,\r\n  CoreAdvantages,\r\n  FeaturesSection,\r\n  StrategySection,\r\n  ProfitSection,\r\n  HowItWorks,\r\n  SecuritySection,\r\n  UserReviews,\r\n  InviteSection,\r\n  SupportSection\r\n} from '../components/home';\r\n\r\nconst HomePage: React.FC = () => {\r\n  return (\r\n    <Box\r\n      component={motion.div}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n      sx={{\r\n        width: '100%',\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      {/* 首页顶部展示区域 */}\r\n      <HeroSection />\r\n      \r\n      {/* 熊猫角色展示 */}\r\n      <PandaCharacter />\r\n      \r\n      {/* 核心优势展示 */}\r\n      <CoreAdvantages />\r\n      \r\n      {/* 功能特点展示 */}\r\n      <FeaturesSection />\r\n      \r\n      {/* 策略展示 */}\r\n      <StrategySection />\r\n      \r\n      {/* 收益展示 */}\r\n      <ProfitSection />\r\n      \r\n      {/* 工作原理说明 */}\r\n      <HowItWorks />\r\n      \r\n      {/* 安全特性展示 */}\r\n      <SecuritySection />\r\n      \r\n      {/* 用户评价展示 */}\r\n      <UserReviews />\r\n      \r\n      {/* 邀请功能展示 */}\r\n      <InviteSection />\r\n      \r\n      {/* 支持服务展示 */}\r\n      <SupportSection />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HomePage; ","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\ninterface PrivateRouteProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ children }) => {\r\n  const { isAuthenticated } = useAuth();\r\n\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default PrivateRoute; ","import React from 'react';\r\nimport { Box } from '@mui/material';\r\nimport { Outlet } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\nimport GlobalBackground from './GlobalBackground';\r\n\r\ninterface ResourceLayoutProps {\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst ResourceLayout: React.FC<ResourceLayoutProps> = () => {\r\n  return (\r\n    <Box sx={{ \r\n      position: 'relative', \r\n      minHeight: '100vh',\r\n      display: 'flex',\r\n      flexDirection: 'column'\r\n    }}>\r\n      <GlobalBackground />\r\n      <Navbar />\r\n      <Box \r\n        component=\"main\" \r\n        sx={{ \r\n          flexGrow: 1,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          position: 'relative',\r\n          zIndex: 1,\r\n          overflow: 'auto'\r\n        }}\r\n      >\r\n        <Outlet />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ResourceLayout; ","import React from 'react';\r\nimport { Box } from '@mui/material';\r\nimport GlobalBackground from './common/GlobalBackground';\r\n\r\ninterface AuthLayoutProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst AuthLayout: React.FC<AuthLayoutProps> = ({ children }) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        py: { xs: 8, md: 12 },\r\n        overflow: 'hidden',\r\n        bgcolor: '#FFFFFF',\r\n        position: 'relative',\r\n        '&::before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.05) 0%, rgba(0, 255, 184, 0.02) 100%)',\r\n          zIndex: 0,\r\n        },\r\n      }}\r\n    >\r\n      <GlobalBackground />\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          flexGrow: 1,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          minHeight: '100vh',\r\n          position: 'relative',\r\n          zIndex: 1,\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AuthLayout; ","import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { useMediaQuery } from '@mui/material';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Tabs,\r\n  Tab,\r\n  Button,\r\n  IconButton,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Container,\r\n} from '@mui/material';\r\nimport {\r\n  PlayArrow as PlayArrowIcon,\r\n  Stop as StopIcon,\r\n  Settings as SettingsIcon,\r\n  TrendingUp as TrendingUpIcon,\r\n  Add as AddIcon,\r\n  Pause as PauseIcon,\r\n  Delete as DeleteIcon,\r\n  Assessment as AssessmentIcon,\r\n  Tune as TuneIcon,\r\n  Close as CloseIcon,\r\n} from '@mui/icons-material';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  BarChart,\r\n  Bar,\r\n  AreaChart,\r\n  Area,\r\n  RadarChart,\r\n  PolarGrid,\r\n  PolarAngleAxis,\r\n  PolarRadiusAxis,\r\n  Radar,\r\n  Cell\r\n} from 'recharts';\r\nimport PandaCard from '../components/common/PandaCard';\r\nimport PandaButton from '../components/common/PandaButton';\r\nimport PandaAlert from '../components/common/PandaAlert';\r\nimport PandaProgress from '../components/common/PandaProgress';\r\nimport { fadeIn, slideUp, staggerChildren } from '../animations';\r\n\r\ninterface Strategy {\r\n  id: string;\r\n  name: string;\r\n  type: string;\r\n  status: 'running' | 'paused' | 'stopped';\r\n  riskLevel: 'low' | 'medium' | 'high';\r\n  performance: {\r\n    monthlyReturn: number;\r\n    winRate: number;\r\n    maxDrawdown: number;\r\n    sharpeRatio: number;\r\n    totalReturn: number;\r\n    annualizedReturn: number;\r\n  };\r\n  targetReturn: {\r\n    monthly: number;\r\n    annual: number;\r\n  };\r\n  parameters: Record<string, number>;\r\n  backtestResults: BacktestResult[];\r\n  optimizationResults: OptimizationResult[];\r\n  returns: number[];\r\n  volatility: number;\r\n  profitFactor: number;\r\n  trades: { time: string; frequency: number }[];\r\n}\r\n\r\ninterface BacktestResult {\r\n  id: string;\r\n  strategyId: string;\r\n  startDate: string;\r\n  endDate: string;\r\n  initialCapital: number;\r\n  finalCapital: number;\r\n  totalReturn: number;\r\n  monthlyReturn: number;\r\n  annualizedReturn: number;\r\n  sharpeRatio: number;\r\n  maxDrawdown: number;\r\n  winRate: number;\r\n  totalTrades: number;\r\n  winningTrades: number;\r\n  losingTrades: number;\r\n  avgTradeReturn: number;\r\n  avgWinReturn: number;\r\n  avgLossReturn: number;\r\n  equityCurve: Array<{\r\n    date: string;\r\n    value: number;\r\n  }>;\r\n}\r\n\r\ninterface OptimizationResult {\r\n  id: string;\r\n  strategyId: string;\r\n  parameters: Record<string, number>;\r\n  performance: {\r\n    totalReturn: number;\r\n    monthlyReturn: number;\r\n    annualizedReturn: number;\r\n    sharpeRatio: number;\r\n    maxDrawdown: number;\r\n    winRate: number;\r\n  };\r\n}\r\n\r\ninterface BacktestConfig {\r\n  strategyId: string;\r\n  startDate: string;\r\n  endDate: string;\r\n  initialCapital: number;\r\n  parameters: Record<string, any>;\r\n}\r\n\r\ninterface OptimizeConfig {\r\n  strategyId: string;\r\n  parameters: Record<string, any>;\r\n  optimizationTarget: 'monthlyReturn' | 'sharpeRatio' | 'winRate';\r\n  constraints: {\r\n    maxDrawdown: number;\r\n    minWinRate: number;\r\n  };\r\n}\r\n\r\nconst StrategyManagement: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [selectedStrategy, setSelectedStrategy] = useState<Strategy | null>(null);\r\n  const [showDetails, setShowDetails] = useState(false);\r\n  const [showBacktestResults, setShowBacktestResults] = useState(false);\r\n  const [showOptimizationResults, setShowOptimizationResults] = useState(false);\r\n  const [isBacktestDialogOpen, setIsBacktestDialogOpen] = useState(false);\r\n  const [isOptimizeDialogOpen, setIsOptimizeDialogOpen] = useState(false);\r\n  const [backtestStep, setBacktestStep] = useState(0);\r\n  const [optimizeStep, setOptimizeStep] = useState(0);\r\n  const [isNewStrategyDialogOpen, setIsNewStrategyDialogOpen] = useState(false);\r\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\r\n  const [editStrategy, setEditStrategy] = useState<Strategy | null>(null);\r\n  const [strategies, setStrategies] = useState<Strategy[]>([\r\n    {\r\n      id: '1',\r\n      name: 'Trend Following',\r\n      type: 'trend',\r\n      status: 'running',\r\n      riskLevel: 'medium',\r\n      performance: {\r\n        monthlyReturn: 85.2,\r\n        winRate: 65,\r\n        maxDrawdown: 15.2,\r\n        sharpeRatio: 1.5,\r\n        totalReturn: 1022.4,\r\n        annualizedReturn: 1022.4,\r\n      },\r\n      targetReturn: {\r\n        monthly: 80,\r\n        annual: 960,\r\n      },\r\n      parameters: {\r\n        lookbackPeriod: 20,\r\n        entryThreshold: 0.02,\r\n        exitThreshold: 0.01,\r\n      },\r\n      backtestResults: [\r\n        {\r\n          id: '1',\r\n          strategyId: '1',\r\n          startDate: '2023-01-01',\r\n          endDate: '2023-12-31',\r\n          initialCapital: 100000,\r\n          finalCapital: 1122400,\r\n          totalReturn: 1022.4,\r\n          monthlyReturn: 85.2,\r\n          annualizedReturn: 1022.4,\r\n          sharpeRatio: 1.5,\r\n          maxDrawdown: 15.2,\r\n          winRate: 65,\r\n          totalTrades: 120,\r\n          winningTrades: 78,\r\n          losingTrades: 42,\r\n          avgTradeReturn: 8.52,\r\n          avgWinReturn: 12.45,\r\n          avgLossReturn: -8.28,\r\n          equityCurve: Array.from({ length: 12 }, (_, i) => ({\r\n            date: `2023-${String(i + 1).padStart(2, '0')}-01`,\r\n            value: 100000 * (1 + 0.852) ** (i + 1),\r\n          })),\r\n        },\r\n      ],\r\n      optimizationResults: [],\r\n      returns: [85.2, 85.2, 85.2, 85.2, 85.2, 85.2, 85.2, 85.2, 85.2, 85.2, 85.2, 85.2],\r\n      volatility: 0,\r\n      profitFactor: 1.5,\r\n      trades: [],\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Mean Reversion',\r\n      type: 'meanReversion',\r\n      status: 'paused',\r\n      riskLevel: 'low',\r\n      performance: {\r\n        monthlyReturn: 65.8,\r\n        winRate: 75,\r\n        maxDrawdown: 8.5,\r\n        sharpeRatio: 1.2,\r\n        totalReturn: 789.6,\r\n        annualizedReturn: 789.6,\r\n      },\r\n      targetReturn: {\r\n        monthly: 60,\r\n        annual: 720,\r\n      },\r\n      parameters: {\r\n        meanPeriod: 20,\r\n        stdDevThreshold: 2,\r\n        positionSize: 0.1,\r\n      },\r\n      backtestResults: [\r\n        {\r\n          id: '2',\r\n          strategyId: '2',\r\n          startDate: '2023-01-01',\r\n          endDate: '2023-12-31',\r\n          initialCapital: 100000,\r\n          finalCapital: 889600,\r\n          totalReturn: 789.6,\r\n          monthlyReturn: 65.8,\r\n          annualizedReturn: 789.6,\r\n          sharpeRatio: 1.2,\r\n          maxDrawdown: 8.5,\r\n          winRate: 75,\r\n          totalTrades: 240,\r\n          winningTrades: 180,\r\n          losingTrades: 60,\r\n          avgTradeReturn: 3.29,\r\n          avgWinReturn: 5.12,\r\n          avgLossReturn: -3.08,\r\n          equityCurve: Array.from({ length: 12 }, (_, i) => ({\r\n            date: `2023-${String(i + 1).padStart(2, '0')}-01`,\r\n            value: 100000 * (1 + 0.658) ** (i + 1),\r\n          })),\r\n        },\r\n      ],\r\n      optimizationResults: [],\r\n      returns: [65.8, 65.8, 65.8, 65.8, 65.8, 65.8, 65.8, 65.8, 65.8, 65.8, 65.8, 65.8],\r\n      volatility: 0,\r\n      profitFactor: 1.2,\r\n      trades: [],\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Arbitrage',\r\n      type: 'arbitrage',\r\n      status: 'stopped',\r\n      riskLevel: 'high',\r\n      performance: {\r\n        monthlyReturn: 120.5,\r\n        winRate: 55,\r\n        maxDrawdown: 25.5,\r\n        sharpeRatio: 1.0,\r\n        totalReturn: 1446.0,\r\n        annualizedReturn: 1446.0,\r\n      },\r\n      targetReturn: {\r\n        monthly: 100,\r\n        annual: 1200,\r\n      },\r\n      parameters: {\r\n        spreadThreshold: 0.001,\r\n        maxPosition: 0.2,\r\n        cooldownPeriod: 5,\r\n      },\r\n      backtestResults: [\r\n        {\r\n          id: '3',\r\n          strategyId: '3',\r\n          startDate: '2023-01-01',\r\n          endDate: '2023-12-31',\r\n          initialCapital: 100000,\r\n          finalCapital: 1546000,\r\n          totalReturn: 1446.0,\r\n          monthlyReturn: 120.5,\r\n          annualizedReturn: 1446.0,\r\n          sharpeRatio: 1.0,\r\n          maxDrawdown: 25.5,\r\n          winRate: 55,\r\n          totalTrades: 480,\r\n          winningTrades: 264,\r\n          losingTrades: 216,\r\n          avgTradeReturn: 3.01,\r\n          avgWinReturn: 8.25,\r\n          avgLossReturn: -4.15,\r\n          equityCurve: Array.from({ length: 12 }, (_, i) => ({\r\n            date: `2023-${String(i + 1).padStart(2, '0')}-01`,\r\n            value: 100000 * (1 + 1.205) ** (i + 1),\r\n          })),\r\n        },\r\n      ],\r\n      optimizationResults: [],\r\n      returns: [120.5, 120.5, 120.5, 120.5, 120.5, 120.5, 120.5, 120.5, 120.5, 120.5, 120.5, 120.5],\r\n      volatility: 0,\r\n      profitFactor: 1.0,\r\n      trades: [],\r\n    },\r\n  ]);\r\n  const [newStrategy, setNewStrategy] = useState({\r\n    name: '',\r\n    type: '',\r\n    riskLevel: 'medium' as const,\r\n    targetReturn: {\r\n      monthly: 0,\r\n      annual: 0,\r\n    },\r\n  });\r\n  const [backtestConfig, setBacktestConfig] = useState<BacktestConfig>({\r\n    strategyId: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    initialCapital: 10000,\r\n    parameters: {},\r\n  });\r\n  const [optimizeConfig, setOptimizeConfig] = useState<OptimizeConfig>({\r\n    strategyId: '',\r\n    parameters: {},\r\n    optimizationTarget: 'monthlyReturn',\r\n    constraints: {\r\n      maxDrawdown: 20,\r\n      minWinRate: 50,\r\n    },\r\n  });\r\n\r\n  const handleTabChange = (_event: React.SyntheticEvent, newValue: number) => {\r\n    setActiveTab(newValue);\r\n  };\r\n\r\n  const handleBacktest = () => {\r\n    setIsBacktestDialogOpen(true);\r\n  };\r\n\r\n  const handleOptimize = () => {\r\n    setIsOptimizeDialogOpen(true);\r\n  };\r\n\r\n  const handleNewStrategyChange = (field: string, value: any) => {\r\n    if (field.includes('.')) {\r\n      const [parent, child] = field.split('.');\r\n      setNewStrategy(prev => {\r\n        const newStrategy = { ...prev };\r\n        if (parent === 'targetReturn') {\r\n          newStrategy.targetReturn = { ...newStrategy.targetReturn, [child]: value };\r\n        }\r\n        return newStrategy;\r\n      });\r\n    } else {\r\n      setNewStrategy(prev => ({\r\n        ...prev,\r\n        [field]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleAddStrategy = () => {\r\n    const strategy: Strategy = {\r\n      id: Date.now().toString(),\r\n      name: newStrategy.name,\r\n      type: newStrategy.type,\r\n      status: 'stopped',\r\n      riskLevel: newStrategy.riskLevel,\r\n      performance: {\r\n        monthlyReturn: 0,\r\n        winRate: 0,\r\n        maxDrawdown: 0,\r\n        sharpeRatio: 0,\r\n        totalReturn: 0,\r\n        annualizedReturn: 0,\r\n      },\r\n      targetReturn: {\r\n        monthly: newStrategy.targetReturn.monthly,\r\n        annual: newStrategy.targetReturn.annual,\r\n      },\r\n      parameters: {},\r\n      backtestResults: [],\r\n      optimizationResults: [],\r\n      returns: [],\r\n      volatility: 0,\r\n      profitFactor: 0,\r\n      trades: [],\r\n    };\r\n\r\n    setStrategies(prev => [...prev, strategy]);\r\n    setIsNewStrategyDialogOpen(false);\r\n    setNewStrategy({\r\n      name: '',\r\n      type: '',\r\n      riskLevel: 'medium',\r\n      targetReturn: {\r\n        monthly: 0,\r\n        annual: 0,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleStrategySelect = (strategy: Strategy) => {\r\n    setSelectedStrategy(strategy);\r\n    setShowDetails(true);\r\n  };\r\n\r\n  const handleBacktestConfigChange = (field: string, value: any) => {\r\n    if (field.includes('.')) {\r\n      const [parent, child] = field.split('.');\r\n      setBacktestConfig(prev => {\r\n        const newConfig = { ...prev };\r\n        if (parent === 'parameters') {\r\n          newConfig.parameters = { ...newConfig.parameters, [child]: value };\r\n        } else {\r\n          (newConfig[parent as keyof BacktestConfig] as Record<string, any>)[child] = value;\r\n        }\r\n        return newConfig;\r\n      });\r\n    } else {\r\n      setBacktestConfig(prev => ({\r\n        ...prev,\r\n        [field]: value,\r\n      }));\r\n      if (field === 'strategyId') {\r\n        handleStrategySelect(value);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOptimizeConfigChange = (field: string, value: any) => {\r\n    if (field.includes('.')) {\r\n      const [parent, child] = field.split('.');\r\n      setOptimizeConfig(prev => {\r\n        const newConfig = { ...prev };\r\n        if (parent === 'parameters') {\r\n          newConfig.parameters = { ...newConfig.parameters, [child]: value };\r\n        } else if (parent === 'constraints') {\r\n          newConfig.constraints = { ...newConfig.constraints, [child]: value };\r\n        } else {\r\n          (newConfig[parent as keyof OptimizeConfig] as Record<string, any>)[child] = value;\r\n        }\r\n        return newConfig;\r\n      });\r\n    } else {\r\n      setOptimizeConfig(prev => ({\r\n        ...prev,\r\n        [field]: value,\r\n      }));\r\n      if (field === 'strategyId') {\r\n        handleStrategySelect(value);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleStrategyStatusChange = (strategyId: string, newStatus: 'running' | 'paused' | 'stopped') => {\r\n    setStrategies(prev => prev.map(strategy => \r\n      strategy.id === strategyId ? { ...strategy, status: newStatus } : strategy\r\n    ));\r\n  };\r\n\r\n  const handleDeleteStrategy = (strategyId: string) => {\r\n    setStrategies(prev => prev.filter(strategy => strategy.id !== strategyId));\r\n    if (selectedStrategy?.id === strategyId) {\r\n      setSelectedStrategy(null);\r\n    }\r\n  };\r\n\r\n  const getReturnColor = (returnValue: number) => {\r\n    if (returnValue >= 200) return 'success.main';\r\n    if (returnValue >= 100) return 'info.main';\r\n    if (returnValue >= 50) return 'warning.main';\r\n    return 'error.main';\r\n  };\r\n\r\n  const handleEditStrategy = (strategy: Strategy) => {\r\n    setEditStrategy(strategy);\r\n    setIsEditDialogOpen(true);\r\n  };\r\n\r\n  const handleEditStrategyChange = (field: string, value: any) => {\r\n    if (field.includes('.')) {\r\n      const [parent, child] = field.split('.');\r\n      setEditStrategy(prev => {\r\n        if (!prev) return null;\r\n        \r\n        // Create a new strategy object with explicit type\r\n        const newStrategy = {\r\n          ...prev,\r\n          parameters: { ...prev.parameters } as Record<string, any>,\r\n          targetReturn: { ...prev.targetReturn } as { monthly: number; annual: number },\r\n          performance: { ...prev.performance } as {\r\n            monthlyReturn: number;\r\n            winRate: number;\r\n            maxDrawdown: number;\r\n            sharpeRatio: number;\r\n          }\r\n        };\r\n\r\n        // Update the specific nested property\r\n        if (parent === 'parameters') {\r\n          newStrategy.parameters[child] = value;\r\n        } else if (parent === 'targetReturn') {\r\n          newStrategy.targetReturn[child] = value;\r\n        } else if (parent === 'performance') {\r\n          newStrategy.performance[child] = value;\r\n        }\r\n\r\n        return newStrategy as Strategy;\r\n      });\r\n    } else {\r\n      setEditStrategy(prev => {\r\n        if (!prev) return null;\r\n        return { ...prev, [field]: value } as Strategy;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSaveStrategy = () => {\r\n    if (editStrategy) {\r\n      setStrategies(prev => prev.map(strategy => \r\n        strategy.id === editStrategy.id ? editStrategy : strategy\r\n      ));\r\n      if (selectedStrategy?.id === editStrategy.id) {\r\n        setSelectedStrategy(editStrategy);\r\n      }\r\n      setIsEditDialogOpen(false);\r\n      setEditStrategy(null);\r\n    }\r\n  };\r\n\r\n  const renderStrategyTable = () => (\r\n    <TableContainer>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>{t('strategyManagement.name')}</TableCell>\r\n            <TableCell>{t('strategyManagement.type')}</TableCell>\r\n            <TableCell>{t('strategyManagement.status')}</TableCell>\r\n            <TableCell>{t('strategyManagement.riskLevel')}</TableCell>\r\n            <TableCell>{t('strategyManagement.monthlyReturn')}</TableCell>\r\n            <TableCell>{t('strategyManagement.targetReturn')}</TableCell>\r\n            <TableCell>{t('strategyManagement.actions')}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {strategies.map((strategy) => (\r\n            <TableRow key={strategy.id}>\r\n              <TableCell>{strategy.name}</TableCell>\r\n              <TableCell>{strategy.type}</TableCell>\r\n              <TableCell>\r\n                <Chip\r\n                  label={strategy.status}\r\n                  color={\r\n                    strategy.status === 'running'\r\n                      ? 'success'\r\n                      : strategy.status === 'paused'\r\n                      ? 'warning'\r\n                      : 'error'\r\n                  }\r\n                  size=\"small\"\r\n                />\r\n              </TableCell>\r\n              <TableCell>\r\n                <Chip\r\n                  label={strategy.riskLevel}\r\n                  color={\r\n                    strategy.riskLevel === 'low'\r\n                      ? 'success'\r\n                      : strategy.riskLevel === 'medium'\r\n                      ? 'warning'\r\n                      : 'error'\r\n                  }\r\n                  size=\"small\"\r\n                />\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  color={getReturnColor(strategy.performance.monthlyReturn)}\r\n                  sx={{ fontWeight: 'bold' }}\r\n                >\r\n                  {strategy.performance.monthlyReturn}%\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  color={getReturnColor(strategy.targetReturn.monthly)}\r\n                  sx={{ fontWeight: 'bold' }}\r\n                >\r\n                  {strategy.targetReturn.monthly}%\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell>\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={() => handleStrategyStatusChange(strategy.id, 'running')}\r\n                  disabled={strategy.status === 'running'}\r\n                >\r\n                  <PlayArrowIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={() => handleStrategyStatusChange(strategy.id, 'paused')}\r\n                  disabled={strategy.status === 'paused'}\r\n                >\r\n                  <PauseIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={() => handleStrategyStatusChange(strategy.id, 'stopped')}\r\n                  disabled={strategy.status === 'stopped'}\r\n                >\r\n                  <StopIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={() => handleDeleteStrategy(strategy.id)}\r\n                  color=\"error\"\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n\r\n  const StrategyDetails: React.FC<{ strategy: Strategy }> = ({ strategy }) => {\r\n    const { t } = useTranslation();\r\n    const theme = useTheme();\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n      <Box sx={{ p: 2 }}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={6}>\r\n            <StrategyReturnDistribution returns={strategy.returns} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <RiskMetricsRadar metrics={{\r\n              sharpeRatio: strategy.sharpeRatio,\r\n              maxDrawdown: strategy.maxDrawdown,\r\n              volatility: strategy.volatility,\r\n              winRate: strategy.winRate,\r\n              profitFactor: strategy.profitFactor\r\n            }} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TradeFrequencyHeatmap trades={strategy.trades} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const StrategyReturnDistribution: React.FC<{ returns: number[] }> = ({ returns }) => {\r\n    const { t } = useTranslation();\r\n    const theme = useTheme();\r\n    \r\n    // 计算收益分布\r\n    const minReturn = Math.min(...returns);\r\n    const maxReturn = Math.max(...returns);\r\n    const range = maxReturn - minReturn;\r\n    const binCount = 10;\r\n    const binSize = range / binCount;\r\n    \r\n    const distribution = Array(binCount).fill(0);\r\n    returns.forEach(ret => {\r\n      const binIndex = Math.min(Math.floor((ret - minReturn) / binSize), binCount - 1);\r\n      distribution[binIndex]++;\r\n    });\r\n\r\n    const data = distribution.map((count, index) => ({\r\n      range: `${(minReturn + index * binSize).toFixed(2)}% - ${(minReturn + (index + 1) * binSize).toFixed(2)}%`,\r\n      count\r\n    }));\r\n\r\n    return (\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {t('strategy.returnDistribution')}\r\n          </Typography>\r\n          <Box sx={{ height: 300 }}>\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <BarChart data={data}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"range\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Bar dataKey=\"count\" fill={theme.palette.primary.main}>\r\n                  {data.map((entry, index) => (\r\n                    <Cell\r\n                      key={`cell-${index}`}\r\n                      fill={\r\n                        parseFloat(entry.range.split(' - ')[0]) >= 200\r\n                          ? theme.palette.success.main\r\n                          : parseFloat(entry.range.split(' - ')[0]) >= 100\r\n                          ? theme.palette.info.main\r\n                          : parseFloat(entry.range.split(' - ')[0]) >= 50\r\n                          ? theme.palette.warning.main\r\n                          : theme.palette.error.main\r\n                      }\r\n                    />\r\n                  ))}\r\n                </Bar>\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  const RiskMetricsRadar: React.FC<{ metrics: { [key: string]: number } }> = ({ metrics }) => {\r\n    const { t } = useTranslation();\r\n    \r\n    const data = [\r\n      {\r\n        subject: t('strategy.sharpeRatio'),\r\n        value: metrics.sharpeRatio || 0,\r\n        fullMark: 3\r\n      },\r\n      {\r\n        subject: t('strategy.maxDrawdown'),\r\n        value: metrics.maxDrawdown || 0,\r\n        fullMark: 50\r\n      },\r\n      {\r\n        subject: t('strategy.volatility'),\r\n        value: metrics.volatility || 0,\r\n        fullMark: 30\r\n      },\r\n      {\r\n        subject: t('strategy.winRate'),\r\n        value: metrics.winRate || 0,\r\n        fullMark: 100\r\n      },\r\n      {\r\n        subject: t('strategy.profitFactor'),\r\n        value: metrics.profitFactor || 0,\r\n        fullMark: 2\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {t('strategy.riskMetrics')}\r\n          </Typography>\r\n          <Box sx={{ height: 300 }}>\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <RadarChart data={data}>\r\n                <PolarGrid />\r\n                <PolarAngleAxis dataKey=\"subject\" />\r\n                <PolarRadiusAxis />\r\n                <Radar\r\n                  name=\"Metrics\"\r\n                  dataKey=\"value\"\r\n                  stroke=\"#8884d8\"\r\n                  fill=\"#8884d8\"\r\n                  fillOpacity={0.6}\r\n                />\r\n              </RadarChart>\r\n            </ResponsiveContainer>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  const TradeFrequencyHeatmap: React.FC<{ trades: { time: string; frequency: number }[] }> = ({ trades }) => {\r\n    const { t } = useTranslation();\r\n    const theme = useTheme();\r\n\r\n    // 如果没有交易数据，显示空状态\r\n    if (!trades || trades.length === 0) {\r\n      return (\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              {t('strategyManagement.tradeFrequency')}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {t('strategyManagement.noTradeData')}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {t('strategyManagement.tradeFrequency')}\r\n          </Typography>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={trades}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"time\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Bar dataKey=\"frequency\" fill={theme.palette.primary.main} />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  const renderStrategyDetails = () => {\r\n    if (!selectedStrategy) return null;\r\n    return (\r\n      <Dialog\r\n        open={showDetails}\r\n        onClose={() => setShowDetails(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          {t('strategyManagement.strategyDetails')}\r\n          <IconButton\r\n            onClick={() => setShowDetails(false)}\r\n            sx={{ position: 'absolute', right: 8, top: 8 }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <StrategyDetails strategy={selectedStrategy} />\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  };\r\n\r\n  const BacktestResults: React.FC<{ results: BacktestResult[] }> = ({ results }) => {\r\n    const latestResult = results[results.length - 1];\r\n    \r\n    return (\r\n      <Box sx={{ p: 3 }}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          {t('strategyManagement.backtestResults')}\r\n        </Typography>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  {t('strategyManagement.equityCurve')}\r\n                </Typography>\r\n                <ResponsiveContainer width=\"100%\" height={300}>\r\n                  <AreaChart data={latestResult.equityCurve}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Area\r\n                      type=\"monotone\"\r\n                      dataKey=\"value\"\r\n                      stroke=\"#8884d8\"\r\n                      fill=\"#8884d8\"\r\n                      fillOpacity={0.3}\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  {t('strategyManagement.performanceMetrics')}\r\n                </Typography>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell>{t('strategyManagement.totalReturn')}</TableCell>\r\n                        <TableCell>\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            color={getReturnColor(latestResult.totalReturn)}\r\n                            sx={{ fontWeight: 'bold' }}\r\n                          >\r\n                            {latestResult.totalReturn}%\r\n                          </Typography>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell>{t('strategyManagement.annualizedReturn')}</TableCell>\r\n                        <TableCell>\r\n                          {latestResult.annualizedReturn}%\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell>{t('strategyManagement.maxDrawdown')}</TableCell>\r\n                        <TableCell>\r\n                          {results[results.length - 1].maxDrawdown}%\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell>{t('strategyManagement.sharpeRatio')}</TableCell>\r\n                        <TableCell>\r\n                          {results[results.length - 1].sharpeRatio}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell>{t('strategyManagement.winRate')}</TableCell>\r\n                        <TableCell>\r\n                          {results[results.length - 1].winRate}%\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  {t('strategyManagement.tradeStatistics')}\r\n                </Typography>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell>{t('strategyManagement.totalTrades')}</TableCell>\r\n                        <TableCell>\r\n                          {results[results.length - 1].totalTrades}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell>{t('strategyManagement.winningTrades')}</TableCell>\r\n                        <TableCell>\r\n                          {results[results.length - 1].winningTrades}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell>{t('strategyManagement.losingTrades')}</TableCell>\r\n                        <TableCell>\r\n                          {results[results.length - 1].losingTrades}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell>{t('strategyManagement.avgTradeReturn')}</TableCell>\r\n                        <TableCell>\r\n                          {results[results.length - 1].avgTradeReturn}%\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell>{t('strategyManagement.avgWinReturn')}</TableCell>\r\n                        <TableCell>\r\n                          {results[results.length - 1].avgWinReturn}%\r\n                        </TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell>{t('strategyManagement.avgLossReturn')}</TableCell>\r\n                        <TableCell>\r\n                          {results[results.length - 1].avgLossReturn}%\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const renderBacktestResults = () => {\r\n    if (!selectedStrategy) return null;\r\n    return (\r\n      <Dialog\r\n        open={showBacktestResults}\r\n        onClose={() => setShowBacktestResults(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          {t('strategyManagement.backtestResults')}\r\n          <IconButton\r\n            onClick={() => setShowBacktestResults(false)}\r\n            sx={{ position: 'absolute', right: 8, top: 8 }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <BacktestResults results={selectedStrategy.backtestResults} />\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  };\r\n\r\n  const renderOptimizationResults = () => {\r\n    if (!selectedStrategy) return null;\r\n\r\n    return (\r\n      <Dialog\r\n        open={showOptimizationResults}\r\n        onClose={() => setShowOptimizationResults(false)}\r\n        maxWidth=\"lg\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <Typography variant=\"h6\">\r\n              {t('strategyManagement.optimizationResults')} - {selectedStrategy.name}\r\n            </Typography>\r\n            <IconButton onClick={() => setShowOptimizationResults(false)}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ mt: 2 }}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>{t('strategyManagement.parameters')}</TableCell>\r\n                        <TableCell align=\"right\">{t('strategyManagement.monthlyReturn')}</TableCell>\r\n                        <TableCell align=\"right\">{t('strategyManagement.annualizedReturn')}</TableCell>\r\n                        <TableCell align=\"right\">{t('strategyManagement.sharpeRatio')}</TableCell>\r\n                        <TableCell align=\"right\">{t('strategyManagement.maxDrawdown')}</TableCell>\r\n                        <TableCell align=\"right\">{t('strategyManagement.winRate')}</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {selectedStrategy.optimizationResults.map((result, index) => (\r\n                        <TableRow key={index}>\r\n                          <TableCell>\r\n                            {Object.entries(result.parameters).map(([key, value]) => (\r\n                              <Typography key={key} variant=\"body2\">\r\n                                {key}: {value}\r\n                              </Typography>\r\n                            ))}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              color={getReturnColor(result.performance.monthlyReturn)}\r\n                              sx={{ fontWeight: 'bold' }}\r\n                            >\r\n                              {result.performance.monthlyReturn}%\r\n                            </Typography>\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {result.performance.annualizedReturn}%\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {result.performance.sharpeRatio.toFixed(2)}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {result.performance.maxDrawdown}%\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {result.performance.winRate}%\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      {t('strategyManagement.performanceComparison')}\r\n                    </Typography>\r\n                    <Box sx={{ height: 400 }}>\r\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                        <BarChart\r\n                          data={selectedStrategy.optimizationResults.map(result => ({\r\n                            ...result.performance,\r\n                            parameters: JSON.stringify(result.parameters),\r\n                          }))}\r\n                          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n                        >\r\n                          <CartesianGrid strokeDasharray=\"3 3\" />\r\n                          <XAxis dataKey=\"parameters\" />\r\n                          <YAxis />\r\n                          <Tooltip />\r\n                          <Bar dataKey=\"monthlyReturn\" name={t('strategyManagement.monthlyReturn')} fill=\"#8884d8\" />\r\n                          <Bar dataKey=\"sharpeRatio\" name={t('strategyManagement.sharpeRatio')} fill=\"#82ca9d\" />\r\n                        </BarChart>\r\n                      </ResponsiveContainer>\r\n                    </Box>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  };\r\n\r\n  const renderBacktestDialog = (): JSX.Element => (\r\n    <Dialog\r\n      open={isBacktestDialogOpen}\r\n      onClose={() => setIsBacktestDialogOpen(false)}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{t('strategyManagement.backtestSettings')}</DialogTitle>\r\n      <DialogContent>\r\n        <Stepper activeStep={backtestStep} sx={{ mb: 3 }}>\r\n          <Step>\r\n            <StepLabel>{t('strategyManagement.selectStrategy')}</StepLabel>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel>{t('strategyManagement.setParameters')}</StepLabel>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel>{t('strategyManagement.runBacktest')}</StepLabel>\r\n          </Step>\r\n        </Stepper>\r\n        {backtestStep === 0 && (\r\n          <FormControl fullWidth sx={{ mb: 2 }}>\r\n            <InputLabel>{t('strategyManagement.selectStrategy')}</InputLabel>\r\n            <Select\r\n              value={backtestConfig.strategyId}\r\n              label={t('strategyManagement.selectStrategy')}\r\n              onChange={(e) => handleBacktestConfigChange('strategyId', e.target.value)}\r\n            >\r\n              {strategies.map((strategy) => (\r\n                <MenuItem key={strategy.id} value={strategy.id}>\r\n                  {strategy.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        )}\r\n        {backtestStep === 1 && (\r\n          <Box>\r\n            <TextField\r\n              fullWidth\r\n              type=\"date\"\r\n              label={t('strategyManagement.startDate')}\r\n              value={backtestConfig.startDate}\r\n              onChange={(e) => handleBacktestConfigChange('startDate', e.target.value)}\r\n              InputLabelProps={{ shrink: true }}\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              type=\"date\"\r\n              label={t('strategyManagement.endDate')}\r\n              value={backtestConfig.endDate}\r\n              onChange={(e) => handleBacktestConfigChange('endDate', e.target.value)}\r\n              InputLabelProps={{ shrink: true }}\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              type=\"number\"\r\n              label={t('strategyManagement.initialCapital')}\r\n              value={backtestConfig.initialCapital}\r\n              onChange={(e) => handleBacktestConfigChange('initialCapital', parseFloat(e.target.value))}\r\n              sx={{ mb: 2 }}\r\n            />\r\n            {selectedStrategy && (\r\n              <Box>\r\n                <Typography variant=\"subtitle1\" sx={{ mb: 2 }}>\r\n                  {t('strategyManagement.strategyParameters')}\r\n                </Typography>\r\n                {Object.entries(selectedStrategy.parameters).map(([key, value]) => (\r\n                  <TextField\r\n                    key={key}\r\n                    fullWidth\r\n                    label={key}\r\n                    value={backtestConfig.parameters[key] || value}\r\n                    onChange={(e) => handleBacktestConfigChange(`parameters.${key}`, e.target.value)}\r\n                    sx={{ mb: 2 }}\r\n                  />\r\n                ))}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        )}\r\n        {backtestStep === 2 && (\r\n          <Box>\r\n            <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n              {t('strategyManagement.backtestSummary')}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              {t('strategyManagement.strategy')}: {strategies.find(s => s.id === backtestConfig.strategyId)?.name}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              {t('strategyManagement.period')}: {backtestConfig.startDate} - {backtestConfig.endDate}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              {t('strategyManagement.initialCapital')}: ${backtestConfig.initialCapital}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setIsBacktestDialogOpen(false)}>\r\n          {t('common.cancel')}\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            if (backtestStep < 2) {\r\n              setBacktestStep(backtestStep + 1);\r\n            } else {\r\n              // Run backtest\r\n              setIsBacktestDialogOpen(false);\r\n              setBacktestStep(0);\r\n            }\r\n          }}\r\n          disabled={\r\n            (backtestStep === 0 && !backtestConfig.strategyId) ||\r\n            (backtestStep === 1 && (!backtestConfig.startDate || !backtestConfig.endDate))\r\n          }\r\n        >\r\n          {backtestStep === 2 ? t('strategyManagement.run') : t('common.next')}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  const renderOptimizeDialog = (): JSX.Element => (\r\n    <Dialog\r\n      open={isOptimizeDialogOpen}\r\n      onClose={() => setIsOptimizeDialogOpen(false)}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{t('strategyManagement.optimizerSettings')}</DialogTitle>\r\n      <DialogContent>\r\n        <Stepper activeStep={optimizeStep} sx={{ mb: 3 }}>\r\n          <Step>\r\n            <StepLabel>{t('strategyManagement.selectStrategy')}</StepLabel>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel>{t('strategyManagement.setParameters')}</StepLabel>\r\n          </Step>\r\n          <Step>\r\n            <StepLabel>{t('strategyManagement.runOptimizer')}</StepLabel>\r\n          </Step>\r\n        </Stepper>\r\n        {optimizeStep === 0 && (\r\n          <FormControl fullWidth sx={{ mb: 2 }}>\r\n            <InputLabel>{t('strategyManagement.selectStrategy')}</InputLabel>\r\n            <Select\r\n              value={optimizeConfig.strategyId}\r\n              label={t('strategyManagement.selectStrategy')}\r\n              onChange={(e) => handleOptimizeConfigChange('strategyId', e.target.value)}\r\n            >\r\n              {strategies.map((strategy) => (\r\n                <MenuItem key={strategy.id} value={strategy.id}>\r\n                  {strategy.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        )}\r\n        {optimizeStep === 1 && (\r\n          <Box>\r\n            <FormControl fullWidth sx={{ mb: 2 }}>\r\n              <InputLabel>{t('strategyManagement.optimizationTarget')}</InputLabel>\r\n              <Select\r\n                value={optimizeConfig.optimizationTarget}\r\n                label={t('strategyManagement.optimizationTarget')}\r\n                onChange={(e) => handleOptimizeConfigChange('optimizationTarget', e.target.value)}\r\n              >\r\n                <MenuItem value=\"monthlyReturn\">{t('strategyManagement.monthlyReturn')}</MenuItem>\r\n                <MenuItem value=\"sharpeRatio\">{t('strategyManagement.sharpeRatio')}</MenuItem>\r\n                <MenuItem value=\"winRate\">{t('strategyManagement.winRate')}</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <Typography variant=\"subtitle1\" sx={{ mb: 2 }}>\r\n              {t('strategyManagement.constraints')}\r\n            </Typography>\r\n            <TextField\r\n              fullWidth\r\n              type=\"number\"\r\n              label={t('strategyManagement.maxDrawdown')}\r\n              value={optimizeConfig.constraints.maxDrawdown}\r\n              onChange={(e) => handleOptimizeConfigChange('constraints.maxDrawdown', parseFloat(e.target.value))}\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              type=\"number\"\r\n              label={t('strategyManagement.minWinRate')}\r\n              value={optimizeConfig.constraints.minWinRate}\r\n              onChange={(e) => handleOptimizeConfigChange('constraints.minWinRate', parseFloat(e.target.value))}\r\n              sx={{ mb: 2 }}\r\n            />\r\n            {selectedStrategy && (\r\n              <Box>\r\n                <Typography variant=\"subtitle1\" sx={{ mb: 2 }}>\r\n                  {t('strategyManagement.parameterRanges')}\r\n                </Typography>\r\n                {Object.entries(selectedStrategy.parameters).map(([key, value]) => (\r\n                  <Box key={key} sx={{ display: 'flex', gap: 2, mb: 2 }}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label={`${key} Min`}\r\n                      value={optimizeConfig.parameters[`${key}Min`] || value}\r\n                      onChange={(e) => handleOptimizeConfigChange(`parameters.${key}Min`, e.target.value)}\r\n                    />\r\n                    <TextField\r\n                      fullWidth\r\n                      label={`${key} Max`}\r\n                      value={optimizeConfig.parameters[`${key}Max`] || value}\r\n                      onChange={(e) => handleOptimizeConfigChange(`parameters.${key}Max`, e.target.value)}\r\n                    />\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        )}\r\n        {optimizeStep === 2 && (\r\n          <Box>\r\n            <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n              {t('strategyManagement.optimizationSummary')}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              {t('strategyManagement.strategy')}: {strategies.find(s => s.id === optimizeConfig.strategyId)?.name}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              {t('strategyManagement.optimizationTarget')}: {optimizeConfig.optimizationTarget}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              {t('strategyManagement.maxDrawdown')}: {optimizeConfig.constraints.maxDrawdown}%\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              {t('strategyManagement.minWinRate')}: {optimizeConfig.constraints.minWinRate}%\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setIsOptimizeDialogOpen(false)}>\r\n          {t('common.cancel')}\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            if (optimizeStep < 2) {\r\n              setOptimizeStep(optimizeStep + 1);\r\n            } else {\r\n              // Run optimizer\r\n              setIsOptimizeDialogOpen(false);\r\n              setOptimizeStep(0);\r\n            }\r\n          }}\r\n          disabled={\r\n            (optimizeStep === 0 && !optimizeConfig.strategyId) ||\r\n            (optimizeStep === 1 && !optimizeConfig.optimizationTarget)\r\n          }\r\n        >\r\n          {optimizeStep === 2 ? t('strategyManagement.run') : t('common.next')}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  const renderNewStrategyDialog = (): JSX.Element => (\r\n    <Dialog\r\n      open={isNewStrategyDialogOpen}\r\n      onClose={() => setIsNewStrategyDialogOpen(false)}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{t('strategyManagement.addNewStrategy')}</DialogTitle>\r\n      <DialogContent>\r\n        <Box sx={{ mt: 2 }}>\r\n          <TextField\r\n            fullWidth\r\n            label={t('strategyManagement.name')}\r\n            value={newStrategy.name}\r\n            onChange={(e) => handleNewStrategyChange('name', e.target.value)}\r\n            sx={{ mb: 2 }}\r\n          />\r\n          <FormControl fullWidth sx={{ mb: 2 }}>\r\n            <InputLabel>{t('strategyManagement.type')}</InputLabel>\r\n            <Select\r\n              value={newStrategy.type}\r\n              label={t('strategyManagement.type')}\r\n              onChange={(e) => handleNewStrategyChange('type', e.target.value)}\r\n            >\r\n              <MenuItem value=\"trend\">Trend Following</MenuItem>\r\n              <MenuItem value=\"meanReversion\">Mean Reversion</MenuItem>\r\n              <MenuItem value=\"arbitrage\">Arbitrage</MenuItem>\r\n              <MenuItem value=\"marketMaking\">Market Making</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl fullWidth sx={{ mb: 2 }}>\r\n            <InputLabel>{t('strategyManagement.riskLevel')}</InputLabel>\r\n            <Select\r\n              value={newStrategy.riskLevel}\r\n              label={t('strategyManagement.riskLevel')}\r\n              onChange={(e) => handleNewStrategyChange('riskLevel', e.target.value)}\r\n            >\r\n              <MenuItem value=\"low\">Low</MenuItem>\r\n              <MenuItem value=\"medium\">Medium</MenuItem>\r\n              <MenuItem value=\"high\">High</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            fullWidth\r\n            type=\"number\"\r\n            label={t('strategyManagement.monthlyTargetReturn')}\r\n            value={newStrategy.targetReturn.monthly}\r\n            onChange={(e) => handleNewStrategyChange('targetReturn.monthly', parseFloat(e.target.value))}\r\n            sx={{ mb: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            type=\"number\"\r\n            label={t('strategyManagement.annualTargetReturn')}\r\n            value={newStrategy.targetReturn.annual}\r\n            onChange={(e) => handleNewStrategyChange('targetReturn.annual', parseFloat(e.target.value))}\r\n          />\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setIsNewStrategyDialogOpen(false)}>\r\n          {t('common.cancel')}\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={handleAddStrategy}\r\n          disabled={!newStrategy.name || !newStrategy.type}\r\n        >\r\n          {t('common.add')}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  const renderEditDialog = (): JSX.Element => (\r\n    <Dialog\r\n      open={isEditDialogOpen}\r\n      onClose={() => setIsEditDialogOpen(false)}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{t('strategyManagement.editStrategy')}</DialogTitle>\r\n      <DialogContent>\r\n        <Box sx={{ mt: 2 }}>\r\n          <TextField\r\n            fullWidth\r\n            label={t('strategyManagement.name')}\r\n            value={editStrategy?.name || ''}\r\n            onChange={(e) => handleEditStrategyChange('name', e.target.value)}\r\n            sx={{ mb: 2 }}\r\n          />\r\n          <FormControl fullWidth sx={{ mb: 2 }}>\r\n            <InputLabel>{t('strategyManagement.type')}</InputLabel>\r\n            <Select\r\n              value={editStrategy?.type || ''}\r\n              label={t('strategyManagement.type')}\r\n              onChange={(e) => handleEditStrategyChange('type', e.target.value)}\r\n            >\r\n              <MenuItem value=\"trend\">Trend Following</MenuItem>\r\n              <MenuItem value=\"meanReversion\">Mean Reversion</MenuItem>\r\n              <MenuItem value=\"arbitrage\">Arbitrage</MenuItem>\r\n              <MenuItem value=\"marketMaking\">Market Making</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl fullWidth sx={{ mb: 2 }}>\r\n            <InputLabel>{t('strategyManagement.riskLevel')}</InputLabel>\r\n            <Select\r\n              value={editStrategy?.riskLevel || 'medium'}\r\n              label={t('strategyManagement.riskLevel')}\r\n              onChange={(e) => handleEditStrategyChange('riskLevel', e.target.value)}\r\n            >\r\n              <MenuItem value=\"low\">Low</MenuItem>\r\n              <MenuItem value=\"medium\">Medium</MenuItem>\r\n              <MenuItem value=\"high\">High</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            fullWidth\r\n            type=\"number\"\r\n            label={t('strategyManagement.monthlyTargetReturn')}\r\n            value={editStrategy?.targetReturn.monthly || 0}\r\n            onChange={(e) => handleEditStrategyChange('targetReturn.monthly', parseFloat(e.target.value))}\r\n            sx={{ mb: 2 }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            type=\"number\"\r\n            label={t('strategyManagement.annualTargetReturn')}\r\n            value={editStrategy?.targetReturn.annual || 0}\r\n            onChange={(e) => handleEditStrategyChange('targetReturn.annual', parseFloat(e.target.value))}\r\n            sx={{ mb: 2 }}\r\n          />\r\n          <Typography variant=\"subtitle1\" sx={{ mb: 2 }}>\r\n            {t('strategyManagement.parameters')}\r\n          </Typography>\r\n          {editStrategy && Object.entries(editStrategy.parameters).map(([key, value]) => (\r\n            <TextField\r\n              key={key}\r\n              fullWidth\r\n              label={key}\r\n              value={value}\r\n              onChange={(e) => handleEditStrategyChange(`parameters.${key}`, e.target.value)}\r\n              sx={{ mb: 2 }}\r\n            />\r\n          ))}\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setIsEditDialogOpen(false)}>\r\n          {t('common.cancel')}\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={handleSaveStrategy}\r\n          disabled={!editStrategy?.name || !editStrategy?.type}\r\n        >\r\n          {t('common.save')}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  const renderPerformanceCharts = (strategy: Strategy) => (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} md={6}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              {t('strategyManagement.equityCurve')}\r\n            </Typography>\r\n            <Box sx={{ height: 300 }}>\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <AreaChart\r\n                  data={strategy.backtestResults?.[0]?.equityCurve || []}\r\n                  margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"date\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Area\r\n                    type=\"monotone\"\r\n                    dataKey=\"value\"\r\n                    stroke=\"#8884d8\"\r\n                    fill=\"#8884d8\"\r\n                    fillOpacity={0.3}\r\n                  />\r\n                </AreaChart>\r\n              </ResponsiveContainer>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              {t('strategyManagement.performanceMetrics')}\r\n            </Typography>\r\n            <Box sx={{ height: 300 }}>\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <BarChart\r\n                  data={[\r\n                    {\r\n                      name: t('strategyManagement.monthlyReturn'),\r\n                      value: strategy.performance.monthlyReturn,\r\n                    },\r\n                    {\r\n                      name: t('strategyManagement.winRate'),\r\n                      value: strategy.performance.winRate,\r\n                    },\r\n                    {\r\n                      name: t('strategyManagement.sharpeRatio'),\r\n                      value: strategy.performance.sharpeRatio,\r\n                    },\r\n                  ]}\r\n                  margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"name\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Bar\r\n                    dataKey=\"value\"\r\n                    fill=\"#8884d8\"\r\n                    radius={[4, 4, 0, 0]}\r\n                  />\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              {t('strategyManagement.drawdown')}\r\n            </Typography>\r\n            <Box sx={{ height: 300 }}>\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <LineChart\r\n                  data={strategy.backtestResults?.[0]?.equityCurve.map((point, index, array) => ({\r\n                    date: point.date,\r\n                    value: ((point.value - Math.max(...array.slice(0, index + 1).map(p => p.value))) / Math.max(...array.slice(0, index + 1).map(p => p.value))) * 100,\r\n                  })) || []}\r\n                  margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"date\" />\r\n                  <YAxis />\r\n                  <Tooltip />\r\n                  <Line\r\n                    type=\"monotone\"\r\n                    dataKey=\"value\"\r\n                    stroke=\"#ff7300\"\r\n                    strokeWidth={2}\r\n                  />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.03) 0%, rgba(0, 0, 0, 0) 100%)',\r\n        py: 4,\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <motion.div\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          variants={staggerChildren}\r\n        >\r\n          <motion.div variants={fadeIn}>\r\n            <Typography\r\n              variant=\"h2\"\r\n              sx={{\r\n                color: '#00FFB8',\r\n                fontWeight: 700,\r\n                mb: 2,\r\n                fontSize: { xs: '2rem', md: '2.5rem' },\r\n                fontFamily: '\"PingFang SC\", \"Microsoft YaHei\", sans-serif',\r\n              }}\r\n            >\r\n              策略管理\r\n            </Typography>\r\n          </motion.div>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title=\"策略列表\"\r\n                  gradient\r\n                  animation\r\n                >\r\n                  {renderStrategyTable()}\r\n                </PandaCard>\r\n              </motion.div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title=\"策略详情\"\r\n                  gradient\r\n                  animation\r\n                >\r\n                  {selectedStrategy && renderStrategyDetails()}\r\n                </PandaCard>\r\n              </motion.div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title=\"回测结果\"\r\n                  gradient\r\n                  animation\r\n                >\r\n                  {showBacktestResults && renderBacktestResults()}\r\n                </PandaCard>\r\n              </motion.div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title=\"优化结果\"\r\n                  gradient\r\n                  animation\r\n                >\r\n                  {showOptimizationResults && renderOptimizationResults()}\r\n                </PandaCard>\r\n              </motion.div>\r\n            </Grid>\r\n          </Grid>\r\n        </motion.div>\r\n      </Container>\r\n\r\n      {/* 对话框组件 */}\r\n      {renderBacktestDialog()}\r\n      {renderOptimizeDialog()}\r\n      {renderNewStrategyDialog()}\r\n      {renderEditDialog()}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StrategyManagement; ","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  useTheme,\r\n  IconButton,\r\n  Tooltip,\r\n  LinearProgress,\r\n  Chip,\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { themeUtils } from '../theme';\r\nimport {\r\n  ArrowBack as ArrowBackIcon,\r\n  PlayArrow as PlayIcon,\r\n  Pause as PauseIcon,\r\n  Stop as StopIcon,\r\n  TrendingUp as TrendingUpIcon,\r\n  TrendingDown as TrendingDownIcon,\r\n} from '@mui/icons-material';\r\nimport { StrategyReturnDistribution, RiskMetricsRadar, TradeFrequencyHeatmap } from '../components/charts';\r\nimport GlobalBackground from '../components/GlobalBackground';\r\nimport Navbar from '../components/Navbar';\r\n\r\ninterface StrategyDetailProps {\r\n  id: string;\r\n  name: string;\r\n  type: string;\r\n  status: 'running' | 'paused' | 'stopped';\r\n  riskLevel: 'low' | 'medium' | 'high';\r\n  performance: {\r\n    monthlyReturn: number;\r\n    winRate: number;\r\n    maxDrawdown: number;\r\n    totalReturn: number;\r\n    annualizedReturn: number;\r\n  };\r\n}\r\n\r\nconst StrategyDetail: React.FC = () => {\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n  const { id } = useParams<{ id: string }>();\r\n  const navigate = useNavigate();\r\n  const [strategy, setStrategy] = useState<StrategyDetailProps | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // 模拟获取策略详情\r\n    const fetchStrategyDetail = async () => {\r\n      try {\r\n        setLoading(true);\r\n        // 模拟API调用\r\n        const mockStrategy: StrategyDetailProps = {\r\n          id: id || '1',\r\n          name: 'Trend Following',\r\n          type: 'trend',\r\n          status: 'running',\r\n          riskLevel: 'medium',\r\n          performance: {\r\n            monthlyReturn: 85.2,\r\n            winRate: 65,\r\n            maxDrawdown: 15.2,\r\n            totalReturn: 1022.4,\r\n            annualizedReturn: 1022.4,\r\n          },\r\n        };\r\n        setStrategy(mockStrategy);\r\n      } catch (error) {\r\n        console.error('Error fetching strategy detail:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchStrategyDetail();\r\n  }, [id]);\r\n\r\n  const handleStrategyAction = async (action: 'start' | 'stop' | 'pause') => {\r\n    if (!strategy) return;\r\n    \r\n    try {\r\n      // 模拟API调用\r\n      setStrategy(prev => prev ? {\r\n        ...prev,\r\n        status: action === 'start' ? 'running' : action === 'pause' ? 'paused' : 'stopped'\r\n      } : null);\r\n    } catch (error) {\r\n      console.error('Error performing strategy action:', error);\r\n    }\r\n  };\r\n\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.1,\r\n      },\r\n    },\r\n  };\r\n\r\n  const itemVariants = {\r\n    hidden: { y: 20, opacity: 0 },\r\n    visible: {\r\n      y: 0,\r\n      opacity: 1,\r\n      transition: {\r\n        duration: 0.5,\r\n      },\r\n    },\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '400px' }}>\r\n        <LinearProgress sx={{ width: '100%', maxWidth: 400 }} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (!strategy) {\r\n    return (\r\n      <Box sx={{ p: 3 }}>\r\n        <Typography variant=\"h6\" color=\"error\">\r\n          {t('strategy.notFound')}\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      variants={containerVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ py: 4 }}>\r\n          {/* Header */}\r\n          <motion.div variants={itemVariants}>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 4 }}>\r\n              <IconButton onClick={() => navigate(-1)} sx={{ mr: 2 }}>\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h4\" sx={{ fontWeight: 'bold' }}>\r\n                {strategy.name}\r\n              </Typography>\r\n            </Box>\r\n          </motion.div>\r\n\r\n          {/* Strategy Overview */}\r\n          <Grid container spacing={3} sx={{ mb: 4 }}>\r\n            <Grid item xs={12} md={4}>\r\n              <motion.div variants={itemVariants}>\r\n                <Card\r\n                  sx={{\r\n                    background: themeUtils.gradients.primary,\r\n                    color: 'white',\r\n                    borderRadius: 2,\r\n                    boxShadow: theme.shadows[4],\r\n                  }}\r\n                >\r\n                  <CardContent>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                      <Typography variant=\"h6\">\r\n                        {t('strategy.status')}\r\n                      </Typography>\r\n                      <Chip\r\n                        label={t(`strategy.status.${strategy.status}`)}\r\n                        color={\r\n                          strategy.status === 'running'\r\n                            ? 'success'\r\n                            : strategy.status === 'paused'\r\n                            ? 'warning'\r\n                            : 'error'\r\n                        }\r\n                      />\r\n                    </Box>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                      <Typography variant=\"h6\">\r\n                        {t('strategy.riskLevel')}\r\n                      </Typography>\r\n                      <Chip\r\n                        label={t(`strategy.risk.${strategy.riskLevel}`)}\r\n                        color={\r\n                          strategy.riskLevel === 'low'\r\n                            ? 'success'\r\n                            : strategy.riskLevel === 'medium'\r\n                            ? 'warning'\r\n                            : 'error'\r\n                        }\r\n                      />\r\n                    </Box>\r\n                    <Box sx={{ display: 'flex', gap: 1 }}>\r\n                      <Tooltip title={t('strategy.actions.start')}>\r\n                        <IconButton\r\n                          onClick={() => handleStrategyAction('start')}\r\n                          sx={{ color: 'white' }}\r\n                        >\r\n                          <PlayIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title={t('strategy.actions.pause')}>\r\n                        <IconButton\r\n                          onClick={() => handleStrategyAction('pause')}\r\n                          sx={{ color: 'white' }}\r\n                        >\r\n                          <PauseIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title={t('strategy.actions.stop')}>\r\n                        <IconButton\r\n                          onClick={() => handleStrategyAction('stop')}\r\n                          sx={{ color: 'white' }}\r\n                        >\r\n                          <StopIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </Box>\r\n                  </CardContent>\r\n                </Card>\r\n              </motion.div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={8}>\r\n              <motion.div variants={itemVariants}>\r\n                <Card\r\n                  sx={{\r\n                    background: themeUtils.gradients.secondary,\r\n                    color: 'white',\r\n                    borderRadius: 2,\r\n                    boxShadow: theme.shadows[4],\r\n                  }}\r\n                >\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\" sx={{ mb: 3 }}>\r\n                      {t('strategy.performance')}\r\n                    </Typography>\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={6} md={3}>\r\n                        <Box>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {t('strategy.monthlyReturn')}\r\n                          </Typography>\r\n                          <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                            {strategy.performance.monthlyReturn >= 0 ? (\r\n                              <TrendingUpIcon sx={{ color: theme.palette.success.main, mr: 1 }} />\r\n                            ) : (\r\n                              <TrendingDownIcon sx={{ color: theme.palette.error.main, mr: 1 }} />\r\n                            )}\r\n                            <Typography variant=\"h6\">\r\n                              {strategy.performance.monthlyReturn >= 0 ? '+' : ''}\r\n                              {strategy.performance.monthlyReturn.toFixed(2)}%\r\n                            </Typography>\r\n                          </Box>\r\n                        </Box>\r\n                      </Grid>\r\n                      <Grid item xs={6} md={3}>\r\n                        <Box>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {t('strategy.winRate')}\r\n                          </Typography>\r\n                          <Typography variant=\"h6\">\r\n                            {strategy.performance.winRate.toFixed(1)}%\r\n                          </Typography>\r\n                        </Box>\r\n                      </Grid>\r\n                      <Grid item xs={6} md={3}>\r\n                        <Box>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {t('strategy.maxDrawdown')}\r\n                          </Typography>\r\n                          <Typography variant=\"h6\" color=\"error.main\">\r\n                            {strategy.performance.maxDrawdown.toFixed(2)}%\r\n                          </Typography>\r\n                        </Box>\r\n                      </Grid>\r\n                      <Grid item xs={6} md={3}>\r\n                        <Box>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {t('strategy.totalReturn')}\r\n                          </Typography>\r\n                          <Typography variant=\"h6\">\r\n                            {strategy.performance.totalReturn.toFixed(2)}%\r\n                          </Typography>\r\n                        </Box>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                </Card>\r\n              </motion.div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Charts */}\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={4}>\r\n              <motion.div variants={itemVariants}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <StrategyReturnDistribution\r\n                      data={{\r\n                        labels: ['-5%', '-3%', '-1%', '1%', '3%', '5%'],\r\n                        values: [10, 20, 30, 40, 30, 20]\r\n                      }}\r\n                      title={t('strategy.returnDistribution')}\r\n                    />\r\n                  </CardContent>\r\n                </Card>\r\n              </motion.div>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <motion.div variants={itemVariants}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <RiskMetricsRadar\r\n                      data={{\r\n                        labels: ['波动率', '最大回撤', '夏普比率', '胜率', '盈亏比'],\r\n                        values: [80, 60, 70, 90, 75]\r\n                      }}\r\n                      title={t('strategy.riskMetrics')}\r\n                    />\r\n                  </CardContent>\r\n                </Card>\r\n              </motion.div>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <motion.div variants={itemVariants}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <TradeFrequencyHeatmap\r\n                      data={{\r\n                        labels: ['00:00', '04:00', '08:00', '12:00', '16:00', '20:00'],\r\n                        datasets: [{\r\n                          label: 'BTC/USDT',\r\n                          data: [[10, 20, 30, 40, 50, 60], [15, 25, 35, 45, 55, 65]]\r\n                        }]\r\n                      }}\r\n                      title={t('strategy.tradeFrequency')}\r\n                    />\r\n                  </CardContent>\r\n                </Card>\r\n              </motion.div>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default StrategyDetail; ","import React from 'react';\r\nimport { Button, useTheme } from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport { themeUtils } from '../../theme';\r\n\r\nexport interface PandaButtonProps {\r\n  children: React.ReactNode;\r\n  onClick?: () => void;\r\n  variant?: 'text' | 'contained' | 'outlined';\r\n  color?: 'primary' | 'secondary' | 'error' | 'success' | 'warning' | 'info';\r\n  size?: 'small' | 'medium' | 'large';\r\n  disabled?: boolean;\r\n  fullWidth?: boolean;\r\n  startIcon?: React.ReactNode;\r\n  endIcon?: React.ReactNode;\r\n  sx?: any;\r\n  type?: 'button' | 'submit' | 'reset';\r\n  href?: string;\r\n  target?: string;\r\n  animate?: boolean;\r\n}\r\n\r\nconst PandaButton: React.FC<PandaButtonProps> = ({\r\n  children,\r\n  onClick,\r\n  variant = 'contained',\r\n  color = 'primary',\r\n  size = 'medium',\r\n  disabled = false,\r\n  fullWidth = false,\r\n  startIcon,\r\n  endIcon,\r\n  sx,\r\n  type = 'button',\r\n  href,\r\n  target,\r\n  animate = true,\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const button = (\r\n    <Button\r\n      variant={variant}\r\n      color={color}\r\n      size={size}\r\n      disabled={disabled}\r\n      fullWidth={fullWidth}\r\n      startIcon={startIcon}\r\n      endIcon={endIcon}\r\n      onClick={onClick}\r\n      type={type}\r\n      href={href}\r\n      target={target}\r\n      sx={{\r\n        borderRadius: theme.shape.borderRadius,\r\n        textTransform: 'none',\r\n        fontWeight: 600,\r\n        transition: 'all 0.3s ease',\r\n        '&:hover': {\r\n          transform: 'translateY(-2px)',\r\n          boxShadow: theme.shadows[4],\r\n        },\r\n        ...sx,\r\n      }}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n\r\n  if (!animate) {\r\n    return button;\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: -10 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.3 }}\r\n    >\r\n      {button}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default PandaButton; ","import React from 'react';\r\nimport { Chip, useTheme } from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\n\r\ninterface PandaChipProps {\r\n  label: string;\r\n  color?: 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'error';\r\n  variant?: 'filled' | 'outlined';\r\n  size?: 'small' | 'medium';\r\n  icon?: React.ReactElement;\r\n  onDelete?: () => void;\r\n  onClick?: () => void;\r\n  disabled?: boolean;\r\n  animate?: boolean;\r\n  glow?: boolean;\r\n}\r\n\r\nexport const PandaChip: React.FC<PandaChipProps> = ({\r\n  label,\r\n  color = 'primary',\r\n  variant = 'filled',\r\n  size = 'medium',\r\n  icon,\r\n  onDelete,\r\n  onClick,\r\n  disabled = false,\r\n  animate = true,\r\n  glow = false,\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const getChipStyle = () => ({\r\n    borderRadius: theme.shape.borderRadius,\r\n    transition: 'all 0.3s ease-in-out',\r\n    '&:hover': {\r\n      transform: 'translateY(-2px)',\r\n      boxShadow: glow ? theme.shadows[8] : theme.shadows[4],\r\n    },\r\n    ...(variant === 'outlined' && {\r\n      borderColor: theme.palette[color].main,\r\n      '&:hover': {\r\n        background: theme.palette[color].light,\r\n      },\r\n    }),\r\n  });\r\n\r\n  const getAnimation = () => {\r\n    if (!animate) return {};\r\n\r\n    return {\r\n      whileHover: { scale: 1.05 },\r\n      whileTap: { scale: 0.95 },\r\n    };\r\n  };\r\n\r\n  return (\r\n    <motion.div {...getAnimation()}>\r\n      <Chip\r\n        label={label}\r\n        color={color}\r\n        variant={variant}\r\n        size={size}\r\n        icon={icon}\r\n        onDelete={onDelete}\r\n        onClick={onClick}\r\n        disabled={disabled}\r\n        sx={getChipStyle()}\r\n      />\r\n    </motion.div>\r\n  );\r\n}; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Switch,\r\n  FormControlLabel,\r\n  Alert,\r\n  CircularProgress,\r\n  Paper,\r\n  Tabs,\r\n  Tab,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  useTheme,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Divider,\r\n  Snackbar,\r\n  Tooltip,\r\n  LinearProgress\r\n} from '@mui/material';\r\nimport {\r\n  Security as SecurityIcon,\r\n  VpnKey as VpnKeyIcon,\r\n  Settings as SettingsIcon,\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  Error as ErrorIcon,\r\n  Edit as EditIcon,\r\n  Lock as LockIcon,\r\n  Public as PublicIcon,\r\n  Link as LinkIcon,\r\n  Warning as WarningIcon,\r\n  Refresh as RefreshIcon\r\n} from '@mui/icons-material';\r\nimport { motion } from 'framer-motion';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { themeUtils } from '../theme';\r\nimport PandaCard from '../components/common/PandaCard';\r\nimport PandaButton from '../components/common/PandaButton';\r\nimport PandaAlert from '../components/common/PandaAlert';\r\nimport PandaProgress from '../components/common/PandaProgress';\r\nimport PandaTable from '../components/common/PandaTable';\r\nimport { PandaChip } from '../components/common/PandaChip';\r\nimport apiService from '../services/apiService';\r\nimport { fadeIn, slideUp, staggerChildren } from '../animations';\r\n\r\ninterface ApiKey {\r\n  id: string;\r\n  name: string;\r\n  exchange: string;\r\n  apiKey: string;\r\n  secretKey: string;\r\n  status: 'active' | 'inactive';\r\n  createdAt: string;\r\n  lastUsed: string;\r\n  permissions: string[];\r\n}\r\n\r\ninterface SecuritySettings {\r\n  ipWhitelist: string[];\r\n  require2FA: boolean;\r\n  autoDisconnect: boolean;\r\n  sessionTimeout: number;\r\n}\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`api-tabpanel-${index}`}\r\n      aria-labelledby={`api-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ApiManagement: React.FC = () => {\r\n  const theme = useTheme();\r\n  const { t } = useTranslation();\r\n  const { isAuthenticated } = useAuth();\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [apiKeys, setApiKeys] = useState<ApiKey[]>([\r\n    {\r\n      id: '1',\r\n      name: 'Binance Main',\r\n      exchange: 'binance',\r\n      apiKey: '********',\r\n      secretKey: '********',\r\n      status: 'active',\r\n      createdAt: '2024-01-01',\r\n      lastUsed: '2024-01-15',\r\n      permissions: [],\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'OKX Trading',\r\n      exchange: 'okx',\r\n      apiKey: '********',\r\n      secretKey: '********',\r\n      status: 'inactive',\r\n      createdAt: '2024-01-05',\r\n      lastUsed: '2024-01-10',\r\n      permissions: [],\r\n    },\r\n  ]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [securitySettings, setSecuritySettings] = useState<SecuritySettings>({\r\n    ipWhitelist: ['192.168.1.1', '10.0.0.1'],\r\n    require2FA: true,\r\n    autoDisconnect: true,\r\n    sessionTimeout: 30,\r\n  });\r\n  const [showAddApiDialog, setShowAddApiDialog] = useState(false);\r\n  const [newApiKey, setNewApiKey] = useState<Partial<ApiKey>>({\r\n    exchange: '',\r\n    apiKey: '',\r\n    secretKey: '',\r\n    permissions: [],\r\n  });\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [currentApiKey, setCurrentApiKey] = useState<Partial<ApiKey>>({});\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' as 'success' | 'error' });\r\n  const [selectedApiKey, setSelectedApiKey] = useState<ApiKey | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      fetchApiKeys();\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  const fetchApiKeys = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('/api/connect', {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(t('api.errors.fetchFailed'));\r\n      }\r\n\r\n      const data = await response.json();\r\n      setApiKeys(data);\r\n    } catch (error) {\r\n      setError(t('api.errors.fetchFailed'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setActiveTab(newValue);\r\n  };\r\n\r\n  const handleAddApi = () => {\r\n    const newApi: ApiKey = {\r\n      id: String(apiKeys.length + 1),\r\n      name: newApiKey.name || '',\r\n      exchange: newApiKey.exchange || '',\r\n      apiKey: newApiKey.apiKey || '',\r\n      secretKey: newApiKey.secretKey || '',\r\n      permissions: newApiKey.permissions || [],\r\n      status: 'active',\r\n      createdAt: new Date().toISOString(),\r\n      lastUsed: new Date().toISOString(),\r\n    };\r\n    setApiKeys([...apiKeys, newApi]);\r\n    setShowAddApiDialog(false);\r\n    setNewApiKey({\r\n      exchange: '',\r\n      apiKey: '',\r\n      secretKey: '',\r\n      permissions: [],\r\n    });\r\n  };\r\n\r\n  const handleDeleteApi = (id: string) => {\r\n    setApiKeys(apiKeys.filter(api => api.id !== id));\r\n  };\r\n\r\n  const handleSecuritySettingChange = (setting: keyof SecuritySettings, value: any) => {\r\n    setSecuritySettings(prev => ({\r\n      ...prev,\r\n      [setting]: value,\r\n    }));\r\n  };\r\n\r\n  const getStatusColor = (status: ApiKey['status']) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return 'success';\r\n      case 'inactive':\r\n        return 'warning';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  const handleAddApiKey = () => {\r\n    setIsEditMode(false);\r\n    setCurrentApiKey({});\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleEditApiKey = (apiKey: ApiKey) => {\r\n    setIsEditMode(true);\r\n    setCurrentApiKey(apiKey);\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleSaveApiKey = () => {\r\n    if (isEditMode) {\r\n      setApiKeys(apiKeys.map(key => \r\n        key.id === currentApiKey.id ? { ...key, ...currentApiKey } : key\r\n      ));\r\n    } else {\r\n      const newApiKey: ApiKey = {\r\n        id: Date.now().toString(),\r\n        name: currentApiKey.name || '',\r\n        exchange: currentApiKey.exchange || '',\r\n        apiKey: currentApiKey.apiKey || '',\r\n        secretKey: currentApiKey.secretKey || '',\r\n        status: 'active',\r\n        createdAt: new Date().toISOString(),\r\n        lastUsed: new Date().toISOString(),\r\n        permissions: currentApiKey.permissions || [],\r\n      };\r\n      setApiKeys([...apiKeys, newApiKey]);\r\n    }\r\n    setSnackbar({\r\n      open: true,\r\n      message: isEditMode ? t('apiManagement.apiKeyUpdated') : t('apiManagement.apiKeyAdded'),\r\n      severity: 'success',\r\n    });\r\n    handleDialogClose();\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setIsDialogOpen(false);\r\n    setCurrentApiKey({});\r\n  };\r\n\r\n  const handleInputChange = (field: keyof ApiKey, value: string) => {\r\n    setCurrentApiKey(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <Box sx={{ p: 3 }}>\r\n        <PandaAlert severity=\"warning\" message={t('api.authRequired')} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '400px' }}>\r\n        <LinearProgress sx={{ width: '100%', maxWidth: 400 }} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Box sx={{ p: 3 }}>\r\n        <PandaAlert severity=\"error\" message={error} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.03) 0%, rgba(0, 0, 0, 0) 100%)',\r\n        py: 4,\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <motion.div\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          variants={staggerChildren}\r\n        >\r\n          <motion.div variants={fadeIn}>\r\n            <Typography\r\n              variant=\"h2\"\r\n              sx={{\r\n                color: '#00FFB8',\r\n                fontWeight: 700,\r\n                mb: 2,\r\n                fontSize: { xs: '2rem', md: '2.5rem' },\r\n                fontFamily: '\"PingFang SC\", \"Microsoft YaHei\", sans-serif',\r\n              }}\r\n            >\r\n              {t('api.title')}\r\n            </Typography>\r\n          </motion.div>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title=\"API Keys\"\r\n                  gradient\r\n                  animation\r\n                >\r\n                  <Box sx={{ mb: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n                    <PandaButton\r\n                      variant=\"contained\"\r\n                      onClick={() => setShowAddApiDialog(true)}\r\n                      startIcon={<LinkIcon />}\r\n                    >\r\n                      {t('api.addKey')}\r\n                    </PandaButton>\r\n                  </Box>\r\n\r\n                  <PandaTable\r\n                    columns={[\r\n                      { id: 'exchange', label: t('api.exchange'), minWidth: 170 },\r\n                      { id: 'name', label: t('api.name'), minWidth: 100 },\r\n                      { id: 'status', label: t('api.status'), minWidth: 170 },\r\n                      { id: 'actions', label: t('api.actions'), minWidth: 100 }\r\n                    ]}\r\n                    data={apiKeys.map(key => ({\r\n                      ...key,\r\n                      status: (\r\n                        <PandaChip\r\n                          icon={key.status === 'active' ? <LinkIcon /> : <WarningIcon />}\r\n                          label={key.status}\r\n                          color={getStatusColor(key.status)}\r\n                          size=\"small\"\r\n                        />\r\n                      ),\r\n                      actions: (\r\n                        <IconButton\r\n                          size=\"small\"\r\n                          onClick={() => {\r\n                            setSelectedApiKey(key);\r\n                            setIsEditMode(true);\r\n                            setIsDialogOpen(true);\r\n                          }}\r\n                        >\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      )\r\n                    }))}\r\n                  />\r\n                </PandaCard>\r\n              </motion.div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title=\"Security Settings\"\r\n                  gradient\r\n                  animation\r\n                >\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs={12} md={6}>\r\n                      <PandaCard>\r\n                        <CardContent>\r\n                          <Typography variant=\"h6\" gutterBottom>\r\n                            {t('api.security.ipWhitelist')}\r\n                          </Typography>\r\n                          <TextField\r\n                            fullWidth\r\n                            multiline\r\n                            rows={4}\r\n                            value={securitySettings.ipWhitelist.join('\\n')}\r\n                            onChange={(e) =>\r\n                              handleSecuritySettingChange(\r\n                                'ipWhitelist',\r\n                                e.target.value.split('\\n')\r\n                              )\r\n                            }\r\n                            placeholder={t('api.security.ipWhitelistPlaceholder')}\r\n                          />\r\n                        </CardContent>\r\n                      </PandaCard>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={6}>\r\n                      <PandaCard>\r\n                        <CardContent>\r\n                          <Typography variant=\"h6\" gutterBottom>\r\n                            {t('api.security.require2FA')}\r\n                          </Typography>\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Switch\r\n                                checked={securitySettings.require2FA}\r\n                                onChange={(e) =>\r\n                                  handleSecuritySettingChange('require2FA', e.target.checked)\r\n                                }\r\n                              />\r\n                            }\r\n                            label={t('api.security.require2FALabel')}\r\n                          />\r\n                        </CardContent>\r\n                      </PandaCard>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={6}>\r\n                      <PandaCard>\r\n                        <CardContent>\r\n                          <Typography variant=\"h6\" gutterBottom>\r\n                            {t('api.security.autoDisconnect')}\r\n                          </Typography>\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Switch\r\n                                checked={securitySettings.autoDisconnect}\r\n                                onChange={(e) =>\r\n                                  handleSecuritySettingChange(\r\n                                    'autoDisconnect',\r\n                                    e.target.checked\r\n                                  )\r\n                                }\r\n                              />\r\n                            }\r\n                            label={t('api.security.autoDisconnectLabel')}\r\n                          />\r\n                        </CardContent>\r\n                      </PandaCard>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={6}>\r\n                      <PandaCard>\r\n                        <CardContent>\r\n                          <Typography variant=\"h6\" gutterBottom>\r\n                            {t('api.security.sessionTimeout')}\r\n                          </Typography>\r\n                          <FormControl fullWidth>\r\n                            <InputLabel>{t('api.security.sessionTimeoutLabel')}</InputLabel>\r\n                            <Select\r\n                              value={securitySettings.sessionTimeout}\r\n                              onChange={(e) =>\r\n                                handleSecuritySettingChange(\r\n                                  'sessionTimeout',\r\n                                  Number(e.target.value)\r\n                                )\r\n                              }\r\n                            >\r\n                              <MenuItem value={15}>15 minutes</MenuItem>\r\n                              <MenuItem value={30}>30 minutes</MenuItem>\r\n                              <MenuItem value={60}>60 minutes</MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                        </CardContent>\r\n                      </PandaCard>\r\n                    </Grid>\r\n                  </Grid>\r\n                </PandaCard>\r\n              </motion.div>\r\n            </Grid>\r\n          </Grid>\r\n        </motion.div>\r\n      </Container>\r\n\r\n      {/* Add API Key Dialog */}\r\n      <Dialog open={showAddApiDialog} onClose={() => setShowAddApiDialog(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>{t('apiManagement.addKey')}</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ pt: 2 }}>\r\n            <TextField\r\n              fullWidth\r\n              label={t('apiManagement.keyName')}\r\n              value={newApiKey.name || ''}\r\n              onChange={(e) => setNewApiKey({ ...newApiKey, name: e.target.value })}\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <FormControl fullWidth sx={{ mb: 2 }}>\r\n              <InputLabel>{t('apiManagement.exchange')}</InputLabel>\r\n              <Select\r\n                value={newApiKey.exchange || ''}\r\n                onChange={(e) => setNewApiKey({ ...newApiKey, exchange: e.target.value })}\r\n                label={t('apiManagement.exchange')}\r\n              >\r\n                <MenuItem value=\"binance\">Binance</MenuItem>\r\n                <MenuItem value=\"okx\">OKX</MenuItem>\r\n                <MenuItem value=\"huobi\">Huobi</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              fullWidth\r\n              label={t('apiManagement.apiKey')}\r\n              value={newApiKey.apiKey || ''}\r\n              onChange={(e) => setNewApiKey({ ...newApiKey, apiKey: e.target.value })}\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label={t('apiManagement.apiSecret')}\r\n              value={newApiKey.secretKey || ''}\r\n              onChange={(e) => setNewApiKey({ ...newApiKey, secretKey: e.target.value })}\r\n              type=\"password\"\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowAddApiDialog(false)}>\r\n            {t('common.cancel')}\r\n          </Button>\r\n          <PandaButton variant=\"contained\" onClick={handleAddApi}>\r\n            {t('common.save')}\r\n          </PandaButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Edit API Key Dialog */}\r\n      <Dialog open={isDialogOpen} onClose={handleDialogClose} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          {isEditMode ? t('apiManagement.editApiKey') : t('apiManagement.addApiKey')}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>\r\n            <TextField\r\n              label={t('apiManagement.name')}\r\n              value={currentApiKey.name || ''}\r\n              onChange={(e) => handleInputChange('name', e.target.value)}\r\n              fullWidth\r\n            />\r\n            <FormControl fullWidth>\r\n              <InputLabel>{t('apiManagement.exchange')}</InputLabel>\r\n              <Select\r\n                value={currentApiKey.exchange || ''}\r\n                onChange={(e) => handleInputChange('exchange', e.target.value)}\r\n                label={t('apiManagement.exchange')}\r\n              >\r\n                <MenuItem value=\"binance\">Binance</MenuItem>\r\n                <MenuItem value=\"okx\">OKX</MenuItem>\r\n                <MenuItem value=\"huobi\">Huobi</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              label={t('apiManagement.apiKey')}\r\n              value={currentApiKey.apiKey || ''}\r\n              onChange={(e) => handleInputChange('apiKey', e.target.value)}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              label={t('apiManagement.apiSecret')}\r\n              value={currentApiKey.secretKey || ''}\r\n              onChange={(e) => handleInputChange('secretKey', e.target.value)}\r\n              fullWidth\r\n              type=\"password\"\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDialogClose}>{t('common.cancel')}</Button>\r\n          <PandaButton onClick={handleSaveApiKey} variant=\"contained\">\r\n            {t('common.save')}\r\n          </PandaButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={6000}\r\n        onClose={() => setSnackbar(prev => ({ ...prev, open: false }))}\r\n      >\r\n        <PandaAlert\r\n          onClose={() => setSnackbar(prev => ({ ...prev, open: false }))}\r\n          severity={snackbar.severity}\r\n          sx={{ width: '100%' }}\r\n        >\r\n          {snackbar.message}\r\n        </PandaAlert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ApiManagement; ","import React from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Container,\r\n  Paper,\r\n  Divider,\r\n} from '@mui/material';\r\nimport { \r\n  Security as SecurityIcon, \r\n  Lock as LockIcon, \r\n  VpnKey as VpnKeyIcon,\r\n  Shield as ShieldIcon,\r\n  VerifiedUser as VerifiedUserIcon,\r\n  SecurityUpdateGood as SecurityUpdateGoodIcon,\r\n  AccountBalance as AccountBalanceIcon,\r\n  CloudSync as CloudSyncIcon,\r\n  Verified as VerifiedIcon,\r\n  GppGood as GppGoodIcon,\r\n} from '@mui/icons-material';\r\nimport { motion } from 'framer-motion';\r\nimport PandaCard from '../components/common/PandaCard';\r\nimport { fadeIn, slideUp, staggerChildren } from '../animations';\r\nimport GlobalBackground from '../components/common/GlobalBackground';\r\n\r\nconst SecurityPage: React.FC = () => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        background: 'linear-gradient(180deg, rgba(255,255,255,0.95) 0%, rgba(255,255,255,0.98) 100%)',\r\n      }}\r\n    >\r\n      <GlobalBackground />\r\n      \r\n      <Container maxWidth=\"lg\" sx={{ py: 8 }}>\r\n        <motion.div\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          variants={staggerChildren}\r\n        >\r\n          <motion.div variants={fadeIn}>\r\n            <Box sx={{ \r\n              display: 'flex', \r\n              alignItems: 'center', \r\n              mb: 6,\r\n              gap: 2,\r\n              position: 'relative',\r\n              '&::after': {\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                bottom: -16,\r\n                left: 0,\r\n                width: '100%',\r\n                height: '1px',\r\n                background: 'linear-gradient(90deg, transparent, rgba(0, 255, 184, 0.3), transparent)',\r\n              }\r\n            }}>\r\n              <SecurityIcon sx={{ \r\n                fontSize: '3.5rem', \r\n                color: '#00FFB8',\r\n                filter: 'drop-shadow(0 0 15px rgba(0, 255, 184, 0.5))'\r\n              }} />\r\n              <Box>\r\n                <Typography\r\n                  variant=\"h2\"\r\n                  sx={{\r\n                    color: '#00FFB8',\r\n                    fontWeight: 700,\r\n                    fontSize: { xs: '2.2rem', md: '2.8rem' },\r\n                    fontFamily: '\"PingFang SC\", \"Microsoft YaHei\", sans-serif',\r\n                    textShadow: '0 0 15px rgba(0, 255, 184, 0.3)',\r\n                    letterSpacing: '0.02em',\r\n                  }}\r\n                >\r\n                  平台安全保障\r\n                </Typography>\r\n                <Typography \r\n                  variant=\"subtitle1\" \r\n                  sx={{ \r\n                    color: 'rgba(0, 0, 0, 0.8)',\r\n                    fontSize: '1.1rem',\r\n                    mt: 1,\r\n                    letterSpacing: '0.01em',\r\n                  }}\r\n                >\r\n                  全方位安全防护体系，为您的数字资产保驾护航\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          </motion.div>\r\n\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12} md={6}>\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title={\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                      <ShieldIcon sx={{ color: '#00FFB8' }} />\r\n                      <Typography variant=\"h6\" sx={{ fontWeight: 600, color: '#00FFB8' }}>资金安全保障</Typography>\r\n                    </Box>\r\n                  }\r\n                  gradient\r\n                  animation\r\n                >\r\n                  <Box sx={{ \r\n                    display: 'flex', \r\n                    flexDirection: 'column',\r\n                    gap: 2.5,\r\n                  }}>\r\n                    <Box sx={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center', \r\n                      gap: 2,\r\n                      p: 2.5,\r\n                      bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                      borderRadius: 2,\r\n                      transition: 'all 0.3s',\r\n                      '&:hover': {\r\n                        bgcolor: 'rgba(0, 255, 184, 0.08)',\r\n                        transform: 'translateY(-2px)',\r\n                      }\r\n                    }}>\r\n                      <AccountBalanceIcon sx={{ \r\n                        color: '#00FFB8',\r\n                        fontSize: '2rem',\r\n                      }} />\r\n                      <Box>\r\n                        <Typography variant=\"body1\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.8)',\r\n                          fontWeight: 500,\r\n                          mb: 0.5,\r\n                        }}>\r\n                          资金托管\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.6)',\r\n                          lineHeight: 1.6,\r\n                        }}>\r\n                          用户资金由专业第三方托管机构保管，平台无法直接接触用户资金，确保资金安全\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                    <Box sx={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center', \r\n                      gap: 2,\r\n                      p: 2.5,\r\n                      bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                      borderRadius: 2,\r\n                      transition: 'all 0.3s',\r\n                      '&:hover': {\r\n                        bgcolor: 'rgba(0, 255, 184, 0.08)',\r\n                        transform: 'translateY(-2px)',\r\n                      }\r\n                    }}>\r\n                      <LockIcon sx={{ \r\n                        color: '#00FFB8',\r\n                        fontSize: '2rem',\r\n                      }} />\r\n                      <Box>\r\n                        <Typography variant=\"body1\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.8)',\r\n                          fontWeight: 500,\r\n                          mb: 0.5,\r\n                        }}>\r\n                          冷热钱包分离\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.6)',\r\n                          lineHeight: 1.6,\r\n                        }}>\r\n                          采用冷热钱包分离存储机制，95%资产存储在离线冷钱包，确保资金安全\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                    <Box sx={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center', \r\n                      gap: 2,\r\n                      p: 2.5,\r\n                      bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                      borderRadius: 2,\r\n                      transition: 'all 0.3s',\r\n                      '&:hover': {\r\n                        bgcolor: 'rgba(0, 255, 184, 0.08)',\r\n                        transform: 'translateY(-2px)',\r\n                      }\r\n                    }}>\r\n                      <VerifiedIcon sx={{ \r\n                        color: '#00FFB8',\r\n                        fontSize: '2rem',\r\n                      }} />\r\n                      <Box>\r\n                        <Typography variant=\"body1\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.8)',\r\n                          fontWeight: 500,\r\n                          mb: 0.5,\r\n                        }}>\r\n                          多重签名机制\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.6)',\r\n                          lineHeight: 1.6,\r\n                        }}>\r\n                          所有资金操作需要多重签名确认，防止单点风险，确保交易安全\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                </PandaCard>\r\n              </motion.div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title={\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                      <VpnKeyIcon sx={{ color: '#00FFB8' }} />\r\n                      <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>交易所API安全</Typography>\r\n                    </Box>\r\n                  }\r\n                  gradient\r\n                  animation\r\n                >\r\n                  <Box sx={{ \r\n                    display: 'flex', \r\n                    flexDirection: 'column',\r\n                    gap: 2.5,\r\n                  }}>\r\n                    <Box sx={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center', \r\n                      gap: 2,\r\n                      p: 2.5,\r\n                      bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                      borderRadius: 2,\r\n                      transition: 'all 0.3s',\r\n                      '&:hover': {\r\n                        bgcolor: 'rgba(0, 255, 184, 0.08)',\r\n                        transform: 'translateY(-2px)',\r\n                      }\r\n                    }}>\r\n                      <CloudSyncIcon sx={{ \r\n                        color: '#00FFB8',\r\n                        fontSize: '2rem',\r\n                      }} />\r\n                      <Box>\r\n                        <Typography variant=\"body1\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.8)',\r\n                          fontWeight: 500,\r\n                          mb: 0.5,\r\n                        }}>\r\n                          API密钥加密存储\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.6)',\r\n                          lineHeight: 1.6,\r\n                        }}>\r\n                          采用银行级AES-256加密技术，确保API密钥安全存储，防止泄露风险\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                    <Box sx={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center', \r\n                      gap: 2,\r\n                      p: 2.5,\r\n                      bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                      borderRadius: 2,\r\n                      transition: 'all 0.3s',\r\n                      '&:hover': {\r\n                        bgcolor: 'rgba(0, 255, 184, 0.08)',\r\n                        transform: 'translateY(-2px)',\r\n                      }\r\n                    }}>\r\n                      <SecurityUpdateGoodIcon sx={{ \r\n                        color: '#00FFB8',\r\n                        fontSize: '2rem',\r\n                      }} />\r\n                      <Box>\r\n                        <Typography variant=\"body1\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.8)',\r\n                          fontWeight: 500,\r\n                          mb: 0.5,\r\n                        }}>\r\n                          权限最小化\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.6)',\r\n                          lineHeight: 1.6,\r\n                        }}>\r\n                          严格遵循最小权限原则，仅申请必要的API权限，降低安全风险\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                    <Box sx={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center', \r\n                      gap: 2,\r\n                      p: 2.5,\r\n                      bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                      borderRadius: 2,\r\n                      transition: 'all 0.3s',\r\n                      '&:hover': {\r\n                        bgcolor: 'rgba(0, 255, 184, 0.08)',\r\n                        transform: 'translateY(-2px)',\r\n                      }\r\n                    }}>\r\n                      <VerifiedUserIcon sx={{ \r\n                        color: '#00FFB8',\r\n                        fontSize: '2rem',\r\n                      }} />\r\n                      <Box>\r\n                        <Typography variant=\"body1\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.8)',\r\n                          fontWeight: 500,\r\n                          mb: 0.5,\r\n                        }}>\r\n                          实时监控\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.6)',\r\n                          lineHeight: 1.6,\r\n                        }}>\r\n                          7×24小时实时监控API调用情况，及时发现并处理异常行为\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                </PandaCard>\r\n              </motion.div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title={\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                      <GppGoodIcon sx={{ color: '#00FFB8' }} />\r\n                      <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>交易安全</Typography>\r\n                    </Box>\r\n                  }\r\n                  gradient\r\n                  animation\r\n                >\r\n                  <Box sx={{ \r\n                    display: 'flex', \r\n                    flexDirection: 'column',\r\n                    gap: 2.5,\r\n                  }}>\r\n                    <Box sx={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center', \r\n                      gap: 2,\r\n                      p: 2.5,\r\n                      bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                      borderRadius: 2,\r\n                      transition: 'all 0.3s',\r\n                      '&:hover': {\r\n                        bgcolor: 'rgba(0, 255, 184, 0.08)',\r\n                        transform: 'translateY(-2px)',\r\n                      }\r\n                    }}>\r\n                      <VerifiedUserIcon sx={{ \r\n                        color: '#00FFB8',\r\n                        fontSize: '2rem',\r\n                      }} />\r\n                      <Box>\r\n                        <Typography variant=\"body1\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.8)',\r\n                          fontWeight: 500,\r\n                          mb: 0.5,\r\n                        }}>\r\n                          风控系统\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.6)',\r\n                          lineHeight: 1.6,\r\n                        }}>\r\n                          智能风控系统实时监控交易行为，防范异常交易，保障交易安全\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                    <Box sx={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center', \r\n                      gap: 2,\r\n                      p: 2.5,\r\n                      bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                      borderRadius: 2,\r\n                      transition: 'all 0.3s',\r\n                      '&:hover': {\r\n                        bgcolor: 'rgba(0, 255, 184, 0.08)',\r\n                        transform: 'translateY(-2px)',\r\n                      }\r\n                    }}>\r\n                      <LockIcon sx={{ \r\n                        color: '#00FFB8',\r\n                        fontSize: '2rem',\r\n                      }} />\r\n                      <Box>\r\n                        <Typography variant=\"body1\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.8)',\r\n                          fontWeight: 500,\r\n                          mb: 0.5,\r\n                        }}>\r\n                          交易限额\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.6)',\r\n                          lineHeight: 1.6,\r\n                        }}>\r\n                          根据用户等级设置交易限额，有效控制风险敞口，保障资金安全\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                    <Box sx={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center', \r\n                      gap: 2,\r\n                      p: 2.5,\r\n                      bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                      borderRadius: 2,\r\n                      transition: 'all 0.3s',\r\n                      '&:hover': {\r\n                        bgcolor: 'rgba(0, 255, 184, 0.08)',\r\n                        transform: 'translateY(-2px)',\r\n                      }\r\n                    }}>\r\n                      <SecurityIcon sx={{ \r\n                        color: '#00FFB8',\r\n                        fontSize: '2rem',\r\n                      }} />\r\n                      <Box>\r\n                        <Typography variant=\"body1\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.8)',\r\n                          fontWeight: 500,\r\n                          mb: 0.5,\r\n                        }}>\r\n                          交易确认\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.6)',\r\n                          lineHeight: 1.6,\r\n                        }}>\r\n                          大额交易需要二次确认，防止误操作，确保交易安全可靠\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                </PandaCard>\r\n              </motion.div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title={\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                      <ShieldIcon sx={{ color: '#00FFB8' }} />\r\n                      <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>系统安全</Typography>\r\n                    </Box>\r\n                  }\r\n                  gradient\r\n                  animation\r\n                >\r\n                  <Box sx={{ \r\n                    display: 'flex', \r\n                    flexDirection: 'column',\r\n                    gap: 2.5,\r\n                  }}>\r\n                    <Box sx={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center', \r\n                      gap: 2,\r\n                      p: 2.5,\r\n                      bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                      borderRadius: 2,\r\n                      transition: 'all 0.3s',\r\n                      '&:hover': {\r\n                        bgcolor: 'rgba(0, 255, 184, 0.08)',\r\n                        transform: 'translateY(-2px)',\r\n                      }\r\n                    }}>\r\n                      <ShieldIcon sx={{ \r\n                        color: '#00FFB8',\r\n                        fontSize: '2rem',\r\n                      }} />\r\n                      <Box>\r\n                        <Typography variant=\"body1\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.8)',\r\n                          fontWeight: 500,\r\n                          mb: 0.5,\r\n                        }}>\r\n                          数据加密\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.6)',\r\n                          lineHeight: 1.6,\r\n                        }}>\r\n                          采用AES-256加密算法，确保数据传输安全，防止信息泄露\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                    <Box sx={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center', \r\n                      gap: 2,\r\n                      p: 2.5,\r\n                      bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                      borderRadius: 2,\r\n                      transition: 'all 0.3s',\r\n                      '&:hover': {\r\n                        bgcolor: 'rgba(0, 255, 184, 0.08)',\r\n                        transform: 'translateY(-2px)',\r\n                      }\r\n                    }}>\r\n                      <SecurityUpdateGoodIcon sx={{ \r\n                        color: '#00FFB8',\r\n                        fontSize: '2rem',\r\n                      }} />\r\n                      <Box>\r\n                        <Typography variant=\"body1\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.8)',\r\n                          fontWeight: 500,\r\n                          mb: 0.5,\r\n                        }}>\r\n                          系统防护\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.6)',\r\n                          lineHeight: 1.6,\r\n                        }}>\r\n                          DDoS防护、WAF防火墙等多重防护措施，确保系统安全稳定运行\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                    <Box sx={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center', \r\n                      gap: 2,\r\n                      p: 2.5,\r\n                      bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                      borderRadius: 2,\r\n                      transition: 'all 0.3s',\r\n                      '&:hover': {\r\n                        bgcolor: 'rgba(0, 255, 184, 0.08)',\r\n                        transform: 'translateY(-2px)',\r\n                      }\r\n                    }}>\r\n                      <VerifiedUserIcon sx={{ \r\n                        color: '#00FFB8',\r\n                        fontSize: '2rem',\r\n                      }} />\r\n                      <Box>\r\n                        <Typography variant=\"body1\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.8)',\r\n                          fontWeight: 500,\r\n                          mb: 0.5,\r\n                        }}>\r\n                          安全审计\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.6)',\r\n                          lineHeight: 1.6,\r\n                        }}>\r\n                          定期进行安全审计和渗透测试，持续提升系统安全性\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                </PandaCard>\r\n              </motion.div>\r\n            </Grid>\r\n          </Grid>\r\n        </motion.div>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SecurityPage; ","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  FormControlLabel,\r\n  Switch,\r\n  Tabs,\r\n  Tab,\r\n  Container,\r\n} from '@mui/material';\r\nimport {\r\n  Person as PersonIcon,\r\n  Security as SecurityIcon,\r\n  Notifications as NotificationsIcon,\r\n  Language as LanguageIcon,\r\n} from '@mui/icons-material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { motion } from 'framer-motion';\r\nimport PandaCard from '../components/common/PandaCard';\r\nimport PandaButton from '../components/common/PandaButton';\r\nimport PandaAlert from '../components/common/PandaAlert';\r\nimport { fadeIn, slideUp, staggerChildren } from '../animations';\r\nimport Layout from '../components/Layout';\r\n\r\ninterface UserProfile {\r\n  email: string;\r\n  name: string;\r\n  phone: string;\r\n  language: string;\r\n  timezone: string;\r\n}\r\n\r\ninterface SecuritySettings {\r\n  twoFactorEnabled: boolean;\r\n  emailNotifications: boolean;\r\n  smsNotifications: boolean;\r\n  apiKey: string;\r\n}\r\n\r\ninterface UserSettings {\r\n  language: string;\r\n  theme: string;\r\n  notifications: {\r\n    email: boolean;\r\n    push: boolean;\r\n    trade: boolean;\r\n  };\r\n  security: {\r\n    twoFactor: boolean;\r\n    sessionTimeout: number;\r\n  };\r\n}\r\n\r\ntype SettingsCategory = 'notifications' | 'security';\r\n\r\nconst AccountSettings: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [profile, setProfile] = useState<UserProfile>({\r\n    email: '',\r\n    name: '',\r\n    phone: '',\r\n    language: 'en',\r\n    timezone: 'UTC',\r\n  });\r\n  const [security, setSecurity] = useState<SecuritySettings>({\r\n    twoFactorEnabled: false,\r\n    emailNotifications: true,\r\n    smsNotifications: false,\r\n    apiKey: '',\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);\r\n  const [settings, setSettings] = useState<UserSettings>({\r\n    language: 'en',\r\n    theme: 'light',\r\n    notifications: {\r\n      email: true,\r\n      push: true,\r\n      trade: true,\r\n    },\r\n    security: {\r\n      twoFactor: false,\r\n      sessionTimeout: 30,\r\n    },\r\n  });\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' as 'success' | 'error' });\r\n\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setActiveTab(newValue);\r\n  };\r\n\r\n  const handleProfileChange = (field: keyof UserProfile) => (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setProfile({ ...profile, [field]: event.target.value });\r\n  };\r\n\r\n  const handleSecurityChange = (field: keyof SecuritySettings) => (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setSecurity({\r\n      ...security,\r\n      [field]: event.target.checked,\r\n    });\r\n  };\r\n\r\n  const handleSaveProfile = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      // TODO: Call API to save profile\r\n      setSuccess(t('accountSettings.profileSaved'));\r\n      setTimeout(() => setSuccess(''), 3000);\r\n    } catch (err) {\r\n      setError(t('accountSettings.errorSavingProfile'));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSaveSecurity = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      // TODO: Call API to save security settings\r\n      setSuccess(t('accountSettings.securitySaved'));\r\n      setTimeout(() => setSuccess(''), 3000);\r\n    } catch (err) {\r\n      setError(t('accountSettings.errorSavingSecurity'));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteAccount = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      // TODO: Call API to delete account\r\n      setIsDeleteDialogOpen(false);\r\n      // TODO: Redirect to login page\r\n    } catch (err) {\r\n      setError(t('accountSettings.errorDeletingAccount'));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSettingChange = (category: SettingsCategory, field: string, value: any) => {\r\n    setSettings(prev => {\r\n      const newSettings = { ...prev };\r\n      if (category === 'notifications') {\r\n        newSettings.notifications = {\r\n          ...prev.notifications,\r\n          [field]: value,\r\n        };\r\n      } else if (category === 'security') {\r\n        newSettings.security = {\r\n          ...prev.security,\r\n          [field]: value,\r\n        };\r\n      }\r\n      return newSettings;\r\n    });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // TODO: Implement save functionality\r\n    setSnackbar({\r\n      open: true,\r\n      message: t('accountSettings.saved'),\r\n      severity: 'success',\r\n    });\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Box\r\n        sx={{\r\n          minHeight: '100vh',\r\n          background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.03) 0%, rgba(0, 0, 0, 0) 100%)',\r\n          py: 4,\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <motion.div\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            variants={staggerChildren}\r\n          >\r\n            <motion.div variants={fadeIn}>\r\n              <Typography\r\n                variant=\"h2\"\r\n                sx={{\r\n                  color: '#00FFB8',\r\n                  fontWeight: 700,\r\n                  mb: 2,\r\n                  fontSize: { xs: '2rem', md: '2.5rem' },\r\n                  fontFamily: '\"PingFang SC\", \"Microsoft YaHei\", sans-serif',\r\n                }}\r\n              >\r\n                {t('accountSettings.title')}\r\n              </Typography>\r\n            </motion.div>\r\n\r\n            {error && (\r\n              <PandaAlert severity=\"error\" sx={{ mb: 2 }}>\r\n                {error}\r\n              </PandaAlert>\r\n            )}\r\n\r\n            {success && (\r\n              <PandaAlert severity=\"success\" sx={{ mb: 2 }}>\r\n                {success}\r\n              </PandaAlert>\r\n            )}\r\n\r\n            <Tabs\r\n              value={activeTab}\r\n              onChange={handleTabChange}\r\n              sx={{\r\n                mb: 3,\r\n                '& .MuiTab-root': {\r\n                  color: '#00FFB8',\r\n                  '&.Mui-selected': {\r\n                    color: '#00FFB8',\r\n                  },\r\n                },\r\n              }}\r\n            >\r\n              <Tab icon={<PersonIcon />} label={t('accountSettings.profile')} />\r\n              <Tab icon={<SecurityIcon />} label={t('accountSettings.security')} />\r\n              <Tab icon={<NotificationsIcon />} label={t('accountSettings.notifications')} />\r\n              <Tab icon={<LanguageIcon />} label={t('accountSettings.preferences')} />\r\n            </Tabs>\r\n\r\n            {activeTab === 0 && (\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title={t('accountSettings.profile')}\r\n                  gradient\r\n                  animation\r\n                >\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs={12} md={6}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label={t('accountSettings.name')}\r\n                        value={profile.name}\r\n                        onChange={handleProfileChange('name')}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label={t('accountSettings.email')}\r\n                        value={profile.email}\r\n                        onChange={handleProfileChange('email')}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label={t('accountSettings.phone')}\r\n                        value={profile.phone}\r\n                        onChange={handleProfileChange('phone')}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label={t('accountSettings.timezone')}\r\n                        value={profile.timezone}\r\n                        onChange={handleProfileChange('timezone')}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n                    <PandaButton\r\n                      variant=\"contained\"\r\n                      onClick={handleSaveProfile}\r\n                      disabled={isLoading}\r\n                    >\r\n                      {t('common.save')}\r\n                    </PandaButton>\r\n                  </Box>\r\n                </PandaCard>\r\n              </motion.div>\r\n            )}\r\n\r\n            {activeTab === 1 && (\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title={t('accountSettings.security')}\r\n                  gradient\r\n                  animation\r\n                >\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={security.twoFactorEnabled}\r\n                            onChange={handleSecurityChange('twoFactorEnabled')}\r\n                          />\r\n                        }\r\n                        label={t('accountSettings.twoFactorAuth')}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label={t('accountSettings.apiKey')}\r\n                        value={security.apiKey}\r\n                        disabled\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n                    <PandaButton\r\n                      variant=\"contained\"\r\n                      onClick={handleSaveSecurity}\r\n                      disabled={isLoading}\r\n                    >\r\n                      {t('common.save')}\r\n                    </PandaButton>\r\n                  </Box>\r\n                </PandaCard>\r\n              </motion.div>\r\n            )}\r\n\r\n            {activeTab === 2 && (\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  title={t('accountSettings.notifications')}\r\n                  gradient\r\n                  animation\r\n                >\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={security.emailNotifications}\r\n                            onChange={handleSecurityChange('emailNotifications')}\r\n                          />\r\n                        }\r\n                        label={t('accountSettings.emailNotifications')}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Switch\r\n                            checked={security.smsNotifications}\r\n                            onChange={handleSecurityChange('smsNotifications')}\r\n                          />\r\n                        }\r\n                        label={t('accountSettings.smsNotifications')}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n                    <PandaButton\r\n                      variant=\"contained\"\r\n                      onClick={handleSave}\r\n                      disabled={isLoading}\r\n                    >\r\n                      {t('common.save')}\r\n                    </PandaButton>\r\n                  </Box>\r\n                </PandaCard>\r\n              </motion.div>\r\n            )}\r\n          </motion.div>\r\n        </Container>\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AccountSettings; ","import React from 'react';\r\nimport { Card, CardProps, useTheme } from '@mui/material';\r\n\r\nexport const StyledCard: React.FC<CardProps> = ({ children, ...props }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card\r\n      {...props}\r\n      sx={{\r\n        background: `linear-gradient(135deg, ${theme.palette.background.paper} 0%, ${theme.palette.background.default} 100%)`,\r\n        borderRadius: 2,\r\n        boxShadow: theme.shadows[10],\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        '&::before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          height: '4px',\r\n          background: `linear-gradient(90deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`\r\n        },\r\n        ...props.sx\r\n      }}\r\n    >\r\n      {children}\r\n    </Card>\r\n  );\r\n}; ","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { StyledCard } from '../components/common/StyledCard';\r\nimport { GradientTitle } from '../components/common/GradientTitle';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Avatar,\r\n  CardContent,\r\n  IconButton,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport {\r\n  Edit as EditIcon,\r\n  Save as SaveIcon,\r\n  Cancel as CancelIcon,\r\n} from '@mui/icons-material';\r\nimport { motion } from 'framer-motion';\r\nimport { fadeIn, slideUp, staggerChildren } from '../animations';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Profile = () => {\r\n  const { t } = useTranslation();\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const { user, updateProfile } = useAuth();\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    username: user?.username || '',\r\n    email: user?.email || '',\r\n    bio: user?.bio || '',\r\n  });\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEditing(false);\r\n    setFormData({\r\n      username: user?.username || '',\r\n      email: user?.email || '',\r\n      bio: user?.bio || '',\r\n    });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      await updateProfile(formData);\r\n      setIsEditing(false);\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial=\"initial\"\r\n      animate=\"animate\"\r\n      variants={staggerChildren}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ mt: 4, mb: 4 }}>\r\n          <motion.div variants={fadeIn}>\r\n            <GradientTitle variant=\"h4\" gutterBottom>\r\n              {t('profile.title')}\r\n            </GradientTitle>\r\n          </motion.div>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={4}>\r\n              <motion.div variants={slideUp}>\r\n                <StyledCard>\r\n                  <CardContent sx={{ textAlign: 'center' }}>\r\n                    <Avatar\r\n                      sx={{\r\n                        width: 120,\r\n                        height: 120,\r\n                        margin: '0 auto 16px',\r\n                        border: `4px solid ${theme.palette.primary.main}`,\r\n                      }}\r\n                      src={user?.avatar}\r\n                    />\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      {user?.username}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {user?.email}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </StyledCard>\r\n              </motion.div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={8}>\r\n              <motion.div variants={slideUp}>\r\n                <StyledCard>\r\n                  <CardContent>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n                      <Typography variant=\"h6\">\r\n                        {t('profile.personalInfo')}\r\n                      </Typography>\r\n                      {!isEditing ? (\r\n                        <IconButton onClick={handleEdit} color=\"primary\">\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      ) : (\r\n                        <Box>\r\n                          <IconButton onClick={handleSave} color=\"primary\" sx={{ mr: 1 }}>\r\n                            <SaveIcon />\r\n                          </IconButton>\r\n                          <IconButton onClick={handleCancel} color=\"error\">\r\n                            <CancelIcon />\r\n                          </IconButton>\r\n                        </Box>\r\n                      )}\r\n                    </Box>\r\n\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          label={t('profile.username')}\r\n                          name=\"username\"\r\n                          value={formData.username}\r\n                          onChange={handleChange}\r\n                          disabled={!isEditing}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          label={t('profile.email')}\r\n                          name=\"email\"\r\n                          value={formData.email}\r\n                          onChange={handleChange}\r\n                          disabled={!isEditing}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          fullWidth\r\n                          label={t('profile.bio')}\r\n                          name=\"bio\"\r\n                          value={formData.bio}\r\n                          onChange={handleChange}\r\n                          disabled={!isEditing}\r\n                          multiline\r\n                          rows={4}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                </StyledCard>\r\n              </motion.div>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Profile; ","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Alert,\r\n  CircularProgress,\r\n} from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport QRCode from 'qrcode.react';\r\n\r\nconst TwoFactorAuth: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const [isEnabled, setIsEnabled] = useState(false);\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [secret, setSecret] = useState('');\r\n\r\n  const handleEnable2FA = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      // TODO: Call API to generate 2FA secret\r\n      const response = await fetch('/api/user/generate-2fa-secret');\r\n      const data = await response.json();\r\n      setSecret(data.secret);\r\n      setIsEnabled(true);\r\n    } catch (err) {\r\n      setError(t('twoFactorAuth.errorGeneratingSecret'));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleVerify2FA = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      // TODO: Call API to verify 2FA code\r\n      await fetch('/api/user/verify-2fa', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ code: verificationCode }),\r\n      });\r\n      setIsEnabled(true);\r\n      setError('');\r\n    } catch (err) {\r\n      setError(t('twoFactorAuth.invalidCode'));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDisable2FA = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      // TODO: Call API to disable 2FA\r\n      await fetch('/api/user/disable-2fa', {\r\n        method: 'POST',\r\n      });\r\n      setIsEnabled(false);\r\n      setSecret('');\r\n      setError('');\r\n    } catch (err) {\r\n      setError(t('twoFactorAuth.errorDisabling'));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        {t('twoFactorAuth.title')}\r\n      </Typography>\r\n\r\n      <Card sx={{ maxWidth: 600, mx: 'auto' }}>\r\n        <CardContent>\r\n          {error && (\r\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n\r\n          {!isEnabled ? (\r\n            <Box>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                {t('twoFactorAuth.description')}\r\n              </Typography>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={handleEnable2FA}\r\n                disabled={isLoading}\r\n                sx={{ mt: 2 }}\r\n              >\r\n                {isLoading ? (\r\n                  <CircularProgress size={24} />\r\n                ) : (\r\n                  t('twoFactorAuth.enable')\r\n                )}\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <Box>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                {t('twoFactorAuth.scanQR')}\r\n              </Typography>\r\n              {secret && (\r\n                <Box sx={{ textAlign: 'center', my: 2 }}>\r\n                  <QRCode value={`otpauth://totp/YourApp:user@example.com?secret=${secret}&issuer=YourApp`} />\r\n                </Box>\r\n              )}\r\n              <Grid container spacing={2} sx={{ mt: 2 }}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label={t('twoFactorAuth.verificationCode')}\r\n                    value={verificationCode}\r\n                    onChange={(e) => setVerificationCode(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={handleVerify2FA}\r\n                    disabled={isLoading}\r\n                    sx={{ mr: 2 }}\r\n                  >\r\n                    {isLoading ? (\r\n                      <CircularProgress size={24} />\r\n                    ) : (\r\n                      t('twoFactorAuth.verify')\r\n                    )}\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    onClick={handleDisable2FA}\r\n                    disabled={isLoading}\r\n                  >\r\n                    {t('twoFactorAuth.disable')}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TwoFactorAuth; ","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Alert,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst DepositConfirm: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [amount, setAmount] = useState<string>('');\r\n  const [chain, setChain] = useState<string>('BSC');\r\n  const [txHash, setTxHash] = useState<string>('');\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>('');\r\n  const [success, setSuccess] = useState<string>('');\r\n  const { t } = useTranslation();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      const userId = localStorage.getItem('userId');\r\n      if (!userId) {\r\n        throw new Error('User not authenticated');\r\n      }\r\n\r\n      await axios.post(`/api/asset/deposits/${userId}/confirm`, {\r\n        amount: parseFloat(amount),\r\n        chain,\r\n        txHash\r\n      });\r\n\r\n      setSuccess('Deposit confirmed successfully!');\r\n      setTimeout(() => {\r\n        navigate('/asset-center');\r\n      }, 2000);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to confirm deposit');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ mt: 4 }}>\r\n      <Paper elevation={3} sx={{ p: 4 }}>\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n          确认充值\r\n        </Typography>\r\n\r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n\r\n        {success && (\r\n          <Alert severity=\"success\" sx={{ mb: 2 }}>\r\n            {success}\r\n          </Alert>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label={t('deposit.amount')}\r\n                type=\"number\"\r\n                value={amount}\r\n                onChange={(e) => setAmount(e.target.value)}\r\n                required\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>{t('deposit.selectChain')}</InputLabel>\r\n                <Select\r\n                  value={chain}\r\n                  label={t('deposit.selectChain')}\r\n                  onChange={(e) => setChain(e.target.value)}\r\n                  required\r\n                >\r\n                  <MenuItem value=\"BSC\">BSC</MenuItem>\r\n                  <MenuItem value=\"ARB\">Arbitrum</MenuItem>\r\n                  <MenuItem value=\"TRC\">TRON</MenuItem>\r\n                  <MenuItem value=\"OP\">Optimism</MenuItem>\r\n                  <MenuItem value=\"SOL\">Solana</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label={t('deposit.txHash')}\r\n                value={txHash}\r\n                onChange={(e) => setTxHash(e.target.value)}\r\n                required\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                disabled={loading}\r\n              >\r\n                {loading ? <CircularProgress size={24} /> : '确认充值'}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DepositConfirm; ","import React, { ChangeEvent } from 'react';\r\nimport { TextField, TextFieldProps, InputAdornment } from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nexport interface PandaInputProps extends Omit<TextFieldProps, 'variant' | 'onChange'> {\r\n  label?: string;\r\n  value: string | number;\r\n  onChange: (value: string) => void;\r\n  error?: boolean;\r\n  helperText?: string;\r\n  fullWidth?: boolean;\r\n  required?: boolean;\r\n  disabled?: boolean;\r\n  readOnly?: boolean;\r\n  type?: string;\r\n  placeholder?: string;\r\n  startIcon?: React.ReactNode;\r\n  endIcon?: React.ReactNode;\r\n  icon?: React.ReactNode;\r\n  sx?: any;\r\n  animate?: boolean;\r\n}\r\n\r\nconst PandaInput: React.FC<PandaInputProps> = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  error,\r\n  helperText,\r\n  fullWidth = true,\r\n  required = false,\r\n  disabled = false,\r\n  readOnly = false,\r\n  type = 'text',\r\n  placeholder,\r\n  startIcon,\r\n  endIcon,\r\n  icon,\r\n  sx,\r\n  animate = true,\r\n  ...props\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  const input = (\r\n    <TextField\r\n      variant=\"outlined\"\r\n      label={label}\r\n      value={value}\r\n      onChange={handleChange}\r\n      error={error}\r\n      helperText={helperText}\r\n      fullWidth={fullWidth}\r\n      required={required}\r\n      disabled={disabled}\r\n      type={type}\r\n      placeholder={placeholder}\r\n      InputProps={{\r\n        readOnly,\r\n        startAdornment: startIcon || icon ? (\r\n          <InputAdornment position=\"start\">{startIcon || icon}</InputAdornment>\r\n        ) : undefined,\r\n        endAdornment: endIcon ? (\r\n          <InputAdornment position=\"end\">{endIcon}</InputAdornment>\r\n        ) : undefined,\r\n        sx: {\r\n          height: 48,\r\n          borderRadius: '8px',\r\n          backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n          '&:hover': {\r\n            backgroundColor: 'rgba(255, 255, 255, 0.95)',\r\n          },\r\n          '&.Mui-focused': {\r\n            backgroundColor: 'rgba(255, 255, 255, 1)',\r\n          },\r\n          '& input': {\r\n            color: '#333333',\r\n            '&::placeholder': {\r\n              color: '#666666',\r\n            },\r\n          },\r\n        },\r\n      }}\r\n      sx={{\r\n        '& .MuiOutlinedInput-root': {\r\n          '& fieldset': {\r\n            borderColor: theme.palette.divider,\r\n            borderRadius: '8px',\r\n          },\r\n          '&:hover fieldset': {\r\n            borderColor: theme.palette.primary.main,\r\n          },\r\n          '&.Mui-focused fieldset': {\r\n            borderColor: theme.palette.primary.main,\r\n          },\r\n        },\r\n        '& .MuiInputLabel-root': {\r\n          color: theme.palette.text.secondary,\r\n          '&.Mui-focused': {\r\n            color: theme.palette.primary.main,\r\n          },\r\n        },\r\n        '& .MuiInputBase-input': {\r\n          padding: '12px 16px',\r\n          fontSize: '0.95rem',\r\n          color: '#333333',\r\n          '&:focus': {\r\n            color: '#333333',\r\n          },\r\n        },\r\n        ...sx,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n\r\n  if (!animate) {\r\n    return input;\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: -10 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.3 }}\r\n    >\r\n      {input}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default PandaInput; ","import React from 'react';\r\nimport {\r\n  Select,\r\n  SelectProps,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport { themeUtils } from '../../theme';\r\n\r\nexport interface Option {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\nexport interface PandaSelectProps extends Omit<SelectProps, 'onChange'> {\r\n  label?: string;\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  options: Option[];\r\n  fullWidth?: boolean;\r\n  required?: boolean;\r\n  disabled?: boolean;\r\n  error?: boolean;\r\n  helperText?: string;\r\n  animate?: boolean;\r\n  placeholder?: string;\r\n  size?: 'small' | 'medium';\r\n  glow?: boolean;\r\n  startIcon?: React.ReactNode;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst PandaSelect: React.FC<PandaSelectProps> = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  options,\r\n  fullWidth = true,\r\n  required = false,\r\n  disabled = false,\r\n  error = false,\r\n  helperText,\r\n  animate = true,\r\n  placeholder,\r\n  size = 'medium',\r\n  glow = false,\r\n  startIcon,\r\n  children,\r\n  ...props\r\n}) => {\r\n  const theme = useTheme();\r\n\r\n  const getSelectStyle = () => {\r\n    const baseStyle = {\r\n      '& .MuiOutlinedInput-root': {\r\n        background: themeUtils.createGradient(\r\n          theme.palette.background.paper,\r\n          theme.palette.background.default\r\n        ),\r\n        borderRadius: theme.shape.borderRadius,\r\n        transition: 'all 0.3s ease',\r\n        '&:hover': {\r\n          '& .MuiOutlinedInput-notchedOutline': {\r\n            borderColor: theme.palette.primary.main,\r\n          },\r\n        },\r\n        '&.Mui-focused': {\r\n          '& .MuiOutlinedInput-notchedOutline': {\r\n            borderColor: theme.palette.primary.main,\r\n            borderWidth: 2,\r\n          },\r\n        },\r\n        '&.Mui-error': {\r\n          '& .MuiOutlinedInput-notchedOutline': {\r\n            borderColor: theme.palette.error.main,\r\n          },\r\n        },\r\n      },\r\n      '& .MuiSelect-select': {\r\n        padding: size === 'small' ? theme.spacing(1, 2) : theme.spacing(1.5, 2),\r\n      },\r\n      '& .MuiInputLabel-root': {\r\n        color: theme.palette.text.secondary,\r\n        '&.Mui-focused': {\r\n          color: theme.palette.primary.main,\r\n        },\r\n        '&.Mui-error': {\r\n          color: theme.palette.error.main,\r\n        },\r\n      },\r\n      '& .MuiMenuItem-root': {\r\n        padding: theme.spacing(1.5, 2),\r\n        transition: 'all 0.2s ease',\r\n        '&:hover': {\r\n          background: themeUtils.createGradient(\r\n            theme.palette.primary.main,\r\n            theme.palette.primary.dark\r\n          ),\r\n          color: theme.palette.primary.contrastText,\r\n        },\r\n      },\r\n    };\r\n\r\n    if (glow) {\r\n      return {\r\n        ...baseStyle,\r\n        '& .MuiOutlinedInput-root': {\r\n          ...baseStyle['& .MuiOutlinedInput-root'],\r\n          boxShadow: `0 0 20px ${theme.palette.primary.main}20`,\r\n        },\r\n      };\r\n    }\r\n\r\n    return baseStyle;\r\n  };\r\n\r\n  const select = (\r\n    <FormControl\r\n      fullWidth={fullWidth}\r\n      required={required}\r\n      disabled={disabled}\r\n      error={error}\r\n      sx={getSelectStyle()}\r\n    >\r\n      {label && <InputLabel>{label}</InputLabel>}\r\n      <Select\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value as string)}\r\n        label={label}\r\n        placeholder={placeholder}\r\n        MenuProps={{\r\n          PaperProps: {\r\n            sx: {\r\n              background: themeUtils.createGradient(\r\n                theme.palette.background.paper,\r\n                theme.palette.background.default\r\n              ),\r\n              boxShadow: theme.shadows[24],\r\n              borderRadius: theme.shape.borderRadius * 2,\r\n              '& .MuiMenuItem-root': {\r\n                padding: theme.spacing(1.5, 2),\r\n                transition: 'all 0.2s ease',\r\n                '&:hover': {\r\n                  background: themeUtils.createGradient(\r\n                    theme.palette.primary.main,\r\n                    theme.palette.primary.dark\r\n                  ),\r\n                  color: theme.palette.primary.contrastText,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        {options.map((option) => (\r\n          <MenuItem\r\n            key={option.value}\r\n            value={option.value}\r\n            disabled={option.disabled}\r\n          >\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      {helperText && (\r\n        <Typography\r\n          variant=\"caption\"\r\n          color={error ? 'error' : 'text.secondary'}\r\n          sx={{ mt: 1 }}\r\n        >\r\n          {helperText}\r\n        </Typography>\r\n      )}\r\n    </FormControl>\r\n  );\r\n\r\n  if (!animate) {\r\n    return select;\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: -10 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.3 }}\r\n    >\r\n      {select}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default PandaSelect; ","import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Grid } from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { themeUtils } from '../theme';\r\nimport { Info as InfoIcon } from '@mui/icons-material';\r\nimport PandaCard from '../components/common/PandaCard';\r\nimport PandaButton from '../components/common/PandaButton';\r\nimport PandaInput from '../components/common/PandaInput';\r\nimport PandaSelect from '../components/common/PandaSelect';\r\nimport PandaAlert from '../components/common/PandaAlert';\r\nimport PandaProgress from '../components/common/PandaProgress';\r\nimport PandaDialog from '../components/common/PandaDialog';\r\nimport PandaTable from '../components/common/PandaTable';\r\nimport Layout from '../components/Layout';\r\n\r\ninterface WithdrawalRecord {\r\n  id: string;\r\n  amount: number;\r\n  chain: string;\r\n  address: string;\r\n  status: 'pending' | 'approved' | 'rejected';\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\ninterface ChainInfo {\r\n  name: string;\r\n  minAmount: number;\r\n  fee: number;\r\n  feeDescription: string;\r\n}\r\n\r\nconst CHAINS: ChainInfo[] = [\r\n  {\r\n    name: 'BSC',\r\n    minAmount: 10,\r\n    fee: 0.1,\r\n    feeDescription: 'BSC网络手续费约为0.1 USDT',\r\n  },\r\n  {\r\n    name: 'TRC',\r\n    minAmount: 10,\r\n    fee: 1,\r\n    feeDescription: 'TRC网络手续费约为1 USDT',\r\n  },\r\n  {\r\n    name: 'ARB',\r\n    minAmount: 20,\r\n    fee: 0.5,\r\n    feeDescription: 'ARB网络手续费约为0.5 USDT',\r\n  },\r\n];\r\n\r\nconst fadeInUp = {\r\n  initial: { opacity: 0, y: 20 },\r\n  animate: { opacity: 1, y: 0 },\r\n  transition: { duration: 0.5 }\r\n};\r\n\r\nconst Withdraw: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const { isAuthenticated } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<string | null>(null);\r\n  const [amount, setAmount] = useState('');\r\n  const [chain, setChain] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [records, setRecords] = useState<WithdrawalRecord[]>([]);\r\n  const [showFeeDialog, setShowFeeDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      fetchWithdrawalRecords();\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  const fetchWithdrawalRecords = async () => {\r\n    try {\r\n      const response = await fetch('/api/user/withdrawal-records', {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(t('withdraw.errors.fetchFailed'));\r\n      }\r\n\r\n      const data = await response.json();\r\n      setRecords(data);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : t('withdraw.errors.fetchFailed'));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    setSuccess(null);\r\n\r\n    try {\r\n      const response = await fetch('/api/withdrawal', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n        body: JSON.stringify({\r\n          amount: parseFloat(amount),\r\n          chain,\r\n          address,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(t('withdraw.errors.submitFailed'));\r\n      }\r\n\r\n      setSuccess(t('withdraw.success'));\r\n      setAmount('');\r\n      setChain('');\r\n      setAddress('');\r\n      fetchWithdrawalRecords();\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : t('withdraw.errors.submitFailed'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return 'warning';\r\n      case 'approved':\r\n        return 'success';\r\n      case 'rejected':\r\n        return 'error';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return t('withdraw.status.pending');\r\n      case 'approved':\r\n        return t('withdraw.status.approved');\r\n      case 'rejected':\r\n        return t('withdraw.status.rejected');\r\n      default:\r\n        return status;\r\n    }\r\n  };\r\n\r\n  const selectedChain = CHAINS.find(c => c.name === chain);\r\n\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <Layout>\r\n        <Box sx={{ p: 3 }}>\r\n          <PandaAlert severity=\"warning\">{t('withdraw.authRequired')}</PandaAlert>\r\n        </Box>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Box\r\n        sx={{\r\n          minHeight: '100vh',\r\n          pt: 8,\r\n          pb: 4,\r\n          background: themeUtils.createGradient('background.default', 'background.paper'),\r\n          position: 'relative',\r\n          '&::before': {\r\n            content: '\"\"',\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            background: 'url(\"/background-pattern.png\")',\r\n            opacity: 0.1,\r\n            zIndex: 0,\r\n          },\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            maxWidth: 'lg',\r\n            mx: 'auto',\r\n            px: 3,\r\n          }}\r\n        >\r\n          <motion.div {...fadeInUp}>\r\n            <Typography\r\n              variant=\"h2\"\r\n              sx={{\r\n                mb: 6,\r\n                fontWeight: 700,\r\n                background: themeUtils.createGradient('primary'),\r\n                WebkitBackgroundClip: 'text',\r\n                WebkitTextFillColor: 'transparent',\r\n                textAlign: 'center',\r\n                fontSize: { xs: '2.5rem', md: '3rem' },\r\n              }}\r\n            >\r\n              {t('withdraw.title')}\r\n            </Typography>\r\n\r\n            <Grid container spacing={4}>\r\n              <Grid item xs={12} md={6}>\r\n                <motion.div\r\n                  whileHover={{ scale: 1.02 }}\r\n                  transition={{ duration: 0.3 }}\r\n                >\r\n                  <PandaCard\r\n                    sx={{\r\n                      height: '100%',\r\n                      p: 4,\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      sx={{\r\n                        mb: 2,\r\n                        fontWeight: 600,\r\n                        color: 'primary.main',\r\n                      }}\r\n                    >\r\n                      {t('withdraw.form.title')}\r\n                    </Typography>\r\n\r\n                    {error && (\r\n                      <PandaAlert severity=\"error\" sx={{ mb: 3 }}>\r\n                        {error}\r\n                      </PandaAlert>\r\n                    )}\r\n\r\n                    {success && (\r\n                      <PandaAlert severity=\"success\" sx={{ mb: 3 }}>\r\n                        {success}\r\n                      </PandaAlert>\r\n                    )}\r\n\r\n                    <Box component=\"form\" onSubmit={handleSubmit}>\r\n                      <PandaInput\r\n                        fullWidth\r\n                        label={t('withdraw.form.amount')}\r\n                        type=\"number\"\r\n                        value={amount}\r\n                        onChange={(e) => setAmount(e.target.value)}\r\n                        required\r\n                        sx={{ mb: 3 }}\r\n                      />\r\n\r\n                      <PandaSelect\r\n                        fullWidth\r\n                        label={t('withdraw.form.chain')}\r\n                        value={chain}\r\n                        onChange={(e) => setChain(e.target.value)}\r\n                        required\r\n                        sx={{ mb: 3 }}\r\n                      >\r\n                        {CHAINS.map((chain) => (\r\n                          <option key={chain.name} value={chain.name}>\r\n                            {chain.name}\r\n                          </option>\r\n                        ))}\r\n                      </PandaSelect>\r\n\r\n                      <PandaInput\r\n                        fullWidth\r\n                        label={t('withdraw.form.address')}\r\n                        value={address}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                        required\r\n                        sx={{ mb: 3 }}\r\n                      />\r\n\r\n                      {selectedChain && (\r\n                        <Box sx={{ mb: 3 }}>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {t('withdraw.form.minAmount')}: {selectedChain.minAmount} USDT\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {selectedChain.feeDescription}\r\n                          </Typography>\r\n                        </Box>\r\n                      )}\r\n\r\n                      <PandaButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        fullWidth\r\n                        disabled={loading}\r\n                        animate\r\n                        glow\r\n                      >\r\n                        {loading ? <PandaProgress size={24} /> : t('withdraw.form.submit')}\r\n                      </PandaButton>\r\n                    </Box>\r\n                  </PandaCard>\r\n                </motion.div>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <motion.div\r\n                  whileHover={{ scale: 1.02 }}\r\n                  transition={{ duration: 0.3 }}\r\n                >\r\n                  <PandaCard\r\n                    sx={{\r\n                      height: '100%',\r\n                      p: 4,\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      sx={{\r\n                        mb: 2,\r\n                        fontWeight: 600,\r\n                        color: 'primary.main',\r\n                      }}\r\n                    >\r\n                      {t('withdraw.records.title')}\r\n                    </Typography>\r\n\r\n                    <PandaTable>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>{t('withdraw.records.amount')}</th>\r\n                          <th>{t('withdraw.records.chain')}</th>\r\n                          <th>{t('withdraw.records.status')}</th>\r\n                          <th>{t('withdraw.records.date')}</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {records.map((record) => (\r\n                          <tr key={record.id}>\r\n                            <td>{record.amount} USDT</td>\r\n                            <td>{record.chain}</td>\r\n                            <td>\r\n                              <PandaAlert severity={getStatusColor(record.status)}>\r\n                                {getStatusText(record.status)}\r\n                              </PandaAlert>\r\n                            </td>\r\n                            <td>{new Date(record.createdAt).toLocaleDateString()}</td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </PandaTable>\r\n                  </PandaCard>\r\n                </motion.div>\r\n              </Grid>\r\n            </Grid>\r\n          </motion.div>\r\n        </Box>\r\n      </Box>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Withdraw; ","import React, { createContext, useContext, ReactNode, useState, useEffect, useCallback } from 'react';\r\n\r\ninterface WebSocketContextType {\r\n  isConnected: boolean;\r\n  sendMessage: (message: string) => void;\r\n  lastMessage: string | null;\r\n}\r\n\r\nconst WebSocketContext = createContext<WebSocketContextType | null>(null);\r\n\r\nexport const useWebSocket = () => {\r\n  const context = useContext(WebSocketContext);\r\n  if (!context) {\r\n    throw new Error('useWebSocket must be used within a WebSocketProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface WebSocketProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const WebSocketProvider: React.FC<WebSocketProviderProps> = ({ children }) => {\r\n  const [socket, setSocket] = useState<WebSocket | null>(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [lastMessage, setLastMessage] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const wsUrl = import.meta.env.VITE_WS_URL || 'ws://localhost:3001';\r\n    const ws = new WebSocket(wsUrl);\r\n\r\n    ws.onopen = () => {\r\n      console.log('WebSocket connected');\r\n      setIsConnected(true);\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      console.log('WebSocket disconnected');\r\n      setIsConnected(false);\r\n    };\r\n\r\n    ws.onmessage = (event) => {\r\n      console.log('WebSocket message received:', event.data);\r\n      setLastMessage(event.data);\r\n    };\r\n\r\n    ws.onerror = (error) => {\r\n      console.error('WebSocket error:', error);\r\n    };\r\n\r\n    setSocket(ws);\r\n\r\n    return () => {\r\n      ws.close();\r\n    };\r\n  }, []);\r\n\r\n  const sendMessage = useCallback((message: string) => {\r\n    if (socket && isConnected) {\r\n      socket.send(message);\r\n    } else {\r\n      console.warn('WebSocket is not connected');\r\n    }\r\n  }, [socket, isConnected]);\r\n\r\n  const value = {\r\n    isConnected,\r\n    sendMessage,\r\n    lastMessage,\r\n  };\r\n\r\n  return (\r\n    <WebSocketContext.Provider value={value}>\r\n      {children}\r\n    </WebSocketContext.Provider>\r\n  );\r\n}; ","import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, List, ListItem, ListItemText } from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useWebSocket } from '../contexts/WebSocketContext';\r\n\r\ninterface Message {\r\n  id: string;\r\n  title: string;\r\n  content: string;\r\n  timestamp: string;\r\n  read: boolean;\r\n}\r\n\r\nconst MessageCenter: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const { lastMessage } = useWebSocket();\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (lastMessage) {\r\n      try {\r\n        const newMessage = JSON.parse(lastMessage) as Message;\r\n        setMessages(prev => [newMessage, ...prev]);\r\n      } catch (error) {\r\n        console.error('Error parsing message:', error);\r\n      }\r\n    }\r\n  }, [lastMessage]);\r\n\r\n  return (\r\n    <Box sx={{ p: 2 }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        {t('messageCenter.title')}\r\n      </Typography>\r\n      <List>\r\n        {messages.map((message) => (\r\n          <ListItem\r\n            key={message.id}\r\n            sx={{\r\n              bgcolor: message.read ? 'background.paper' : 'action.hover',\r\n              mb: 1,\r\n              borderRadius: 1,\r\n            }}\r\n          >\r\n            <ListItemText\r\n              primary={message.title}\r\n              secondary={\r\n                <>\r\n                  <Typography component=\"span\" variant=\"body2\" color=\"text.primary\">\r\n                    {message.content}\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography component=\"span\" variant=\"caption\" color=\"text.secondary\">\r\n                    {new Date(message.timestamp).toLocaleString()}\r\n                  </Typography>\r\n                </>\r\n              }\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MessageCenter; ","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 请求拦截器\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 响应拦截器\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance; ","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n    Container,\r\n    Paper,\r\n    Typography,\r\n    Button,\r\n    Box,\r\n    Divider,\r\n    CircularProgress,\r\n    Alert,\r\n    Chip,\r\n    IconButton,\r\n} from '@mui/material';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport MarkEmailReadIcon from '@mui/icons-material/MarkEmailRead';\r\nimport axiosInstance from '../utils/axiosInstance'; // 复用 axios 实例\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { zhCN } from 'date-fns/locale';\r\n\r\n// 单个通知的详细类型\r\ninterface Notification {\r\n    _id: string;\r\n    title: string;\r\n    message: string;\r\n    type: string;\r\n    status: 'unread' | 'read';\r\n    createdAt: string;\r\n}\r\n\r\nconst notificationTypes: Record<string, string> = {\r\n    balance_low: '余额不足',\r\n    hosting_fee_low: '托管费不足',\r\n    system: '系统通知',\r\n    registration: '注册通知',\r\n    payment: '支付通知',\r\n    other: '其他通知'\r\n};\r\n\r\nconst MessageDetail: React.FC = () => {\r\n    const { id } = useParams<{ id: string }>();\r\n    const navigate = useNavigate();\r\n    const [notification, setNotification] = useState<Notification | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [markingRead, setMarkingRead] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        const fetchNotification = async () => {\r\n            try {\r\n                const response = await axiosInstance.get(`/api/notifications/${id}`);\r\n                setNotification(response.data);\r\n                \r\n                // 如果是未读消息，自动标记为已读\r\n                if (response.data.status === 'unread') {\r\n                    await axiosInstance.put(`/api/notifications/${id}/read`);\r\n                }\r\n            } catch (err) {\r\n                setError('获取通知详情失败');\r\n                console.error('Error fetching notification:', err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchNotification();\r\n    }, [id]);\r\n\r\n    const handleMarkAsRead = async () => {\r\n        if (!id || notification?.status === 'read') return;\r\n        setMarkingRead(true);\r\n        try {\r\n            const response = await axiosInstance.put<Notification>(`/api/notifications/${id}/read`);\r\n            setNotification(response.data); // 更新状态\r\n        } catch (err) {\r\n            console.error(\"Error marking notification as read:\", err);\r\n            setError('标记已读失败。');\r\n        } finally {\r\n            setMarkingRead(false);\r\n        }\r\n    };\r\n\r\n    const getRelativeTime = (date: string) => {\r\n        return formatDistanceToNow(new Date(date), { addSuffix: true, locale: zhCN });\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <Box display=\"flex\" justifyContent=\"center\" my={4}>\r\n                <CircularProgress />\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return <Alert severity=\"error\">{error}</Alert>;\r\n    }\r\n\r\n    if (!notification) {\r\n        return <Alert severity=\"info\">通知不存在</Alert>;\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"md\" sx={{ mt: 4 }}>\r\n            <Paper elevation={3} sx={{ p: 3 }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                     <IconButton onClick={() => navigate(-1)} sx={{ mr: 1 }}>\r\n                         <ArrowBackIcon />\r\n                     </IconButton>\r\n                     <Typography variant=\"h5\" component=\"h1\" sx={{ flexGrow: 1 }}>\r\n                        通知详情\r\n                     </Typography>\r\n                </Box>\r\n                <Divider sx={{ mb: 3 }} />\r\n\r\n                <Box sx={{ mb: 3 }}>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                        {notification.title}\r\n                    </Typography>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 2 }}>\r\n                        <Typography color=\"text.secondary\">\r\n                            {getRelativeTime(notification.createdAt)}\r\n                        </Typography>\r\n                        <Chip\r\n                            label={notificationTypes[notification.type] || '未知类型'}\r\n                            color={notification.status === 'unread' ? 'primary' : 'default'}\r\n                            size=\"small\"\r\n                        />\r\n                    </Box>\r\n                </Box>\r\n                \r\n                <Typography \r\n                    variant=\"body1\" \r\n                    sx={{ \r\n                        whiteSpace: 'pre-wrap',\r\n                        lineHeight: 1.8,\r\n                        color: 'text.primary'\r\n                    }}\r\n                >\r\n                    {notification.message}\r\n                </Typography>\r\n\r\n                <Box sx={{ mt: 4, display: 'flex', justifyContent: 'flex-end' }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => navigate('/message-center')}\r\n                    >\r\n                        返回消息中心\r\n                    </Button>\r\n                </Box>\r\n\r\n                {notification.status === 'unread' && (\r\n                    <Box sx={{ mt: 3, textAlign: 'right' }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            startIcon={<MarkEmailReadIcon />}\r\n                            onClick={handleMarkAsRead}\r\n                            disabled={markingRead}\r\n                        >\r\n                            {markingRead ? <CircularProgress size={24} color=\"inherit\" /> : '标记为已读'}\r\n                        </Button>\r\n                    </Box>\r\n                )}\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default MessageDetail; ","import React, { useState } from 'react';\r\nimport { Box, Typography, Grid, Container, Card, CardContent, Button, IconButton, List, ListItem, ListItemText, ListItemIcon, Divider } from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport { themeUtils } from '../theme';\r\nimport { ContentCopy as ContentCopyIcon, Share as ShareIcon, CheckCircle as CheckCircleIcon, AttachMoney as MoneyIcon, People as PeopleIcon, AccessTime as TimeIcon, Login as LoginIcon, PersonAdd as RegisterIcon } from '@mui/icons-material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst fadeInUp = {\r\n  initial: { opacity: 0, y: 20 },\r\n  animate: { opacity: 1, y: 0 },\r\n  transition: { duration: 0.5 }\r\n};\r\n\r\nconst Invite: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const [copied, setCopied] = useState(false);\r\n  const { isAuthenticated } = useAuth();\r\n  const inviteLink = isAuthenticated ? \"https://pandaquant.com/invite/123456\" : \"\";\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(inviteLink);\r\n    setCopied(true);\r\n    setTimeout(() => setCopied(false), 2000);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        py: 8,\r\n        background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.05) 0%, rgba(0, 255, 184, 0.02) 100%)',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <motion.div {...fadeInUp}>\r\n          <Box\r\n            sx={{\r\n              textAlign: 'center',\r\n              mb: 8,\r\n              position: 'relative',\r\n              '&::after': {\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                bottom: -20,\r\n                left: '50%',\r\n                transform: 'translateX(-50%)',\r\n                width: '100px',\r\n                height: '4px',\r\n                background: 'linear-gradient(90deg, transparent, #00FFB8, transparent)',\r\n                borderRadius: '2px',\r\n              },\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"h2\"\r\n              sx={{\r\n                color: '#00FFB8',\r\n                fontWeight: 800,\r\n                fontSize: { xs: '2rem', md: '3rem' },\r\n                lineHeight: 1.2,\r\n                textShadow: '0 2px 10px rgba(0, 255, 184, 0.2)',\r\n                mb: 2,\r\n              }}\r\n            >\r\n              {t('invite.title')}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h5\"\r\n              sx={{\r\n                color: '#666666',\r\n                fontWeight: 500,\r\n                fontSize: { xs: '1rem', md: '1.2rem' },\r\n                maxWidth: '800px',\r\n                mx: 'auto',\r\n                lineHeight: 1.6,\r\n              }}\r\n            >\r\n              {t('invite.subtitle')}\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12} md={6}>\r\n              <motion.div\r\n                whileHover={{ scale: 1.02 }}\r\n                transition={{ duration: 0.3 }}\r\n              >\r\n                <Card\r\n                  sx={{\r\n                    height: '100%',\r\n                    borderRadius: 4,\r\n                    boxShadow: '0 8px 32px rgba(0, 255, 184, 0.1)',\r\n                    border: '1px solid rgba(0, 255, 184, 0.1)',\r\n                    bgcolor: 'rgba(255, 255, 255, 0.9)',\r\n                    backdropFilter: 'blur(10px)',\r\n                  }}\r\n                >\r\n                  <CardContent sx={{ p: 4 }}>\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      sx={{\r\n                        color: '#333333',\r\n                        fontWeight: 600,\r\n                        mb: 3,\r\n                      }}\r\n                    >\r\n                      我的邀请链接\r\n                    </Typography>\r\n                    {isAuthenticated ? (\r\n                      <>\r\n                        <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>\r\n                          <Box sx={{ flex: 1 }}>\r\n                            <Typography\r\n                              variant=\"body1\"\r\n                              sx={{\r\n                                color: '#666666',\r\n                                mb: 1,\r\n                              }}\r\n                            >\r\n                              {inviteLink}\r\n                            </Typography>\r\n                          </Box>\r\n                          <Button\r\n                            onClick={handleCopy}\r\n                            startIcon={copied ? <CheckCircleIcon /> : <ContentCopyIcon />}\r\n                            variant=\"contained\"\r\n                            sx={{\r\n                              bgcolor: '#00FFB8',\r\n                              color: '#333333',\r\n                              '&:hover': {\r\n                                bgcolor: '#00E6A5',\r\n                              },\r\n                            }}\r\n                          >\r\n                            {copied ? '已复制' : '复制链接'}\r\n                          </Button>\r\n                        </Box>\r\n                        <Typography\r\n                          variant=\"body1\"\r\n                          sx={{\r\n                            color: '#666666',\r\n                          }}\r\n                        >\r\n                          {t('invite.link.description')}\r\n                        </Typography>\r\n                      </>\r\n                    ) : (\r\n                      <Box sx={{ textAlign: 'center', py: 4 }}>\r\n                        <Typography\r\n                          variant=\"body1\"\r\n                          sx={{\r\n                            color: '#666666',\r\n                            mb: 3,\r\n                          }}\r\n                        >\r\n                          {t('invite.login_required', '登录后获取专属邀请链接')}\r\n                        </Typography>\r\n                        <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center' }}>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            href=\"/login\"\r\n                            startIcon={<LoginIcon />}\r\n                            sx={{\r\n                              bgcolor: '#00FFB8',\r\n                              color: '#333333',\r\n                              '&:hover': {\r\n                                bgcolor: '#00E6A5',\r\n                              },\r\n                            }}\r\n                          >\r\n                            {t('invite.login', '立即登录')}\r\n                          </Button>\r\n                          <Button\r\n                            variant=\"outlined\"\r\n                            href=\"/register\"\r\n                            startIcon={<RegisterIcon />}\r\n                            sx={{\r\n                              borderColor: '#00FFB8',\r\n                              color: '#00FFB8',\r\n                              '&:hover': {\r\n                                borderColor: '#00E6A5',\r\n                                bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                              },\r\n                            }}\r\n                          >\r\n                            注册账号\r\n                          </Button>\r\n                        </Box>\r\n                      </Box>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              </motion.div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <motion.div\r\n                whileHover={{ scale: 1.02 }}\r\n                transition={{ duration: 0.3 }}\r\n              >\r\n                <Card\r\n                  sx={{\r\n                    height: '100%',\r\n                    borderRadius: 4,\r\n                    boxShadow: '0 8px 32px rgba(0, 255, 184, 0.1)',\r\n                    border: '1px solid rgba(0, 255, 184, 0.1)',\r\n                    bgcolor: 'rgba(255, 255, 255, 0.9)',\r\n                    backdropFilter: 'blur(10px)',\r\n                  }}\r\n                >\r\n                  <CardContent sx={{ p: 4 }}>\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      sx={{\r\n                        color: '#333333',\r\n                        fontWeight: 600,\r\n                        mb: 3,\r\n                      }}\r\n                    >\r\n                      {t('invite.reward.title')}\r\n                    </Typography>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 3 }}>\r\n                      <MoneyIcon sx={{ fontSize: 40, color: '#00FFB8' }} />\r\n                      <Typography\r\n                        variant=\"h3\"\r\n                        sx={{\r\n                          fontWeight: 700,\r\n                          color: '#00FFB8',\r\n                        }}\r\n                      >\r\n                        20%\r\n                      </Typography>\r\n                    </Box>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{\r\n                        color: '#666666',\r\n                        mb: 3,\r\n                      }}\r\n                    >\r\n                      {t('invite.reward.description')}\r\n                    </Typography>\r\n                    <List>\r\n                      <ListItem>\r\n                        <ListItemIcon>\r\n                          <PeopleIcon sx={{ color: '#00FFB8' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                          primary={t('invite.benefits.0.level')}\r\n                          secondary={t('invite.benefits.0.description')}\r\n                        />\r\n                      </ListItem>\r\n                      <Divider />\r\n                      <ListItem>\r\n                        <ListItemIcon>\r\n                          <PeopleIcon sx={{ color: '#00FFB8' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                          primary={t('invite.benefits.1.level')}\r\n                          secondary={t('invite.benefits.1.description')}\r\n                        />\r\n                      </ListItem>\r\n                    </List>\r\n                  </CardContent>\r\n                </Card>\r\n              </motion.div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <motion.div\r\n                whileHover={{ scale: 1.02 }}\r\n                transition={{ duration: 0.3 }}\r\n              >\r\n                <Card\r\n                  sx={{\r\n                    borderRadius: 4,\r\n                    boxShadow: '0 8px 32px rgba(0, 255, 184, 0.1)',\r\n                    border: '1px solid rgba(0, 255, 184, 0.1)',\r\n                    bgcolor: 'rgba(255, 255, 255, 0.9)',\r\n                    backdropFilter: 'blur(10px)',\r\n                  }}\r\n                >\r\n                  <CardContent sx={{ p: 4 }}>\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      sx={{\r\n                        color: '#333333',\r\n                        fontWeight: 600,\r\n                        mb: 3,\r\n                      }}\r\n                    >\r\n                      {t('invite.records.title')}\r\n                    </Typography>\r\n                    <List>\r\n                      <ListItem>\r\n                        <ListItemIcon>\r\n                          <TimeIcon sx={{ color: '#00FFB8' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                          primary=\"实时返佣\"\r\n                          secondary=\"系统自动计算并发放返佣奖励\"\r\n                        />\r\n                      </ListItem>\r\n                      <Divider />\r\n                      <ListItem>\r\n                        <ListItemIcon>\r\n                          <MoneyIcon sx={{ color: '#00FFB8' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                          primary=\"多级分润\"\r\n                          secondary=\"支持多级邀请，收益持续增长\"\r\n                        />\r\n                      </ListItem>\r\n                      <Divider />\r\n                      <ListItem>\r\n                        <ListItemIcon>\r\n                          <CheckCircleIcon sx={{ color: '#00FFB8' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                          primary=\"透明数据\"\r\n                          secondary=\"实时查看返佣记录，随时掌握收益情况\"\r\n                        />\r\n                      </ListItem>\r\n                    </List>\r\n                  </CardContent>\r\n                </Card>\r\n              </motion.div>\r\n            </Grid>\r\n          </Grid>\r\n        </motion.div>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Invite; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Button,\r\n  Chip\r\n} from '@mui/material';\r\nimport { ContentCopy as CopyIcon } from '@mui/icons-material';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Layout from '../components/Layout';\r\n\r\ninterface Referral {\r\n  id: string;\r\n  referredId: string;\r\n  commission: number;\r\n  level: number;\r\n  status: string;\r\n  createdAt: string;\r\n}\r\n\r\nconst ReferralRewards: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const [rewards, setRewards] = useState<{\r\n    totalReward: number;\r\n    commissionEarned: number;\r\n    referrals: Referral[];\r\n  }>({\r\n    totalReward: 0,\r\n    commissionEarned: 0,\r\n    referrals: []\r\n  });\r\n  const [referralCode, setReferralCode] = useState<string>('');\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    fetchRewards();\r\n    fetchReferralCode();\r\n  }, []);\r\n\r\n  const fetchRewards = async () => {\r\n    try {\r\n      const response = await axios.get('/api/referral/user-rewards');\r\n      setRewards(response.data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Failed to fetch rewards');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchReferralCode = async () => {\r\n    try {\r\n      const response = await axios.get('/api/referral/referral-code');\r\n      setReferralCode(response.data.referralCode);\r\n    } catch (err) {\r\n      console.error('Failed to fetch referral code:', err);\r\n    }\r\n  };\r\n\r\n  const handleCopyCode = () => {\r\n    navigator.clipboard.writeText(referralCode);\r\n    // 可以添加复制成功的提示\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Layout>\r\n        <Box sx={{ p: 3, textAlign: 'center' }}>\r\n          <Typography>Loading...</Typography>\r\n        </Box>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Layout>\r\n        <Box sx={{ p: 3, textAlign: 'center' }}>\r\n          <Typography color=\"error\">{error}</Typography>\r\n        </Box>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ my: 4 }}>\r\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n            {t('referral.rewards')}\r\n          </Typography>\r\n\r\n          <Grid container spacing={3}>\r\n            {/* 推荐码卡片 */}\r\n            <Grid item xs={12} md={6}>\r\n              <Paper sx={{ p: 3 }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  {t('referral.code')}\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n                  <Typography variant=\"h5\">{referralCode}</Typography>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<CopyIcon />}\r\n                    onClick={handleCopyCode}\r\n                  >\r\n                    {t('referral.copy')}\r\n                  </Button>\r\n                </Box>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            {/* 奖励统计卡片 */}\r\n            <Grid item xs={12} md={6}>\r\n              <Paper sx={{ p: 3 }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  {t('referral.summary')}\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                      {t('referral.totalRewards')}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" color=\"primary\">\r\n                      ${rewards.totalReward.toFixed(2)}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                      {t('referral.commissionEarned')}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" color=\"primary\">\r\n                      ${rewards.commissionEarned.toFixed(2)}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            {/* 推荐记录表格 */}\r\n            <Grid item xs={12}>\r\n              <Paper sx={{ p: 3 }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  {t('referral.history')}\r\n                </Typography>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>{t('referral.date')}</TableCell>\r\n                        <TableCell>{t('referral.level')}</TableCell>\r\n                        <TableCell>{t('referral.commission')}</TableCell>\r\n                        <TableCell>{t('referral.status')}</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {rewards.referrals.map((referral) => (\r\n                        <TableRow key={referral.id}>\r\n                          <TableCell>\r\n                            {format(new Date(referral.createdAt), 'MMM dd, yyyy')}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Chip\r\n                              label={`Level ${referral.level}`}\r\n                              color={referral.level === 1 ? 'primary' : 'secondary'}\r\n                              size=\"small\"\r\n                            />\r\n                            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 1 }}>\r\n                              {referral.level === 1 ? '20%' : '10%'}\r\n                            </Typography>\r\n                          </TableCell>\r\n                          <TableCell>${referral.commission.toFixed(2)}</TableCell>\r\n                          <TableCell>\r\n                            <Chip\r\n                              label={referral.status}\r\n                              color={referral.status === 'paid' ? 'success' : 'warning'}\r\n                              size=\"small\"\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ReferralRewards; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Chip,\r\n  useTheme,\r\n  IconButton,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport {\r\n  ContentCopy as CopyIcon,\r\n  Share as ShareIcon,\r\n  Person as PersonIcon,\r\n  AttachMoney as MoneyIcon\r\n} from '@mui/icons-material';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport Layout from '../components/Layout';\r\n\r\ninterface Referral {\r\n  id: string;\r\n  email: string;\r\n  name: string;\r\n  level: number;\r\n  commission: number;\r\n  status: string;\r\n  createdAt: string;\r\n  referredAt: string;\r\n}\r\n\r\ninterface ReferralStats {\r\n  firstGen: {\r\n    count: number;\r\n    totalCommission: number;\r\n  };\r\n  secondGen: {\r\n    count: number;\r\n    totalCommission: number;\r\n  };\r\n}\r\n\r\nconst ReferralLink: React.FC = () => {\r\n  const theme = useTheme();\r\n  const [referralLink, setReferralLink] = useState<string>('');\r\n  const [referrals, setReferrals] = useState<Referral[]>([]);\r\n  const [stats, setStats] = useState<ReferralStats>({\r\n    firstGen: { count: 0, totalCommission: 0 },\r\n    secondGen: { count: 0, totalCommission: 0 }\r\n  });\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const [linkRes, referralsRes, statsRes] = await Promise.all([\r\n        axios.get('/api/referral/referral-link'),\r\n        axios.get('/api/referral/referrals'),\r\n        axios.get('/api/referral/user-rewards')\r\n      ]);\r\n\r\n      setReferralLink(linkRes.data.referralLink);\r\n      setReferrals(referralsRes.data);\r\n      setStats(statsRes.data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Failed to fetch data');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCopyLink = () => {\r\n    navigator.clipboard.writeText(referralLink);\r\n    // 可以添加复制成功的提示\r\n  };\r\n\r\n  const handleShare = () => {\r\n    if (navigator.share) {\r\n      navigator.share({\r\n        title: 'Join Panda Trade',\r\n        text: 'Join me on Panda Trade and start trading with AI!',\r\n        url: referralLink\r\n      });\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Layout>\r\n        <Box sx={{ p: 3, textAlign: 'center' }}>\r\n          <Typography>Loading...</Typography>\r\n        </Box>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Layout>\r\n        <Box sx={{ p: 3, textAlign: 'center' }}>\r\n          <Typography color=\"error\">{error}</Typography>\r\n        </Box>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ my: 4 }}>\r\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n            Referral Center\r\n          </Typography>\r\n\r\n          <Grid container spacing={3}>\r\n            {/* 推荐链接卡片 */}\r\n            <Grid item xs={12}>\r\n              <Paper sx={{ p: 3 }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Your Referral Link\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    sx={{\r\n                      flex: 1,\r\n                      p: 1,\r\n                      bgcolor: theme.palette.grey[100],\r\n                      borderRadius: 1,\r\n                      wordBreak: 'break-all'\r\n                    }}\r\n                  >\r\n                    {referralLink}\r\n                  </Typography>\r\n                  <Tooltip title=\"Copy Link\">\r\n                    <IconButton onClick={handleCopyLink} color=\"primary\">\r\n                      <CopyIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Share\">\r\n                    <IconButton onClick={handleShare} color=\"primary\">\r\n                      <ShareIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Box>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            {/* 统计卡片 */}\r\n            <Grid item xs={12} md={6}>\r\n              <Paper sx={{ p: 3 }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  First Generation\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                      <PersonIcon color=\"primary\" />\r\n                      <Box>\r\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                          Referrals\r\n                        </Typography>\r\n                        <Typography variant=\"h4\">\r\n                          {stats.firstGen.count}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                      <MoneyIcon color=\"primary\" />\r\n                      <Box>\r\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                          Commission\r\n                        </Typography>\r\n                        <Typography variant=\"h4\" color=\"primary\">\r\n                          ${stats.firstGen.totalCommission.toFixed(2)}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <Paper sx={{ p: 3 }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Second Generation\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={6}>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                      <PersonIcon color=\"secondary\" />\r\n                      <Box>\r\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                          Referrals\r\n                        </Typography>\r\n                        <Typography variant=\"h4\">\r\n                          {stats.secondGen.count}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                      <MoneyIcon color=\"secondary\" />\r\n                      <Box>\r\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                          Commission\r\n                        </Typography>\r\n                        <Typography variant=\"h4\" color=\"secondary\">\r\n                          ${stats.secondGen.totalCommission.toFixed(2)}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            {/* 推荐人列表 */}\r\n            <Grid item xs={12}>\r\n              <Paper sx={{ p: 3 }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Referral History\r\n                </Typography>\r\n                <TableContainer>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>Email</TableCell>\r\n                        <TableCell>Level</TableCell>\r\n                        <TableCell>Commission</TableCell>\r\n                        <TableCell>Status</TableCell>\r\n                        <TableCell>Date</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {referrals.map((referral) => (\r\n                        <TableRow key={referral.id}>\r\n                          <TableCell>{referral.name}</TableCell>\r\n                          <TableCell>{referral.email}</TableCell>\r\n                          <TableCell>\r\n                            <Chip\r\n                              label={`Level ${referral.level}`}\r\n                              color={referral.level === 1 ? 'primary' : 'secondary'}\r\n                              size=\"small\"\r\n                            />\r\n                            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 1 }}>\r\n                              {referral.level === 1 ? '20%' : '10%'}\r\n                            </Typography>\r\n                          </TableCell>\r\n                          <TableCell>${referral.commission.toFixed(2)}</TableCell>\r\n                          <TableCell>\r\n                            <Chip\r\n                              label={referral.status}\r\n                              color={referral.status === 'paid' ? 'success' : 'warning'}\r\n                              size=\"small\"\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {format(new Date(referral.referredAt), 'MMM dd, yyyy')}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ReferralLink; ","import React from 'react';\r\nimport { Box, Typography, Button } from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst NotFound: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        minHeight: '100vh',\r\n        position: 'relative',\r\n        zIndex: 1,\r\n        background: 'transparent'\r\n      }}\r\n    >\r\n      <Typography \r\n        variant=\"h1\" \r\n        component=\"h1\" \r\n        gutterBottom\r\n        sx={{\r\n          fontSize: '8rem',\r\n          fontWeight: 'bold',\r\n          color: 'primary.main',\r\n          opacity: 0.8\r\n        }}\r\n      >\r\n        404\r\n      </Typography>\r\n      <Typography \r\n        variant=\"h5\" \r\n        gutterBottom\r\n        sx={{\r\n          mb: 4,\r\n          color: 'text.secondary'\r\n        }}\r\n      >\r\n        {t('pageNotFound')}\r\n      </Typography>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={() => navigate('/')}\r\n        sx={{ \r\n          mt: 2,\r\n          borderRadius: '20px',\r\n          px: 4,\r\n          py: 1.5\r\n        }}\r\n      >\r\n        {t('goHome')}\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NotFound; ","import React from 'react';\r\nimport { Box, Container, Typography, Grid, Card, CardContent, useTheme, alpha } from '@mui/material';\r\nimport { GradientTitle } from '@/components/common/GradientTitle';\r\nimport PandaCard from '@/components/common/PandaCard';\r\nimport { motion } from 'framer-motion';\r\nimport GlobalBackground from '@/components/common/GlobalBackground';\r\nimport Navbar from '@/components/common/Navbar';\r\nimport Footer from '@/components/home/Footer';\r\n\r\nconst AboutPage: React.FC = () => {\r\n  const theme = useTheme();\r\n  \r\n  const features = [\r\n    {\r\n      title: 'AI量化交易',\r\n      description: '利用人工智能和机器学习技术，分析市场数据，预测价格走势，实现自动化交易。',\r\n      icon: '🤖',\r\n      color: '#00FFB8',\r\n    },\r\n    {\r\n      title: '多策略组合',\r\n      description: '结合趋势跟踪、网格交易、动量突破等多种策略，适应不同市场环境。',\r\n      icon: '📊',\r\n      color: '#00B8FF',\r\n    },\r\n    {\r\n      title: '风险控制',\r\n      description: '多层次风险控制体系，包括止损、仓位管理、波动率控制等，保障资金安全。',\r\n      icon: '🛡️',\r\n      color: '#FFB800',\r\n    },\r\n  ];\r\n\r\n  const strategies = [\r\n    {\r\n      title: '超级趋势策略',\r\n      description: '基于ATR指标的动态趋势跟踪策略，自动适应市场波动，月化收益50%-300%。',\r\n      icon: '📈',\r\n      color: '#00FFB8',\r\n    },\r\n    {\r\n      title: '网格交易策略',\r\n      description: '在价格区间内设置网格，利用价格波动获取收益，月化收益50%-300%。',\r\n      icon: '📊',\r\n      color: '#00B8FF',\r\n    },\r\n    {\r\n      title: '动量突破策略',\r\n      description: '捕捉价格突破关键位后的动量行情，适合趋势启动阶段，月化收益50%-300%。',\r\n      icon: '🚀',\r\n      color: '#FFB800',\r\n    },\r\n    {\r\n      title: '套利策略',\r\n      description: '利用不同交易所之间的价差进行套利交易，月化收益50%-300%。',\r\n      icon: '💱',\r\n      color: '#FF00B8',\r\n    },\r\n  ];\r\n\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.2,\r\n      },\r\n    },\r\n  };\r\n\r\n  const itemVariants = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    visible: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        duration: 0.5,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ \r\n      py: 8,\r\n      background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.05) 0%, rgba(0, 255, 184, 0.02) 100%)',\r\n      minHeight: '100vh',\r\n    }}>\r\n      <Container maxWidth=\"lg\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: -20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          <GradientTitle \r\n            variant=\"h2\" \r\n            align=\"center\" \r\n            sx={{ \r\n              mb: 6,\r\n              fontSize: { xs: '2rem', md: '3rem' },\r\n              fontWeight: 700,\r\n            }}\r\n          >\r\n            关于我们\r\n          </GradientTitle>\r\n          <Typography \r\n            variant=\"subtitle1\" \r\n            align=\"center\" \r\n            sx={{ \r\n              mb: 8,\r\n              color: 'text.secondary',\r\n              maxWidth: '800px',\r\n              mx: 'auto',\r\n            }}\r\n          >\r\n            专业的量化交易平台，为投资者提供智能、高效、安全的交易解决方案\r\n          </Typography>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          variants={containerVariants}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n        >\r\n          <Grid container spacing={4}>\r\n            {features.map((feature, index) => (\r\n              <Grid item xs={12} md={4} key={index}>\r\n                <motion.div variants={itemVariants}>\r\n                  <PandaCard>\r\n                    <CardContent sx={{ p: 4 }}>\r\n                      <Box sx={{ \r\n                        display: 'flex', \r\n                        alignItems: 'center', \r\n                        mb: 3,\r\n                        gap: 2,\r\n                      }}>\r\n                        <Box sx={{\r\n                          width: 60,\r\n                          height: 60,\r\n                          borderRadius: '50%',\r\n                          bgcolor: alpha(feature.color, 0.1),\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          justifyContent: 'center',\r\n                          fontSize: '2rem',\r\n                        }}>\r\n                          {feature.icon}\r\n                        </Box>\r\n                        <Typography \r\n                          variant=\"h5\" \r\n                          component=\"h3\"\r\n                          sx={{\r\n                            fontWeight: 600,\r\n                            background: `linear-gradient(45deg, ${feature.color}, ${alpha(feature.color, 0.8)})`,\r\n                            WebkitBackgroundClip: 'text',\r\n                            WebkitTextFillColor: 'transparent',\r\n                          }}\r\n                        >\r\n                          {feature.title}\r\n                        </Typography>\r\n                      </Box>\r\n                      <Typography \r\n                        color=\"text.secondary\"\r\n                        sx={{ \r\n                          lineHeight: 1.8,\r\n                          fontSize: '1rem',\r\n                        }}\r\n                      >\r\n                        {feature.description}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </PandaCard>\r\n                </motion.div>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5, delay: 0.3 }}\r\n        >\r\n          <Box sx={{ \r\n            mb: 8, \r\n            textAlign: 'center',\r\n            mt: 12,\r\n            position: 'relative',\r\n            '&::before': {\r\n              content: '\"\"',\r\n              position: 'absolute',\r\n              top: -20,\r\n              left: '50%',\r\n              transform: 'translateX(-50%)',\r\n              width: '60px',\r\n              height: '4px',\r\n              background: 'linear-gradient(90deg, #00FFB8, #00B8FF)',\r\n              borderRadius: '2px',\r\n            }\r\n          }}>\r\n            <Typography\r\n              variant=\"h3\"\r\n              sx={{\r\n                fontSize: { xs: '2rem', md: '2.5rem' },\r\n                fontWeight: 700,\r\n                mb: 3,\r\n                background: 'linear-gradient(45deg, #00FFB8, #00B8FF)',\r\n                WebkitBackgroundClip: 'text',\r\n                WebkitTextFillColor: 'transparent',\r\n                position: 'relative',\r\n                display: 'inline-block',\r\n                '&::after': {\r\n                  content: '\"\"',\r\n                  position: 'absolute',\r\n                  bottom: -10,\r\n                  left: '50%',\r\n                  transform: 'translateX(-50%)',\r\n                  width: '40px',\r\n                  height: '2px',\r\n                  background: 'linear-gradient(90deg, #00FFB8, #00B8FF)',\r\n                  borderRadius: '1px',\r\n                }\r\n              }}\r\n            >\r\n              我们的策略\r\n            </Typography>\r\n            <Typography \r\n              variant=\"subtitle1\" \r\n              sx={{ \r\n                color: 'text.secondary',\r\n                fontSize: { xs: '1rem', md: '1.1rem' },\r\n                maxWidth: '600px',\r\n                mx: 'auto',\r\n                lineHeight: 1.8,\r\n                opacity: 0.8,\r\n              }}\r\n            >\r\n              多样化的交易策略，满足不同投资需求\r\n            </Typography>\r\n          </Box>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          variants={containerVariants}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n        >\r\n          <Grid container spacing={4} sx={{ mb: 8 }}>\r\n            {strategies.map((strategy, index) => (\r\n              <Grid item xs={12} md={6} key={index}>\r\n                <motion.div variants={itemVariants}>\r\n                  <PandaCard>\r\n                    <Card sx={{ \r\n                      height: '100%',\r\n                      transition: 'all 0.3s ease',\r\n                      '&:hover': {\r\n                        transform: 'translateY(-5px)',\r\n                        boxShadow: `0 8px 24px rgba(0, 0, 0, 0.2)`,\r\n                      },\r\n                    }}>\r\n                      <CardContent sx={{ p: 4 }}>\r\n                        <Box sx={{ \r\n                          display: 'flex', \r\n                          alignItems: 'center', \r\n                          mb: 3,\r\n                          gap: 2,\r\n                        }}>\r\n                          <Box sx={{\r\n                            width: 50,\r\n                            height: 50,\r\n                            borderRadius: '50%',\r\n                            bgcolor: alpha(strategy.color, 0.1),\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            fontSize: '1.5rem',\r\n                          }}>\r\n                            {strategy.icon}\r\n                          </Box>\r\n                          <Typography \r\n                            variant=\"h6\"\r\n                            sx={{\r\n                              fontWeight: 600,\r\n                              background: `linear-gradient(45deg, ${strategy.color}, ${alpha(strategy.color, 0.8)})`,\r\n                              WebkitBackgroundClip: 'text',\r\n                              WebkitTextFillColor: 'transparent',\r\n                            }}\r\n                          >\r\n                            {strategy.title}\r\n                          </Typography>\r\n                        </Box>\r\n                        <Typography \r\n                          variant=\"body2\" \r\n                          color=\"text.secondary\"\r\n                          sx={{ \r\n                            lineHeight: 1.8,\r\n                            fontSize: '0.95rem',\r\n                          }}\r\n                        >\r\n                          {strategy.description}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </PandaCard>\r\n                </motion.div>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5, delay: 0.6 }}\r\n        >\r\n          <PandaCard>\r\n            <Box sx={{ p: 4 }}>\r\n              <Typography \r\n                variant=\"h5\" \r\n                gutterBottom\r\n                sx={{\r\n                  fontWeight: 600,\r\n                  mb: 3,\r\n                  background: 'linear-gradient(45deg, #00FFB8, #00B8FF)',\r\n                  WebkitBackgroundClip: 'text',\r\n                  WebkitTextFillColor: 'transparent',\r\n                }}\r\n              >\r\n                安全与保障\r\n              </Typography>\r\n              <Typography \r\n                variant=\"body1\" \r\n                color=\"text.secondary\" \r\n                paragraph\r\n                sx={{ mb: 4 }}\r\n              >\r\n                我们高度重视用户资产安全，采用多重安全措施保障您的资金安全：\r\n              </Typography>\r\n              <Grid container spacing={4}>\r\n                <Grid item xs={12} md={4}>\r\n                  <Box sx={{ p: 3, bgcolor: alpha('#00FFB8', 0.05), borderRadius: 2 }}>\r\n                    <Typography variant=\"subtitle1\" sx={{ mb: 2, fontWeight: 600 }}>\r\n                      资金安全\r\n                    </Typography>\r\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        • 平台采用多重签名技术，确保资金安全\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        • 所有交易记录上链，保证透明可追溯\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                  <Box sx={{ p: 3, bgcolor: alpha('#00B8FF', 0.05), borderRadius: 2 }}>\r\n                    <Typography variant=\"subtitle1\" sx={{ mb: 2, fontWeight: 600 }}>\r\n                      API安全\r\n                    </Typography>\r\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        • 仅使用只读和交易权限，不涉及提现权限\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        • 采用IP白名单和API密钥加密存储\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                  <Box sx={{ p: 3, bgcolor: alpha('#FFB800', 0.05), borderRadius: 2 }}>\r\n                    <Typography variant=\"subtitle1\" sx={{ mb: 2, fontWeight: 600 }}>\r\n                      系统安全\r\n                    </Typography>\r\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        • 24/7实时监控系统，及时发现异常\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        • 定期安全审计和漏洞修复\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </PandaCard>\r\n        </motion.div>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AboutPage; ","import React from 'react';\r\nimport { Box, Container, Typography, Grid, Avatar } from '@mui/material';\r\nimport GlobalBackground from '@/components/common/GlobalBackground';\r\nimport Navbar from '@/components/common/Navbar';\r\nimport { GradientTitle } from '@/components/common/GradientTitle';\r\nimport PandaCard from '@/components/common/PandaCard';\r\n\r\nconst TeamPage: React.FC = () => {\r\n  const teamMembers = [\r\n    {\r\n      name: 'Michael Johnson',\r\n      position: '创始人兼首席执行官',\r\n      avatar: 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=400&h=400&fit=crop',\r\n      bio: '拥有15年金融科技行业经验，曾在多家知名金融机构担任高管职务。',\r\n      expertise: ['金融科技', '量化交易', '区块链'],\r\n    },\r\n    {\r\n      name: 'David Wilson',\r\n      position: '首席技术官',\r\n      avatar: 'https://images.unsplash.com/photo-1573496359142-b8d87734a5a2?w=400&h=400&fit=crop',\r\n      bio: '人工智能专家，专注于量化交易算法开发，拥有多项技术专利。',\r\n      expertise: ['人工智能', '机器学习', '算法设计'],\r\n    },\r\n    {\r\n      name: 'Sarah Anderson',\r\n      position: '产品总监',\r\n      avatar: 'https://images.unsplash.com/photo-1573497019940-1c28c88b4f3e?w=400&h=400&fit=crop',\r\n      bio: '用户体验专家，负责产品设计和用户增长，致力于创造卓越的用户体验。',\r\n      expertise: ['产品设计', '用户体验', '用户增长'],\r\n    },\r\n    {\r\n      name: 'Kevin Taylor',\r\n      position: '风控总监',\r\n      avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&h=400&fit=crop',\r\n      bio: '风险管理专家，负责平台风控系统建设，确保用户资产安全。',\r\n      expertise: ['风险管理', '合规', '安全'],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative', minHeight: '100vh' }}>\r\n      <GlobalBackground />\r\n      <Navbar />\r\n      \r\n      <Container maxWidth=\"lg\" sx={{ py: 8 }}>\r\n        <GradientTitle\r\n          title=\"我们的团队\"\r\n          subtitle=\"专业、创新、值得信赖\"\r\n          sx={{ mb: 6 }}\r\n        />\r\n        \r\n        <Grid container spacing={4}>\r\n          {teamMembers.map((member) => (\r\n            <Grid item xs={12} sm={6} md={3} key={member.name}>\r\n              <PandaCard>\r\n                <Box sx={{ textAlign: 'center', p: 3 }}>\r\n                  <Avatar\r\n                    src={member.avatar}\r\n                    alt={member.name}\r\n                    sx={{\r\n                      width: 120,\r\n                      height: 120,\r\n                      mx: 'auto',\r\n                      mb: 2,\r\n                      border: '3px solid #00FFB8',\r\n                    }}\r\n                  />\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    {member.name}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"subtitle1\"\r\n                    color=\"primary\"\r\n                    sx={{ mb: 2, color: '#00FFB8' }}\r\n                  >\r\n                    {member.position}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n                    {member.bio}\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, justifyContent: 'center' }}>\r\n                    {member.expertise.map((skill) => (\r\n                      <Typography\r\n                        key={skill}\r\n                        variant=\"caption\"\r\n                        sx={{\r\n                          bgcolor: 'rgba(0, 255, 184, 0.1)',\r\n                          color: '#00FFB8',\r\n                          px: 1.5,\r\n                          py: 0.5,\r\n                          borderRadius: '12px',\r\n                        }}\r\n                      >\r\n                        {skill}\r\n                      </Typography>\r\n                    ))}\r\n                  </Box>\r\n                </Box>\r\n              </PandaCard>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n        <Box sx={{ mt: 8 }}>\r\n          <PandaCard>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              加入我们\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n              我们正在寻找志同道合的伙伴，共同打造世界领先的量化交易平台。如果您对金融科技充满热情，欢迎加入我们的团队。\r\n            </Typography>\r\n            <Box sx={{ display: 'flex', gap: 2 }}>\r\n              <Typography\r\n                variant=\"body2\"\r\n                sx={{\r\n                  color: '#00FFB8',\r\n                  cursor: 'pointer',\r\n                  '&:hover': {\r\n                    textDecoration: 'underline',\r\n                  },\r\n                }}\r\n              >\r\n                查看职位\r\n              </Typography>\r\n              <Typography\r\n                variant=\"body2\"\r\n                sx={{\r\n                  color: '#00FFB8',\r\n                  cursor: 'pointer',\r\n                  '&:hover': {\r\n                    textDecoration: 'underline',\r\n                  },\r\n                }}\r\n              >\r\n                提交简历\r\n              </Typography>\r\n            </Box>\r\n          </PandaCard>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TeamPage; ","import React from 'react';\r\nimport { Box, Container, Typography, Grid, Card, CardContent } from '@mui/material';\r\nimport { GradientTitle } from '@/components/common/GradientTitle';\r\nimport PandaCard from '@/components/common/PandaCard';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst NewsPage: React.FC = () => {\r\n  const newsItems = [\r\n    {\r\n      id: 1,\r\n      title: '熊猫量化完成A轮融资',\r\n      date: '2024-03-15',\r\n      summary: '熊猫量化宣布完成A轮融资，由知名投资机构领投，将用于技术研发和市场拓展。',\r\n      category: '公司动态',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: '新策略上线：超级趋势2.0',\r\n      date: '2024-03-10',\r\n      summary: '我们发布了全新的超级趋势2.0策略，采用先进的机器学习算法，提供更精准的交易信号。',\r\n      category: '产品更新',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: '与Binance达成战略合作',\r\n      date: '2024-03-05',\r\n      summary: '熊猫量化与Binance达成战略合作，为用户提供更优质的交易体验和更低的交易成本。',\r\n      category: '合作动态',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: '用户突破10万',\r\n      date: '2024-02-28',\r\n      summary: '熊猫量化平台用户数突破10万，感谢所有用户的支持和信任。',\r\n      category: '里程碑',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ \r\n      py: { xs: 4, md: 8 },\r\n      background: 'linear-gradient(135deg, rgba(0, 255, 184, 0.05) 0%, rgba(0, 255, 184, 0.02) 100%)',\r\n      minHeight: '100vh',\r\n    }}>\r\n      <Container maxWidth=\"lg\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: -20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          <GradientTitle \r\n            title=\"新闻动态\"\r\n            sx={{ \r\n              mb: { xs: 3, md: 4 },\r\n              fontSize: { xs: '1.75rem', sm: '2.25rem', md: '2.75rem' },\r\n              fontWeight: 700,\r\n              textAlign: 'center',\r\n            }}\r\n          />\r\n          <Typography \r\n            variant=\"subtitle1\" \r\n            align=\"center\" \r\n            sx={{ \r\n              mb: { xs: 4, md: 6 },\r\n              color: 'text.secondary',\r\n              maxWidth: '800px',\r\n              mx: 'auto',\r\n              fontSize: { xs: '0.9rem', sm: '1rem' },\r\n              lineHeight: 1.6,\r\n            }}\r\n          >\r\n            了解熊猫量化的最新动态\r\n          </Typography>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          variants={{\r\n            hidden: { opacity: 0 },\r\n            visible: {\r\n              opacity: 1,\r\n              transition: {\r\n                staggerChildren: 0.2,\r\n              },\r\n            },\r\n          }}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n        >\r\n          <Grid container spacing={{ xs: 2, sm: 3, md: 4 }}>\r\n            {newsItems.map((news, index) => (\r\n              <Grid item xs={12} md={6} key={news.id}>\r\n                <motion.div\r\n                  variants={{\r\n                    hidden: { opacity: 0, y: 20 },\r\n                    visible: {\r\n                      opacity: 1,\r\n                      y: 0,\r\n                      transition: {\r\n                        duration: 0.5,\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  <PandaCard>\r\n                    <Card sx={{ \r\n                      height: '100%',\r\n                      minHeight: { xs: '200px', sm: '220px', md: '240px' },\r\n                      transition: 'all 0.3s ease',\r\n                      borderRadius: 2,\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      '&:hover': {\r\n                        transform: 'translateY(-5px)',\r\n                        boxShadow: `0 8px 24px rgba(0, 0, 0, 0.15)`,\r\n                      },\r\n                    }}>\r\n                      <CardContent sx={{ \r\n                        p: { xs: 3, sm: 4 },\r\n                        '&:last-child': { pb: { xs: 3, sm: 4 } },\r\n                        flex: 1,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                      }}>\r\n                        <Box sx={{ \r\n                          display: 'flex', \r\n                          justifyContent: 'space-between', \r\n                          alignItems: 'center',\r\n                          mb: 2.5,\r\n                        }}>\r\n                          <Typography \r\n                            variant=\"caption\" \r\n                            color=\"text.secondary\"\r\n                            sx={{ \r\n                              fontSize: { xs: '0.75rem', sm: '0.8rem' },\r\n                              fontWeight: 500,\r\n                            }}\r\n                          >\r\n                            {news.date}\r\n                          </Typography>\r\n                          <Typography\r\n                            variant=\"caption\"\r\n                            sx={{\r\n                              bgcolor: 'rgba(0, 255, 184, 0.1)',\r\n                              color: '#00FFB8',\r\n                              px: 1.5,\r\n                              py: 0.5,\r\n                              borderRadius: 1,\r\n                              fontSize: { xs: '0.75rem', sm: '0.8rem' },\r\n                              fontWeight: 600,\r\n                            }}\r\n                          >\r\n                            {news.category}\r\n                          </Typography>\r\n                        </Box>\r\n                        <Typography \r\n                          variant=\"h6\" \r\n                          sx={{ \r\n                            mb: 2,\r\n                            fontSize: { xs: '1.1rem', sm: '1.2rem' },\r\n                            fontWeight: 600,\r\n                            lineHeight: 1.4,\r\n                          }}\r\n                        >\r\n                          {news.title}\r\n                        </Typography>\r\n                        <Typography \r\n                          variant=\"body2\" \r\n                          color=\"text.secondary\"\r\n                          sx={{ \r\n                            fontSize: { xs: '0.875rem', sm: '0.9rem' },\r\n                            lineHeight: 1.6,\r\n                            flex: 1,\r\n                          }}\r\n                        >\r\n                          {news.summary}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </PandaCard>\r\n                </motion.div>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </motion.div>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NewsPage; ","import React from 'react';\nimport { Box, Container, Typography, Grid, Card, CardContent, TextField, Button, useTheme } from '@mui/material';\nimport GlobalBackground from '@/components/common/GlobalBackground';\nimport Navbar from '@/components/common/Navbar';\nimport { GradientTitle } from '@/components/common/GradientTitle';\nimport PandaCard from '@/components/common/PandaCard';\nimport { motion } from 'framer-motion';\n\nconst ContactPage: React.FC = () => {\n  const theme = useTheme();\n  \n  const contactInfo = [\n    {\n      title: '总部地址',\n      content: '1600 Amphitheatre Parkway, Mountain View, CA 94043, USA',\n      icon: '📍',\n      color: '#FF6B6B'\n    },\n    {\n      title: '联系电话',\n      content: '+1 (650) 253-0000',\n      icon: '📞',\n      color: '#4ECDC4'\n    },\n    {\n      title: '电子邮箱',\n      content: 'contact@pandaquant.com',\n      icon: '📧',\n      color: '#45B7D1'\n    },\n    {\n      title: '工作时间',\n      content: 'Monday - Friday: 9:00 AM - 6:00 PM (PST)',\n      icon: '⏰',\n      color: '#96CEB4'\n    }\n  ];\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.2\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { y: 20, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        duration: 0.5\n      }\n    }\n  };\n\n  return (\n    <Box sx={{ position: 'relative', minHeight: '100vh', overflow: 'hidden' }}>\n      <GlobalBackground />\n      <Navbar />\n      \n      <Container maxWidth=\"lg\" sx={{ py: 8 }}>\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n        >\n          <GradientTitle\n            title=\"联系我们\"\n            subtitle=\"随时为您提供支持\"\n            sx={{ \n              mb: 6,\n              textAlign: 'center',\n              '& .gradient-text': {\n                background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\n                WebkitBackgroundClip: 'text',\n                WebkitTextFillColor: 'transparent',\n                fontSize: { xs: '2.5rem', md: '3.5rem' },\n                fontWeight: 700,\n                letterSpacing: '0.02em'\n              }\n            }}\n          />\n        </motion.div>\n        \n        <motion.div\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate=\"visible\"\n        >\n          <Grid container spacing={4}>\n            <Grid item xs={12} md={6}>\n              <motion.div variants={itemVariants}>\n                <PandaCard\n                  sx={{\n                    height: '100%',\n                    background: 'rgba(255, 255, 255, 0.95)',\n                    backdropFilter: 'blur(20px)',\n                    border: '1px solid rgba(255, 255, 255, 0.3)',\n                    boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\n                    position: 'relative',\n                    overflow: 'hidden',\n                    '&:before': {\n                      content: '\"\"',\n                      position: 'absolute',\n                      top: 0,\n                      left: 0,\n                      right: 0,\n                      height: '4px',\n                      background: `linear-gradient(90deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\n                      opacity: 0.8\n                    },\n                    '&:after': {\n                      content: '\"\"',\n                      position: 'absolute',\n                      top: 0,\n                      left: 0,\n                      right: 0,\n                      bottom: 0,\n                      background: 'radial-gradient(circle at 50% 0%, rgba(255,255,255,0.1) 0%, transparent 50%)',\n                      pointerEvents: 'none'\n                    }\n                  }}\n                >\n                  <Typography \n                    variant=\"h5\" \n                    gutterBottom\n                    sx={{\n                      color: theme.palette.primary.main,\n                      fontWeight: 600,\n                      mb: 4,\n                      position: 'relative',\n                      display: 'inline-block',\n                      '&:after': {\n                        content: '\"\"',\n                        position: 'absolute',\n                        bottom: -8,\n                        left: 0,\n                        width: '100%',\n                        height: '3px',\n                        background: `linear-gradient(90deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\n                        borderRadius: '2px',\n                        transform: 'scaleX(0.3)',\n                        transformOrigin: 'left',\n                        transition: 'transform 0.3s ease'\n                      },\n                      '&:hover:after': {\n                        transform: 'scaleX(1)'\n                      }\n                    }}\n                  >\n                    联系方式\n                  </Typography>\n                  <Grid container spacing={4}>\n                    {contactInfo.map((item, index) => (\n                      <Grid item xs={12} key={index}>\n                        <motion.div\n                          whileHover={{ scale: 1.02 }}\n                          whileTap={{ scale: 0.98 }}\n                          transition={{ duration: 0.2 }}\n                        >\n                          <Card \n                            sx={{ \n                              background: `linear-gradient(135deg, ${item.color}15, ${item.color}05)`,\n                              border: `1px solid ${item.color}20`,\n                              borderRadius: 3,\n                              transition: 'all 0.3s ease',\n                              position: 'relative',\n                              overflow: 'hidden',\n                              padding: '24px',\n                              '&:before': {\n                                content: '\"\"',\n                                position: 'absolute',\n                                top: 0,\n                                left: 0,\n                                right: 0,\n                                bottom: 0,\n                                background: `linear-gradient(45deg, ${item.color}10, transparent)`,\n                                opacity: 0,\n                                transition: 'opacity 0.3s ease'\n                              },\n                              '&:hover': {\n                                transform: 'translateY(-5px)',\n                                boxShadow: `0 10px 20px ${item.color}20`,\n                                '&:before': {\n                                  opacity: 1\n                                }\n                              }\n                            }}\n                          >\n                            <CardContent sx={{ p: 0 }}>\n                              <Box sx={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n                                <motion.div\n                                  whileHover={{ rotate: 360 }}\n                                  transition={{ duration: 0.5 }}\n                                >\n                                  <Box\n                                    sx={{\n                                      width: 70,\n                                      height: 70,\n                                      borderRadius: '20px',\n                                      background: `linear-gradient(135deg, ${item.color}, ${item.color}80)`,\n                                      display: 'flex',\n                                      alignItems: 'center',\n                                      justifyContent: 'center',\n                                      boxShadow: `0 4px 15px ${item.color}40`,\n                                      position: 'relative',\n                                      '&:after': {\n                                        content: '\"\"',\n                                        position: 'absolute',\n                                        top: -2,\n                                        left: -2,\n                                        right: -2,\n                                        bottom: -2,\n                                        borderRadius: '22px',\n                                        background: `linear-gradient(135deg, ${item.color}40, transparent)`,\n                                        zIndex: -1\n                                      }\n                                    }}\n                                  >\n                                    <Typography variant=\"h3\" sx={{ color: 'white' }}>\n                                      {item.icon}\n                                    </Typography>\n                                  </Box>\n                                </motion.div>\n                                <Box sx={{ flex: 1 }}>\n                                  <Typography \n                                    variant=\"subtitle1\" \n                                    sx={{ \n                                      fontWeight: 600,\n                                      color: theme.palette.text.primary,\n                                      mb: 1.5,\n                                      fontSize: '1.2rem',\n                                      position: 'relative',\n                                      display: 'inline-block',\n                                      '&:after': {\n                                        content: '\"\"',\n                                        position: 'absolute',\n                                        bottom: -2,\n                                        left: 0,\n                                        width: '30px',\n                                        height: '2px',\n                                        background: item.color,\n                                        opacity: 0.5,\n                                        transition: 'width 0.3s ease'\n                                      },\n                                      '&:hover:after': {\n                                        width: '100%'\n                                      }\n                                    }}\n                                  >\n                                    {item.title}\n                                  </Typography>\n                                  <Typography \n                                    variant=\"body1\" \n                                    sx={{ \n                                      color: theme.palette.text.secondary,\n                                      lineHeight: 1.8,\n                                      fontSize: '1.1rem',\n                                      transition: 'color 0.3s ease',\n                                      '&:hover': {\n                                        color: theme.palette.text.primary\n                                      }\n                                    }}\n                                  >\n                                    {item.content}\n                                  </Typography>\n                                </Box>\n                              </Box>\n                            </CardContent>\n                          </Card>\n                        </motion.div>\n                      </Grid>\n                    ))}\n                  </Grid>\n                </PandaCard>\n              </motion.div>\n            </Grid>\n            \n            <Grid item xs={12} md={6}>\n              <motion.div variants={itemVariants}>\n                <PandaCard\n                  sx={{\n                    height: '100%',\n                    background: 'rgba(255, 255, 255, 0.95)',\n                    backdropFilter: 'blur(20px)',\n                    border: '1px solid rgba(255, 255, 255, 0.3)',\n                    boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\n                    position: 'relative',\n                    overflow: 'hidden',\n                    '&:before': {\n                      content: '\"\"',\n                      position: 'absolute',\n                      top: 0,\n                      left: 0,\n                      right: 0,\n                      height: '4px',\n                      background: `linear-gradient(90deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\n                      opacity: 0.8\n                    },\n                    '&:after': {\n                      content: '\"\"',\n                      position: 'absolute',\n                      top: 0,\n                      left: 0,\n                      right: 0,\n                      bottom: 0,\n                      background: 'radial-gradient(circle at 50% 0%, rgba(255,255,255,0.1) 0%, transparent 50%)',\n                      pointerEvents: 'none'\n                    }\n                  }}\n                >\n                  <Typography \n                    variant=\"h5\" \n                    gutterBottom\n                    sx={{\n                      color: theme.palette.primary.main,\n                      fontWeight: 600,\n                      mb: 4,\n                      position: 'relative',\n                      display: 'inline-block',\n                      '&:after': {\n                        content: '\"\"',\n                        position: 'absolute',\n                        bottom: -8,\n                        left: 0,\n                        width: '100%',\n                        height: '3px',\n                        background: `linear-gradient(90deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\n                        borderRadius: '2px',\n                        transform: 'scaleX(0.3)',\n                        transformOrigin: 'left',\n                        transition: 'transform 0.3s ease'\n                      },\n                      '&:hover:after': {\n                        transform: 'scaleX(1)'\n                      }\n                    }}\n                  >\n                    发送消息\n                  </Typography>\n                  <Box \n                    component=\"form\" \n                    sx={{ \n                      mt: 2,\n                      '& .MuiTextField-root': {\n                        '& .MuiOutlinedInput-root': {\n                          borderRadius: 2,\n                          transition: 'all 0.3s ease',\n                          '&:hover': {\n                            '& .MuiOutlinedInput-notchedOutline': {\n                              borderColor: theme.palette.primary.main,\n                            }\n                          },\n                          '&.Mui-focused': {\n                            '& .MuiOutlinedInput-notchedOutline': {\n                              borderColor: theme.palette.primary.main,\n                              borderWidth: 2\n                            }\n                          }\n                        }\n                      }\n                    }}\n                  >\n                    <Grid container spacing={2}>\n                      <Grid item xs={12} sm={6}>\n                        <TextField\n                          fullWidth\n                          label=\"姓名\"\n                          variant=\"outlined\"\n                          sx={{ mb: 2 }}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6}>\n                        <TextField\n                          fullWidth\n                          label=\"邮箱\"\n                          variant=\"outlined\"\n                          sx={{ mb: 2 }}\n                        />\n                      </Grid>\n                      <Grid item xs={12}>\n                        <TextField\n                          fullWidth\n                          label=\"主题\"\n                          variant=\"outlined\"\n                          sx={{ mb: 2 }}\n                        />\n                      </Grid>\n                      <Grid item xs={12}>\n                        <TextField\n                          fullWidth\n                          label=\"消息内容\"\n                          variant=\"outlined\"\n                          multiline\n                          rows={4}\n                          sx={{ mb: 2 }}\n                        />\n                      </Grid>\n                      <Grid item xs={12}>\n                        <motion.div\n                          whileHover={{ scale: 1.02 }}\n                          whileTap={{ scale: 0.98 }}\n                        >\n                          <Button\n                            variant=\"contained\"\n                            size=\"large\"\n                            fullWidth\n                            sx={{\n                              height: 50,\n                              borderRadius: 2,\n                              background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\n                              color: 'white',\n                              fontWeight: 600,\n                              fontSize: '1.1rem',\n                              textTransform: 'none',\n                              boxShadow: '0 4px 15px rgba(0, 0, 0, 0.1)',\n                              '&:hover': {\n                                background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\n                                boxShadow: '0 6px 20px rgba(0, 0, 0, 0.15)'\n                              }\n                            }}\n                          >\n                            发送消息\n                          </Button>\n                        </motion.div>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                </PandaCard>\n              </motion.div>\n            </Grid>\n          </Grid>\n        </motion.div>\n      </Container>\n    </Box>\n  );\n};\n\nexport default ContactPage; ","import React from 'react';\r\nimport { Box, Container, Typography, Grid, Card, CardContent } from '@mui/material';\r\nimport GlobalBackground from '@/components/common/GlobalBackground';\r\nimport Navbar from '@/components/common/Navbar';\r\nimport { GradientTitle } from '@/components/common/GradientTitle';\r\nimport PandaCard from '@/components/common/PandaCard';\r\n\r\nconst PartnersPage: React.FC = () => {\r\n  const partners = [\r\n    {\r\n      name: '交易所合作伙伴',\r\n      description: '我们与多家知名交易所建立了战略合作关系，为用户提供更优质的交易体验。',\r\n      partners: [\r\n        { \r\n          name: 'Binance', \r\n          url: 'https://www.binance.com'\r\n        },\r\n        { \r\n          name: 'Huobi', \r\n          url: 'https://www.huobi.com'\r\n        },\r\n        { \r\n          name: 'OKX', \r\n          url: 'https://www.okx.com'\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: '技术合作伙伴',\r\n      description: '我们与领先的技术公司合作，共同推动量化交易技术的发展。',\r\n      partners: [\r\n        { \r\n          name: 'AWS', \r\n          url: 'https://aws.amazon.com'\r\n        },\r\n        { \r\n          name: 'Google Cloud', \r\n          url: 'https://cloud.google.com'\r\n        },\r\n        { \r\n          name: 'Alibaba Cloud', \r\n          url: 'https://www.alibabacloud.com'\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: '金融合作伙伴',\r\n      description: '我们与多家金融机构合作，为用户提供更全面的金融服务。',\r\n      partners: [\r\n        { \r\n          name: 'Visa', \r\n          url: 'https://www.visa.com.cn'\r\n        },\r\n        { \r\n          name: 'Mastercard', \r\n          url: 'https://www.mastercard.com.cn'\r\n        },\r\n        { \r\n          name: 'PayPal', \r\n          url: 'https://www.paypal.com'\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative', minHeight: '100vh' }}>\r\n      <GlobalBackground />\r\n      <Navbar />\r\n      \r\n      <Container maxWidth=\"lg\" sx={{ py: 8 }}>\r\n        <GradientTitle\r\n          title=\"合作伙伴\"\r\n          subtitle=\"携手共创未来\"\r\n          sx={{ mb: 6 }}\r\n        />\r\n        \r\n        <Grid container spacing={4}>\r\n          {partners.map((section, index) => (\r\n            <Grid item xs={12} key={index}>\r\n              <PandaCard>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  {section.name}\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n                  {section.description}\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                  {section.partners.map((partner, idx) => (\r\n                    <Grid item xs={12} sm={4} key={idx}>\r\n                      <Box\r\n                        component=\"a\"\r\n                        href={partner.url}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        sx={{\r\n                          display: 'flex',\r\n                          flexDirection: 'column',\r\n                          alignItems: 'center',\r\n                          p: 3,\r\n                          bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                          borderRadius: 2,\r\n                          textDecoration: 'none',\r\n                          transition: 'all 0.3s ease',\r\n                          '&:hover': {\r\n                            transform: 'translateY(-5px)',\r\n                            bgcolor: 'rgba(0, 255, 184, 0.1)',\r\n                          },\r\n                        }}\r\n                      >\r\n                        <Typography \r\n                          variant=\"h6\" \r\n                          sx={{\r\n                            textAlign: 'center',\r\n                            fontWeight: 500,\r\n                            color: 'text.primary',\r\n                          }}\r\n                        >\r\n                          {partner.name}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </PandaCard>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartnersPage; ","import React from 'react';\r\nimport { Box, Container, Typography, Grid, Card, CardContent, Button, Chip } from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst CareersPage: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const jobOpenings = [\r\n    {\r\n      title: '高级量化交易策略师',\r\n      department: '量化交易部',\r\n      location: '远程',\r\n      type: '全职',\r\n      description: '负责开发和优化量化交易策略，包括高频交易、套利策略等。',\r\n      requirements: [\r\n        '5年以上量化交易经验',\r\n        '精通Python/C++编程',\r\n        '熟悉机器学习算法',\r\n        '有高频交易经验者优先'\r\n      ],\r\n      tags: ['量化交易', 'Python', '机器学习', '高频交易']\r\n    },\r\n    {\r\n      title: '区块链开发工程师',\r\n      department: '技术部',\r\n      location: '远程',\r\n      type: '全职',\r\n      description: '负责区块链底层技术开发和智能合约编写。',\r\n      requirements: [\r\n        '3年以上区块链开发经验',\r\n        '精通Solidity/Rust',\r\n        '熟悉以太坊生态',\r\n        '有DeFi项目经验者优先'\r\n      ],\r\n      tags: ['区块链', 'Solidity', 'Rust', 'DeFi']\r\n    },\r\n    {\r\n      title: '产品经理',\r\n      department: '产品部',\r\n      location: '远程',\r\n      type: '全职',\r\n      description: '负责量化交易平台的产品规划和功能设计。',\r\n      requirements: [\r\n        '3年以上金融科技产品经验',\r\n        '熟悉量化交易流程',\r\n        '优秀的沟通能力',\r\n        '有交易系统设计经验者优先'\r\n      ],\r\n      tags: ['产品经理', '金融科技', '量化交易', '用户体验']\r\n    },\r\n    {\r\n      title: '量化交易策略研究员',\r\n      department: '量化交易部',\r\n      location: '远程',\r\n      type: '全职',\r\n      description: '负责开发和优化量化交易策略，进行市场分析和回测。',\r\n      requirements: [\r\n        '金融、数学、计算机等相关专业硕士及以上学历',\r\n        '熟悉Python、R等编程语言',\r\n        '有量化交易或金融分析经验',\r\n        '良好的数学和统计学基础'\r\n      ],\r\n      tags: ['量化交易', 'Python', 'R', '数据分析']\r\n    },\r\n    {\r\n      title: '前端开发工程师',\r\n      department: '技术部',\r\n      location: '远程',\r\n      type: '全职',\r\n      description: '负责平台前端开发和优化，提升用户体验。',\r\n      requirements: [\r\n        '计算机相关专业本科及以上学历',\r\n        '精通React、TypeScript等前端技术',\r\n        '有大型项目开发经验',\r\n        '良好的代码规范和团队协作能力'\r\n      ],\r\n      tags: ['前端', 'React', 'TypeScript', 'Web3']\r\n    },\r\n    {\r\n      title: '后端开发工程师',\r\n      department: '技术部',\r\n      location: '远程',\r\n      type: '全职',\r\n      description: '负责平台后端系统开发和维护，确保系统稳定运行。',\r\n      requirements: [\r\n        '计算机相关专业本科及以上学历',\r\n        '精通Node.js、Python等后端技术',\r\n        '熟悉数据库设计和优化',\r\n        '有高并发系统开发经验'\r\n      ],\r\n      tags: ['后端', 'Node.js', 'Python', '数据库']\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ py: 8 }}>\r\n      <Container maxWidth=\"lg\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          <Typography\r\n            variant=\"h2\"\r\n            component=\"h1\"\r\n            align=\"center\"\r\n            gutterBottom\r\n            sx={{ fontWeight: 'bold', mb: 4 }}\r\n          >\r\n            加入我们\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h5\"\r\n            align=\"center\"\r\n            color=\"text.secondary\"\r\n            sx={{ mb: 8 }}\r\n          >\r\n            与行业精英一起，共同打造量化交易的未来\r\n          </Typography>\r\n        </motion.div>\r\n\r\n        <Box sx={{ mb: 8, textAlign: 'center' }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            为什么选择熊猫量化？\r\n          </Typography>\r\n          <Grid container spacing={4} sx={{ mt: 2 }}>\r\n            <Grid item xs={12} md={4}>\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ duration: 0.5, delay: 0.1 }}\r\n              >\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  创新文化\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                  鼓励创新思维，支持新技术探索\r\n                </Typography>\r\n              </motion.div>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ duration: 0.5, delay: 0.2 }}\r\n              >\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  专业成长\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                  提供持续学习和职业发展机会\r\n                </Typography>\r\n              </motion.div>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ duration: 0.5, delay: 0.3 }}\r\n              >\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  优厚待遇\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                  具有竞争力的薪资和福利\r\n                </Typography>\r\n              </motion.div>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n\r\n        <Typography variant=\"h4\" align=\"center\" gutterBottom sx={{ mb: 4 }}>\r\n          职位空缺\r\n        </Typography>\r\n\r\n        <Grid container spacing={4}>\r\n          {jobOpenings.map((job, index) => (\r\n            <Grid item xs={12} key={index}>\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ duration: 0.5, delay: index * 0.1 }}\r\n              >\r\n                <Card\r\n                  sx={{\r\n                    '&:hover': {\r\n                      transform: 'translateY(-4px)',\r\n                      transition: 'transform 0.3s ease-in-out'\r\n                    }\r\n                  }}\r\n                >\r\n                  <CardContent>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>\r\n                      <Box>\r\n                        <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                          {job.title}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" color=\"text.secondary\" gutterBottom>\r\n                          {job.department} | {job.location} | {job.type}\r\n                        </Typography>\r\n                      </Box>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        sx={{\r\n                          borderRadius: '20px',\r\n                          textTransform: 'none',\r\n                          px: 3\r\n                        }}\r\n                      >\r\n                        立即申请\r\n                      </Button>\r\n                    </Box>\r\n                    <Typography variant=\"body1\" paragraph>\r\n                      {job.description}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      任职要求：\r\n                    </Typography>\r\n                    <Box component=\"ul\" sx={{ pl: 2, mb: 2 }}>\r\n                      {job.requirements.map((req, i) => (\r\n                        <Typography component=\"li\" key={i} variant=\"body1\" color=\"text.secondary\">\r\n                          {req}\r\n                        </Typography>\r\n                      ))}\r\n                    </Box>\r\n                    <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\r\n                      {job.tags.map((tag, i) => (\r\n                        <Chip\r\n                          key={i}\r\n                          label={tag}\r\n                          size=\"small\"\r\n                          sx={{\r\n                            bgcolor: 'rgba(0, 255, 184, 0.1)',\r\n                            color: 'primary.main',\r\n                            '&:hover': {\r\n                              bgcolor: 'rgba(0, 255, 184, 0.2)'\r\n                            }\r\n                          }}\r\n                        />\r\n                      ))}\r\n                    </Box>\r\n                  </CardContent>\r\n                </Card>\r\n              </motion.div>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n        <Box sx={{ mt: 8, textAlign: 'center' }}>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            没有找到合适的职位？\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 4 }}>\r\n            我们随时欢迎优秀的人才加入，请将您的简历发送至 careers@pandaquant.com\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CareersPage; ","import React from 'react';\r\nimport { Box, Container, Typography, List, ListItem } from '@mui/material';\r\nimport GlobalBackground from '@/components/common/GlobalBackground';\r\nimport Navbar from '@/components/common/Navbar';\r\nimport { GradientTitle } from '@/components/common/GradientTitle';\r\nimport PandaCard from '@/components/common/PandaCard';\r\n\r\nconst DisclaimerPage: React.FC = () => {\r\n  const disclaimerPoints = [\r\n    {\r\n      title: '平台服务',\r\n      content: '熊猫量化平台提供的所有服务均按\"现状\"提供，不提供任何形式的明示或暗示的保证。平台不对服务的及时性、安全性、准确性或可靠性做出任何保证。',\r\n    },\r\n    {\r\n      title: '用户责任',\r\n      content: '用户应自行承担使用平台服务的所有风险。用户应确保其使用平台服务的行为符合相关法律法规，并对其账户下的所有操作负责。',\r\n    },\r\n    {\r\n      title: '知识产权',\r\n      content: '平台上的所有内容，包括但不限于文字、图片、图表、数据、软件等，均受知识产权法保护。未经授权，不得复制、传播或用于商业目的。',\r\n    },\r\n    {\r\n      title: '第三方服务',\r\n      content: '平台可能包含指向第三方网站或服务的链接。这些链接仅供参考，熊猫量化不对第三方网站或服务的内容、准确性或可用性负责。',\r\n    },\r\n    {\r\n      title: '服务中断',\r\n      content: '平台可能因系统维护、升级或其他原因暂时中断服务。对于因服务中断导致的任何损失，熊猫量化不承担责任。',\r\n    },\r\n    {\r\n      title: '责任限制',\r\n      content: '在法律允许的最大范围内，熊猫量化不对因使用平台服务导致的任何直接、间接、偶然、特殊或后果性损失承担责任。',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative', minHeight: '100vh' }}>\r\n      <GlobalBackground />\r\n      <Navbar />\r\n      \r\n      <Container maxWidth=\"lg\" sx={{ py: 8 }}>\r\n        <GradientTitle\r\n          title=\"免责声明\"\r\n          subtitle=\"请仔细阅读以下内容\"\r\n          sx={{ mb: 6 }}\r\n        />\r\n        \r\n        <PandaCard>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            重要提示\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 4 }}>\r\n            在使用熊猫量化平台之前，请仔细阅读并理解本免责声明。继续使用本平台即表示您同意接受本免责声明的所有条款。\r\n          </Typography>\r\n\r\n          <List>\r\n            {disclaimerPoints.map((point, index) => (\r\n              <ListItem key={index} sx={{ display: 'block', mb: 3 }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  {point.title}\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                  {point.content}\r\n                </Typography>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n\r\n          <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mt: 4 }}>\r\n            如果您对本免责声明有任何疑问，请联系我们的客服团队。\r\n          </Typography>\r\n        </PandaCard>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DisclaimerPage; ","import React from 'react';\r\nimport { Box, Container, Typography, List, ListItem } from '@mui/material';\r\nimport GlobalBackground from '@/components/common/GlobalBackground';\r\nimport Navbar from '@/components/common/Navbar';\r\nimport { GradientTitle } from '@/components/common/GradientTitle';\r\nimport PandaCard from '@/components/common/PandaCard';\r\n\r\nconst PrivacyPage: React.FC = () => {\r\n  const privacyPoints = [\r\n    {\r\n      title: '信息收集',\r\n      content: '我们收集的信息包括但不限于：注册信息、交易记录、设备信息、IP地址等。这些信息用于提供服务和改进用户体验。',\r\n    },\r\n    {\r\n      title: '信息使用',\r\n      content: '收集的信息用于：账户管理、交易处理、安全验证、客户服务、产品改进等。我们不会将您的信息用于未经授权的目的。',\r\n    },\r\n    {\r\n      title: '信息保护',\r\n      content: '我们采用行业标准的安全措施保护您的信息，包括加密传输、安全存储、访问控制等。',\r\n    },\r\n    {\r\n      title: '信息共享',\r\n      content: '我们不会在未经您同意的情况下与第三方共享您的个人信息，除非法律要求或保护我们的合法权益。',\r\n    },\r\n    {\r\n      title: 'Cookie使用',\r\n      content: '我们使用Cookie来改善用户体验、分析网站使用情况、提供个性化服务。您可以通过浏览器设置管理Cookie。',\r\n    },\r\n    {\r\n      title: '用户权利',\r\n      content: '您有权访问、更正、删除您的个人信息，以及撤回同意、投诉等。如需行使这些权利，请联系我们的客服。',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative', minHeight: '100vh' }}>\r\n      <GlobalBackground />\r\n      <Navbar />\r\n      \r\n      <Container maxWidth=\"lg\" sx={{ py: 8 }}>\r\n        <Box sx={{ mb: 6 }}>\r\n          <GradientTitle>\r\n            隐私政策\r\n          </GradientTitle>\r\n          <Typography variant=\"subtitle1\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n            保护您的隐私是我们的首要任务\r\n          </Typography>\r\n        </Box>\r\n        \r\n        <PandaCard>\r\n          <Box sx={{ p: 4 }}>\r\n            <Typography variant=\"body1\" paragraph>\r\n              本隐私政策说明了我们如何收集、使用、存储和保护您的个人信息。请仔细阅读本政策，了解我们对您个人信息的处理方式。\r\n            </Typography>\r\n            \r\n            <List>\r\n              {privacyPoints.map((point, index) => (\r\n                <ListItem key={index} sx={{ display: 'block', mb: 3 }}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    {point.title}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" color=\"text.secondary\">\r\n                    {point.content}\r\n                  </Typography>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            \r\n            <Typography variant=\"body1\" sx={{ mt: 4 }}>\r\n              最后更新日期：2024年3月20日\r\n            </Typography>\r\n          </Box>\r\n        </PandaCard>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PrivacyPage; ","import React from 'react';\r\nimport { Box, Container, Typography, List, ListItem } from '@mui/material';\r\nimport { GradientTitle } from '@/components/common/GradientTitle';\r\nimport PandaCard from '@/components/common/PandaCard';\r\n\r\nconst TermsPage: React.FC = () => {\r\n  const termsPoints = [\r\n    {\r\n      title: '服务说明',\r\n      content: '本平台提供量化交易策略服务，包括但不限于策略订阅、回测、实盘交易等功能。用户需遵守相关法律法规和平台规则。',\r\n    },\r\n    {\r\n      title: '用户资格',\r\n      content: '用户必须年满18周岁，具有完全民事行为能力，并保证提供的信息真实、准确、完整。',\r\n    },\r\n    {\r\n      title: '账户安全',\r\n      content: '用户应妥善保管账户信息，对账户下的所有操作负责。如发现账户异常，应立即通知平台。',\r\n    },\r\n    {\r\n      title: '风险提示',\r\n      content: '量化交易存在风险，过往业绩不代表未来表现。用户应充分了解风险，审慎决策。',\r\n    },\r\n    {\r\n      title: '知识产权',\r\n      content: '平台所有内容，包括但不限于文字、图片、软件、策略等，均受知识产权法保护。',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ py: 8 }}>\r\n      <Container maxWidth=\"lg\">\r\n        <GradientTitle variant=\"h2\" align=\"center\" sx={{ mb: 6 }}>\r\n          服务条款\r\n        </GradientTitle>\r\n        <PandaCard>\r\n          <Box sx={{ p: 4 }}>\r\n            <List>\r\n              {termsPoints.map((point, index) => (\r\n                <ListItem key={index} sx={{ display: 'block', mb: 3 }}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    {point.title}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" color=\"text.secondary\">\r\n                    {point.content}\r\n                  </Typography>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </PandaCard>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TermsPage; ","import React from 'react';\r\nimport { Box, Container, Typography, List, ListItem, ListItemText } from '@mui/material';\r\nimport GlobalBackground from '@/components/common/GlobalBackground';\r\nimport Navbar from '@/components/common/Navbar';\r\nimport { GradientTitle } from '@/components/common/GradientTitle';\r\nimport PandaCard from '@/components/common/PandaCard';\r\n\r\nconst RiskPage: React.FC = () => {\r\n  const riskPoints = [\r\n    {\r\n      title: '市场风险',\r\n      description: '加密货币市场具有高度波动性，价格可能在短时间内发生剧烈变化。市场风险包括但不限于：价格波动、流动性风险、市场操纵等。投资者应充分了解市场风险，并根据自身风险承受能力进行投资。',\r\n    },\r\n    {\r\n      title: '技术风险',\r\n      description: '量化交易依赖于技术系统和网络连接。技术风险包括：系统故障、网络延迟、黑客攻击、数据泄露等。这些风险可能导致交易执行延迟、失败或资金损失。',\r\n    },\r\n    {\r\n      title: '策略风险',\r\n      description: '量化交易策略的表现受多种因素影响，包括市场环境、参数设置、数据质量等。历史表现不代表未来收益，策略可能因市场变化而失效。投资者应谨慎评估策略风险，定期监控策略表现。',\r\n    },\r\n    {\r\n      title: '操作风险',\r\n      description: '操作风险包括：参数设置错误、资金管理不当、过度交易等。这些风险可能导致不必要的损失。投资者应严格遵守交易纪律，合理控制仓位。',\r\n    },\r\n    {\r\n      title: '监管风险',\r\n      description: '加密货币和量化交易的监管环境不断变化，各国政策可能存在差异。监管变化可能影响平台的运营和用户的交易活动，甚至导致服务中断。',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative', minHeight: '100vh' }}>\r\n      <GlobalBackground />\r\n      <Navbar />\r\n      \r\n      <Container maxWidth=\"lg\" sx={{ py: 8 }}>\r\n        <GradientTitle\r\n          title=\"风险提示\"\r\n          subtitle=\"投资有风险，入市需谨慎\"\r\n          sx={{ mb: 6 }}\r\n        />\r\n        \r\n        <PandaCard>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            重要提示\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 4 }}>\r\n            在开始使用熊猫量化平台之前，请仔细阅读并理解以下风险提示。量化交易涉及高风险，可能导致资金损失。我们建议您在充分了解相关风险后，根据自身情况谨慎决策。\r\n          </Typography>\r\n\r\n          <List>\r\n            {riskPoints.map((point, index) => (\r\n              <ListItem key={index} sx={{ display: 'block', mb: 3 }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  {point.title}\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                  {point.description}\r\n                </Typography>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n\r\n          <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mt: 4 }}>\r\n            本风险提示不构成投资建议，投资者应自行承担投资风险。熊猫量化不对任何投资决策或结果负责。\r\n          </Typography>\r\n        </PandaCard>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RiskPage; ","import React from 'react';\r\nimport { Box, Container, Typography, Grid, Card, CardContent, Accordion, AccordionSummary, AccordionDetails } from '@mui/material';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { GradientTitle } from '@/components/common/GradientTitle';\r\nimport PandaCard from '@/components/common/PandaCard';\r\n\r\nconst HelpPage: React.FC = () => {\r\n  const faqs = [\r\n    {\r\n      question: '如何开始使用量化交易？',\r\n      answer: '首先需要注册账号并完成实名认证，然后选择适合的交易策略，设置参数后即可开始交易。'\r\n    },\r\n    {\r\n      question: '支持哪些交易所？',\r\n      answer: '目前支持币安、OKX、Gate、Bitget等主流交易所，未来会支持更多交易所。'\r\n    },\r\n    {\r\n      question: '如何选择交易策略？',\r\n      answer: '我们提供多种交易策略，您可以根据自己的风险偏好和投资目标选择合适的策略。'\r\n    },\r\n    {\r\n      question: '如何设置交易参数？',\r\n      answer: '每个策略都有详细的参数说明，您可以根据自己的需求调整参数。'\r\n    },\r\n    {\r\n      question: '如何查看交易记录？',\r\n      answer: '在个人中心可以查看所有的交易记录，包括交易时间、交易对、交易方向、交易价格等信息。'\r\n    },\r\n    {\r\n      question: '如何提现？',\r\n      answer: '在个人中心的钱包页面可以进行提现操作，提现需要完成实名认证。'\r\n    }\r\n  ];\r\n\r\n  const categories = [\r\n    {\r\n      title: '入门指南',\r\n      description: '了解量化交易的基本概念和操作流程',\r\n      icon: '📚'\r\n    },\r\n    {\r\n      title: '交易策略',\r\n      description: '学习各种交易策略的原理和使用方法',\r\n      icon: '📊'\r\n    },\r\n    {\r\n      title: '风险管理',\r\n      description: '掌握风险控制的方法和技巧',\r\n      icon: '🛡️'\r\n    },\r\n    {\r\n      title: '常见问题',\r\n      description: '解答用户常见的问题和疑惑',\r\n      icon: '❓'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative', minHeight: '100vh' }}>\r\n      <Container maxWidth=\"lg\" sx={{ py: 8 }}>\r\n        <GradientTitle\r\n          title=\"帮助中心\"\r\n          subtitle=\"常见问题与使用指南\"\r\n          sx={{ mb: 6 }}\r\n        />\r\n\r\n        <Grid container spacing={4} sx={{ mb: 8 }}>\r\n          {categories.map((category, index) => (\r\n            <Grid item xs={12} sm={6} md={3} key={index}>\r\n              <PandaCard>\r\n                <Card sx={{ height: '100%' }}>\r\n                  <CardContent sx={{ textAlign: 'center' }}>\r\n                    <Typography variant=\"h3\" sx={{ mb: 2 }}>\r\n                      {category.icon}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      {category.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {category.description}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </PandaCard>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" sx={{ mb: 4 }}>\r\n          常见问题\r\n        </Typography>\r\n        \r\n        <Box sx={{ mb: 8 }}>\r\n          {faqs.map((faq, index) => (\r\n            <Accordion key={index} sx={{ mb: 2 }}>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                sx={{\r\n                  bgcolor: 'background.paper',\r\n                  '&:hover': {\r\n                    bgcolor: 'action.hover',\r\n                  },\r\n                }}\r\n              >\r\n                <Typography variant=\"subtitle1\">\r\n                  {faq.question}\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {faq.answer}\r\n                </Typography>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          ))}\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HelpPage; ","import React from 'react';\r\nimport { Box, Container, Typography, Grid, Card, CardContent, CardMedia, Chip } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { GradientTitle } from '@/components/common/GradientTitle';\r\nimport PandaCard from '@/components/common/PandaCard';\r\n\r\nconst BlogPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const blogPosts = [\r\n    {\r\n      id: 1,\r\n      title: '量化交易入门指南',\r\n      date: '2024-03-20',\r\n      author: 'CryptoWhale',\r\n      image: 'https://images.unsplash.com/photo-1611974789855-9c2a0a7236a3?w=800&h=400&fit=crop',\r\n      summary: '本文详细介绍量化交易的基本概念、常用策略和风险管理方法，帮助新手快速入门。',\r\n      category: '入门教程',\r\n      readTime: '10分钟',\r\n      slug: 'quant-trading-guide'\r\n    },\r\n    {\r\n      id: 2,\r\n      title: '超级趋势策略深度解析',\r\n      date: '2024-03-18',\r\n      author: 'TradingNinja',\r\n      image: 'https://images.unsplash.com/photo-1590283603385-17ffb3a7f29f?w=800&h=400&fit=crop',\r\n      summary: '深入分析超级趋势策略的原理、参数设置和实战应用，帮助投资者更好地使用该策略。',\r\n      category: '策略分析',\r\n      readTime: '15分钟',\r\n      slug: 'super-trend-strategy'\r\n    },\r\n    {\r\n      id: 3,\r\n      title: '加密货币市场趋势分析',\r\n      date: '2024-03-15',\r\n      author: 'BlockchainSage',\r\n      image: 'https://images.unsplash.com/photo-1639762681485-074b7f938ba0?w=800&h=400&fit=crop',\r\n      summary: '基于大数据分析，解读当前加密货币市场的主要趋势和投资机会。',\r\n      category: '市场分析',\r\n      readTime: '12分钟',\r\n      slug: 'crypto-market-analysis'\r\n    },\r\n    {\r\n      id: 4,\r\n      title: '量化交易风险管理',\r\n      date: '2024-03-12',\r\n      author: 'DeFiMaster',\r\n      image: 'https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=800&h=400&fit=crop',\r\n      summary: '详细介绍量化交易中的风险管理方法，帮助投资者控制风险，提高收益。',\r\n      category: '风险管理',\r\n      readTime: '8分钟',\r\n      slug: 'risk-management'\r\n    },\r\n  ];\r\n\r\n  const handleBlogClick = (slug: string) => {\r\n    navigate(`/resources/blog/${slug}`);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative', minHeight: '100vh' }}>\r\n      <Container maxWidth=\"lg\" sx={{ py: 8 }}>\r\n        <Box sx={{ mb: 6 }}>\r\n          <GradientTitle variant=\"h4\" sx={{ mb: 2 }}>\r\n            博客\r\n          </GradientTitle>\r\n          <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n            量化交易知识与见解\r\n          </Typography>\r\n        </Box>\r\n        \r\n        <Grid container spacing={4}>\r\n          {blogPosts.map((post) => (\r\n            <Grid item xs={12} md={6} key={post.id}>\r\n              <PandaCard>\r\n                <Card \r\n                  sx={{ \r\n                    height: '100%', \r\n                    display: 'flex', \r\n                    flexDirection: 'column',\r\n                    cursor: 'pointer',\r\n                    transition: 'transform 0.3s ease-in-out',\r\n                    '&:hover': {\r\n                      transform: 'translateY(-8px)',\r\n                    },\r\n                  }}\r\n                  onClick={() => handleBlogClick(post.slug)}\r\n                >\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    height=\"200\"\r\n                    image={post.image}\r\n                    alt={post.title}\r\n                    sx={{ objectFit: 'cover' }}\r\n                  />\r\n                  <CardContent>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\">\r\n                        {post.date}\r\n                      </Typography>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\">\r\n                        {post.readTime}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      {post.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n                      {post.summary}\r\n                    </Typography>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\">\r\n                        作者：{post.author}\r\n                      </Typography>\r\n                      <Chip\r\n                        label={post.category}\r\n                        size=\"small\"\r\n                        sx={{\r\n                          bgcolor: 'rgba(0, 255, 184, 0.1)',\r\n                          color: '#00FFB8',\r\n                        }}\r\n                      />\r\n                    </Box>\r\n                  </CardContent>\r\n                </Card>\r\n              </PandaCard>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BlogPage; ","import React from 'react';\r\nimport { Box, Container, Typography, Grid, Card, CardContent, Button, Avatar, Chip } from '@mui/material';\r\nimport GlobalBackground from '@/components/common/GlobalBackground';\r\nimport { GradientTitle } from '@/components/common/GradientTitle';\r\nimport PandaCard from '@/components/common/PandaCard';\r\n\r\nconst CommunityPage: React.FC = () => {\r\n  const communitySections = [\r\n    {\r\n      title: '策略讨论',\r\n      description: '分享交易策略，交流交易心得',\r\n      icon: '📊',\r\n      members: '2.5k+',\r\n      posts: '1.2k+'\r\n    },\r\n    {\r\n      title: '市场分析',\r\n      description: '分析市场趋势，分享交易机会',\r\n      icon: '📈',\r\n      members: '3.1k+',\r\n      posts: '1.8k+'\r\n    },\r\n    {\r\n      title: '新手入门',\r\n      description: '新手交流，快速成长',\r\n      icon: '🎓',\r\n      members: '5.2k+',\r\n      posts: '3.4k+'\r\n    },\r\n    {\r\n      title: '技术交流',\r\n      description: '讨论技术指标，优化交易系统',\r\n      icon: '💻',\r\n      members: '1.8k+',\r\n      posts: '900+'\r\n    }\r\n  ];\r\n\r\n  const recentPosts = [\r\n    {\r\n      title: '超级趋势策略实战分享',\r\n      author: 'CryptoWhale',\r\n      date: '2024-03-20',\r\n      likes: 128,\r\n      comments: 45,\r\n      category: '策略讨论'\r\n    },\r\n    {\r\n      title: '比特币突破关键阻力位分析',\r\n      author: 'TradingNinja',\r\n      date: '2024-03-19',\r\n      likes: 95,\r\n      comments: 32,\r\n      category: '市场分析'\r\n    },\r\n    {\r\n      title: '新手如何选择交易策略？',\r\n      author: 'BlockchainSage',\r\n      date: '2024-03-18',\r\n      likes: 76,\r\n      comments: 28,\r\n      category: '新手入门'\r\n    },\r\n    {\r\n      title: 'RSI指标优化方案',\r\n      author: 'DeFiMaster',\r\n      date: '2024-03-17',\r\n      likes: 64,\r\n      comments: 21,\r\n      category: '技术交流'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative', minHeight: '100vh' }}>\r\n      <GlobalBackground />\r\n      \r\n      <Container maxWidth=\"lg\" sx={{ py: 8 }}>\r\n        <GradientTitle\r\n          title=\"社区\"\r\n          subtitle=\"交流与分享\"\r\n          sx={{ mb: 6 }}\r\n        />\r\n\r\n        <Grid container spacing={4} sx={{ mb: 8 }}>\r\n          {communitySections.map((section, index) => (\r\n            <Grid item xs={12} sm={6} md={3} key={index}>\r\n              <PandaCard>\r\n                <Card sx={{ height: '100%' }}>\r\n                  <CardContent sx={{ textAlign: 'center' }}>\r\n                    <Typography variant=\"h3\" sx={{ mb: 2 }}>\r\n                      {section.icon}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      {section.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n                      {section.description}\r\n                    </Typography>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\">\r\n                        {section.members} 成员\r\n                      </Typography>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\">\r\n                        {section.posts} 帖子\r\n                      </Typography>\r\n                    </Box>\r\n                  </CardContent>\r\n                </Card>\r\n              </PandaCard>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" sx={{ mb: 4 }}>\r\n          最新帖子\r\n        </Typography>\r\n        \r\n        <Grid container spacing={4}>\r\n          {recentPosts.map((post, index) => (\r\n            <Grid item xs={12} key={index}>\r\n              <PandaCard>\r\n                <Card>\r\n                  <CardContent>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>\r\n                      <Box>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                          {post.title}\r\n                        </Typography>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\r\n                          <Avatar sx={{ width: 24, height: 24 }} />\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {post.author}\r\n                          </Typography>\r\n                          <Typography variant=\"caption\" color=\"text.secondary\">\r\n                            {post.date}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n                      <Chip\r\n                        label={post.category}\r\n                        size=\"small\"\r\n                        sx={{\r\n                          bgcolor: 'rgba(0, 255, 184, 0.1)',\r\n                          color: '#00FFB8',\r\n                        }}\r\n                      />\r\n                    </Box>\r\n                    <Box sx={{ display: 'flex', gap: 2 }}>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\">\r\n                        {post.likes} 点赞\r\n                      </Typography>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\">\r\n                        {post.comments} 评论\r\n                      </Typography>\r\n                    </Box>\r\n                  </CardContent>\r\n                </Card>\r\n              </PandaCard>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommunityPage; ","import React from 'react';\r\nimport { Box, Container, Typography, Grid, Button, Paper, Stepper, Step, StepLabel, Chip } from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport GlobalBackground from '@/components/common/GlobalBackground';\r\nimport { GradientTitle } from '@/components/common/GradientTitle';\r\nimport PandaCard from '@/components/common/PandaCard';\r\nimport { fadeIn, slideUp, staggerChildren } from '@/animations';\r\nimport { \r\n  TrendingUp as TrendingUpIcon,\r\n  GridView as GridViewIcon,\r\n  Bolt as BoltIcon,\r\n  AutoGraph as AutoGraphIcon,\r\n  Security as SecurityIcon,\r\n  Settings as SettingsIcon,\r\n  AccountCircle as AccountCircleIcon,\r\n  PlayArrow as PlayArrowIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  Star as StarIcon,\r\n} from '@mui/icons-material';\r\n\r\nconst ProductPage: React.FC = () => {\r\n  const strategies = [\r\n    {\r\n      name: '超级趋势策略',\r\n      description: '基于ATR指标的动态趋势跟踪策略，自动适应市场波动。',\r\n      performance: '月化收益50%-300%',\r\n      risk: '中等',\r\n      category: '趋势跟踪',\r\n      features: ['自动趋势识别', '动态止损', '多时间框架分析'],\r\n      icon: TrendingUpIcon,\r\n      color: '#00FFB8'\r\n    },\r\n    {\r\n      name: '网格交易策略',\r\n      description: '在价格区间内设置网格，利用价格波动获取收益。',\r\n      performance: '月化收益50%-300%',\r\n      risk: '低',\r\n      category: '区间交易',\r\n      features: ['自动网格布局', '智能加仓', '风险分散'],\r\n      icon: GridViewIcon,\r\n      color: '#00B8FF'\r\n    },\r\n    {\r\n      name: '动量突破策略',\r\n      description: '捕捉价格突破关键位后的动量行情，适合趋势启动阶段。',\r\n      performance: '月化收益50%-300%',\r\n      risk: '中等',\r\n      category: '突破交易',\r\n      features: ['突破点识别', '动量追踪', '快速响应'],\r\n      icon: BoltIcon,\r\n      color: '#FFB800'\r\n    },\r\n  ];\r\n\r\n  const productFeatures = [\r\n    {\r\n      title: '策略特点',\r\n      items: ['自动交易', '风险控制', '收益分析', '实时监控', '参数优化'],\r\n      icon: AutoGraphIcon,\r\n      color: '#00FFB8'\r\n    },\r\n    {\r\n      title: '使用流程',\r\n      items: ['选择策略', '设置参数', '开始交易', '监控收益', '优化调整'],\r\n      icon: SettingsIcon,\r\n      color: '#00B8FF'\r\n    }\r\n  ];\r\n\r\n  const usageSteps = [\r\n    {\r\n      title: '注册账户',\r\n      description: '完成邮箱验证和身份认证',\r\n      icon: AccountCircleIcon\r\n    },\r\n    {\r\n      title: '选择策略',\r\n      description: '根据风险偏好选择适合的策略',\r\n      icon: AutoGraphIcon\r\n    },\r\n    {\r\n      title: '设置参数',\r\n      description: '自定义交易参数和风险控制',\r\n      icon: SettingsIcon\r\n    },\r\n    {\r\n      title: '开始交易',\r\n      description: '启动自动交易系统',\r\n      icon: PlayArrowIcon\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative', minHeight: '100vh' }}>\r\n      <GlobalBackground />\r\n      \r\n      <Container maxWidth=\"lg\" sx={{ py: 8 }}>\r\n        <motion.div\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          variants={staggerChildren}\r\n        >\r\n          <motion.div variants={fadeIn}>\r\n            <Box sx={{ \r\n              mb: 6, \r\n              textAlign: 'center',\r\n              position: 'relative',\r\n              '&::after': {\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                bottom: -16,\r\n                left: '50%',\r\n                transform: 'translateX(-50%)',\r\n                width: '200px',\r\n                height: '1px',\r\n                background: 'linear-gradient(90deg, transparent, rgba(0, 255, 184, 0.3), transparent)',\r\n              }\r\n            }}>\r\n              <GradientTitle>\r\n                高收益交易策略\r\n              </GradientTitle>\r\n              <Typography \r\n                variant=\"subtitle1\" \r\n                sx={{ \r\n                  mt: 1,\r\n                  color: 'rgba(0, 0, 0, 0.8)',\r\n                  fontSize: '1.1rem',\r\n                }}\r\n              >\r\n                月化收益50%-300%，我们只收取收益的10%\r\n              </Typography>\r\n            </Box>\r\n          </motion.div>\r\n\r\n          <Grid container spacing={4} sx={{ mb: 6 }}>\r\n            {strategies.map((strategy, index) => (\r\n              <Grid item xs={12} md={4} key={index}>\r\n                <motion.div variants={slideUp}>\r\n                  <PandaCard\r\n                    gradient\r\n                    animation\r\n                    sx={{ height: '100%' }}\r\n                  >\r\n                    <Box sx={{ \r\n                      p: 3,\r\n                      height: '100%',\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      justifyContent: 'space-between',\r\n                    }}>\r\n                      <Box>\r\n                        <Box sx={{ \r\n                          display: 'flex', \r\n                          alignItems: 'center', \r\n                          gap: 2,\r\n                          mb: 2,\r\n                        }}>\r\n                          <strategy.icon sx={{ \r\n                            fontSize: '2.5rem', \r\n                            color: strategy.color,\r\n                            filter: 'drop-shadow(0 0 10px rgba(0, 255, 184, 0.3))'\r\n                          }} />\r\n                          <Box>\r\n                            <Typography variant=\"h6\" sx={{ \r\n                              fontWeight: 600,\r\n                              color: strategy.color,\r\n                            }}>\r\n                              {strategy.name}\r\n                            </Typography>\r\n                            <Chip \r\n                              label={strategy.category}\r\n                              size=\"small\"\r\n                              sx={{ \r\n                                bgcolor: `${strategy.color}20`,\r\n                                color: strategy.color,\r\n                                fontWeight: 500,\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                        </Box>\r\n                        <Typography variant=\"body2\" sx={{ \r\n                          color: 'rgba(0, 0, 0, 0.6)',\r\n                          mb: 2,\r\n                          lineHeight: 1.6,\r\n                        }}>\r\n                          {strategy.description}\r\n                        </Typography>\r\n                        <Box sx={{ mb: 2 }}>\r\n                          {strategy.features.map((feature, idx) => (\r\n                            <Box \r\n                              key={idx} \r\n                              sx={{ \r\n                                display: 'flex', \r\n                                alignItems: 'center',\r\n                                gap: 1,\r\n                                mb: 1,\r\n                              }}\r\n                            >\r\n                              <CheckCircleIcon sx={{ \r\n                                fontSize: '1rem', \r\n                                color: strategy.color,\r\n                              }} />\r\n                              <Typography variant=\"body2\" sx={{ \r\n                                color: 'rgba(0, 0, 0, 0.8)',\r\n                              }}>\r\n                                {feature}\r\n                              </Typography>\r\n                            </Box>\r\n                          ))}\r\n                        </Box>\r\n                      </Box>\r\n\r\n                      <Box>\r\n                        <Box sx={{ \r\n                          display: 'flex', \r\n                          justifyContent: 'space-between', \r\n                          alignItems: 'center', \r\n                          mb: 2,\r\n                          p: 1.5,\r\n                          bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                          borderRadius: 1,\r\n                        }}>\r\n                          <Typography variant=\"body2\" sx={{ \r\n                            color: 'rgba(0, 0, 0, 0.8)',\r\n                            fontWeight: 500,\r\n                          }}>\r\n                            {strategy.performance}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" sx={{ \r\n                            color: 'rgba(0, 0, 0, 0.8)',\r\n                            fontWeight: 500,\r\n                          }}>\r\n                            风险等级：{strategy.risk}\r\n                          </Typography>\r\n                        </Box>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          fullWidth\r\n                          sx={{\r\n                            bgcolor: strategy.color,\r\n                            color: 'white',\r\n                            '&:hover': {\r\n                              bgcolor: `${strategy.color}CC`,\r\n                              transform: 'translateY(-2px)',\r\n                            },\r\n                            transition: 'all 0.3s',\r\n                          }}\r\n                        >\r\n                          了解更多\r\n                        </Button>\r\n                      </Box>\r\n                    </Box>\r\n                  </PandaCard>\r\n                </motion.div>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          <Grid container spacing={4} sx={{ mb: 6 }}>\r\n            {productFeatures.map((feature, index) => (\r\n              <Grid item xs={12} md={6} key={index}>\r\n                <motion.div variants={slideUp}>\r\n                  <PandaCard\r\n                    gradient\r\n                    animation\r\n                  >\r\n                    <Box sx={{ p: 3 }}>\r\n                      <Box sx={{ \r\n                        display: 'flex', \r\n                        alignItems: 'center', \r\n                        gap: 2,\r\n                        mb: 3,\r\n                      }}>\r\n                        <feature.icon sx={{ \r\n                          fontSize: '2.5rem', \r\n                          color: feature.color,\r\n                          filter: 'drop-shadow(0 0 10px rgba(0, 255, 184, 0.3))'\r\n                        }} />\r\n                        <Typography variant=\"h5\" sx={{ \r\n                          fontWeight: 600,\r\n                          color: feature.color,\r\n                        }}>\r\n                          {feature.title}\r\n                        </Typography>\r\n                      </Box>\r\n                      <Box sx={{ mt: 2 }}>\r\n                        {feature.items.map((item, idx) => (\r\n                          <Box \r\n                            key={idx} \r\n                            sx={{ \r\n                              display: 'flex', \r\n                              alignItems: 'center',\r\n                              gap: 1,\r\n                              mb: 1.5,\r\n                              p: 1.5,\r\n                              bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                              borderRadius: 1,\r\n                              transition: 'all 0.3s',\r\n                              '&:hover': {\r\n                                bgcolor: 'rgba(0, 255, 184, 0.08)',\r\n                                transform: 'translateX(5px)',\r\n                              }\r\n                            }}\r\n                          >\r\n                            <StarIcon sx={{ \r\n                              fontSize: '1rem', \r\n                              color: feature.color,\r\n                            }} />\r\n                            <Typography variant=\"body1\" sx={{ \r\n                              color: 'rgba(0, 0, 0, 0.8)',\r\n                            }}>\r\n                              {item}\r\n                            </Typography>\r\n                          </Box>\r\n                        ))}\r\n                      </Box>\r\n                    </Box>\r\n                  </PandaCard>\r\n                </motion.div>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          <Box sx={{ mb: 6 }}>\r\n            <motion.div variants={fadeIn}>\r\n              <Typography variant=\"h4\" gutterBottom align=\"center\" sx={{ \r\n                color: '#00FFB8',\r\n                fontWeight: 600,\r\n                mb: 4,\r\n              }}>\r\n                使用流程\r\n              </Typography>\r\n            </motion.div>\r\n            <Stepper orientation=\"vertical\" sx={{ mt: 4 }}>\r\n              {usageSteps.map((step, index) => (\r\n                <Step key={index} active={true}>\r\n                  <motion.div variants={slideUp}>\r\n                    <StepLabel\r\n                      StepIconProps={{\r\n                        icon: <step.icon sx={{ color: '#00FFB8' }} />,\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"h6\" sx={{ \r\n                        color: 'rgba(0, 0, 0, 0.8)',\r\n                        fontWeight: 500,\r\n                      }}>\r\n                        {step.title}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" sx={{ \r\n                        color: 'rgba(0, 0, 0, 0.6)',\r\n                        mt: 0.5,\r\n                      }}>\r\n                        {step.description}\r\n                      </Typography>\r\n                    </StepLabel>\r\n                  </motion.div>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n          </Box>\r\n\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12} md={6}>\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  gradient\r\n                  animation\r\n                >\r\n                  <Box sx={{ p: 3 }}>\r\n                    <Box sx={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center', \r\n                      gap: 2,\r\n                      mb: 2,\r\n                    }}>\r\n                      <AutoGraphIcon sx={{ \r\n                        fontSize: '2.5rem', \r\n                        color: '#00FFB8',\r\n                        filter: 'drop-shadow(0 0 10px rgba(0, 255, 184, 0.3))'\r\n                      }} />\r\n                      <Typography variant=\"h5\" sx={{ \r\n                        fontWeight: 600,\r\n                        color: '#00FFB8',\r\n                      }}>\r\n                        策略定制服务\r\n                      </Typography>\r\n                    </Box>\r\n                    <Typography variant=\"body1\" sx={{ \r\n                      color: 'rgba(0, 0, 0, 0.6)',\r\n                      lineHeight: 1.6,\r\n                    }}>\r\n                      根据您的投资目标和风险偏好，为您定制专属的交易策略，月化收益可达50%-300%。\r\n                    </Typography>\r\n                  </Box>\r\n                </PandaCard>\r\n              </motion.div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <motion.div variants={slideUp}>\r\n                <PandaCard\r\n                  gradient\r\n                  animation\r\n                >\r\n                  <Box sx={{ p: 3 }}>\r\n                    <Box sx={{ \r\n                      display: 'flex', \r\n                      alignItems: 'center', \r\n                      gap: 2,\r\n                      mb: 2,\r\n                    }}>\r\n                      <SecurityIcon sx={{ \r\n                        fontSize: '2.5rem', \r\n                        color: '#00FFB8',\r\n                        filter: 'drop-shadow(0 0 10px rgba(0, 255, 184, 0.3))'\r\n                      }} />\r\n                      <Typography variant=\"h5\" sx={{ \r\n                        fontWeight: 600,\r\n                        color: '#00FFB8',\r\n                      }}>\r\n                        实时监控系统\r\n                      </Typography>\r\n                    </Box>\r\n                    <Typography variant=\"body1\" sx={{ \r\n                      color: 'rgba(0, 0, 0, 0.6)',\r\n                      lineHeight: 1.6,\r\n                    }}>\r\n                      24/7实时监控系统，确保您的交易安全，及时响应市场变化，最大化您的收益。\r\n                    </Typography>\r\n                  </Box>\r\n                </PandaCard>\r\n              </motion.div>\r\n            </Grid>\r\n          </Grid>\r\n        </motion.div>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductPage; ","import React from 'react';\r\nimport { Box, Container, Grid, Typography, Button, Divider } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PandaCard from '@/components/common/PandaCard';\r\nimport { GradientTitle } from '@/components/common/GradientTitle';\r\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\r\nimport SecurityIcon from '@mui/icons-material/Security';\r\nimport SpeedIcon from '@mui/icons-material/Speed';\r\n\r\nconst StyledPricingCard = styled(PandaCard)(({ theme }) => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  transition: 'transform 0.3s ease-in-out',\r\n  '&:hover': {\r\n    transform: 'translateY(-8px)',\r\n  },\r\n}));\r\n\r\nconst PricingPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleStartClick = () => {\r\n    navigate('/login');\r\n  };\r\n\r\n  const features = [\r\n    {\r\n      icon: <TrendingUpIcon sx={{ fontSize: 40, color: '#00FFB8' }} />,\r\n      title: '高收益',\r\n      description: '月化收益50%-300%，让您的资金快速增值',\r\n    },\r\n    {\r\n      icon: <SecurityIcon sx={{ fontSize: 40, color: '#00FFB8' }} />,\r\n      title: '低风险',\r\n      description: '严格的风险控制体系，保障您的资金安全',\r\n    },\r\n    {\r\n      icon: <SpeedIcon sx={{ fontSize: 40, color: '#00FFB8' }} />,\r\n      title: '高效率',\r\n      description: '7x24小时自动化交易，不错过任何机会',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ py: 8 }}>\r\n      <Container maxWidth=\"lg\">\r\n        <GradientTitle variant=\"h2\" align=\"center\" sx={{ mb: 6 }}>\r\n          透明定价，共赢未来\r\n        </GradientTitle>\r\n        \r\n        <Typography \r\n          variant=\"h5\" \r\n          align=\"center\"\r\n          sx={{ \r\n            mb: 8,\r\n            color: '#00FFB8',\r\n            fontWeight: 'medium',\r\n          }}\r\n        >\r\n          我们只收取收益的10%，让您获得最大收益\r\n        </Typography>\r\n\r\n        <Grid container spacing={4} sx={{ mb: 8 }}>\r\n          {features.map((feature, index) => (\r\n            <Grid item xs={12} md={4} key={index}>\r\n              <Box sx={{ textAlign: 'center' }}>\r\n                {feature.icon}\r\n                <Typography variant=\"h6\" sx={{ mt: 2, mb: 1 }}>\r\n                  {feature.title}\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                  {feature.description}\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n        <StyledPricingCard>\r\n          <Box sx={{ p: 4, textAlign: 'center' }}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              收益分成\r\n            </Typography>\r\n            <Typography variant=\"h3\" sx={{ color: '#00FFB8', mb: 2 }}>\r\n              收益的10%\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\r\n              无基础费用，无隐藏收费\r\n            </Typography>\r\n            <Divider sx={{ my: 3 }} />\r\n            <Typography variant=\"body1\" paragraph>\r\n              • 月化收益50%-300%\r\n            </Typography>\r\n            <Typography variant=\"body1\" paragraph>\r\n              • 收益实时结算，透明可查\r\n            </Typography>\r\n            <Typography variant=\"body1\" paragraph>\r\n              • 支持多种交易策略\r\n            </Typography>\r\n            <Typography variant=\"body1\" paragraph>\r\n              • 24/7 专业团队支持\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              onClick={handleStartClick}\r\n              sx={{\r\n                mt: 4,\r\n                bgcolor: '#00FFB8',\r\n                color: 'black',\r\n                '&:hover': {\r\n                  bgcolor: '#00E6A5',\r\n                },\r\n                px: 4,\r\n                py: 1.5,\r\n                fontSize: '1.1rem',\r\n              }}\r\n            >\r\n              立即开始\r\n            </Button>\r\n          </Box>\r\n        </StyledPricingCard>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PricingPage; ","import React from 'react';\r\nimport { Box, Container, Typography, Grid, Card, CardContent, Button, List, ListItem, ListItemIcon } from '@mui/material';\r\nimport CodeIcon from '@mui/icons-material/Code';\r\nimport SecurityIcon from '@mui/icons-material/Security';\r\nimport SpeedIcon from '@mui/icons-material/Speed';\r\nimport { GradientTitle } from '@/components/common/GradientTitle';\r\nimport PandaCard from '@/components/common/PandaCard';\r\n\r\nconst ApiPage: React.FC = () => {\r\n  const features = [\r\n    {\r\n      icon: <CodeIcon />,\r\n      title: 'API文档',\r\n      description: '详细的API文档，支持多种编程语言',\r\n    },\r\n    {\r\n      icon: <SecurityIcon />,\r\n      title: '安全认证',\r\n      description: '多重安全认证机制，保障API调用安全',\r\n    },\r\n    {\r\n      icon: <SpeedIcon />,\r\n      title: '高性能',\r\n      description: '低延迟、高并发的API服务',\r\n    },\r\n  ];\r\n\r\n  const endpoints = [\r\n    {\r\n      method: 'GET',\r\n      path: '/api/v1/market/ticker',\r\n      description: '获取市场行情数据',\r\n    },\r\n    {\r\n      method: 'POST',\r\n      path: '/api/v1/trade/order',\r\n      description: '创建交易订单',\r\n    },\r\n    {\r\n      method: 'GET',\r\n      path: '/api/v1/account/balance',\r\n      description: '查询账户余额',\r\n    },\r\n    {\r\n      method: 'GET',\r\n      path: '/api/v1/strategy/status',\r\n      description: '获取策略运行状态',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ py: 8 }}>\r\n      <Container maxWidth=\"lg\">\r\n        <GradientTitle variant=\"h2\" align=\"center\" sx={{ mb: 6 }}>\r\n          API 服务\r\n        </GradientTitle>\r\n        <Grid container spacing={4}>\r\n          {features.map((feature, index) => (\r\n            <Grid item xs={12} md={4} key={index}>\r\n              <PandaCard>\r\n                <CardContent>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                    <ListItemIcon sx={{ minWidth: 40 }}>\r\n                      {feature.icon}\r\n                    </ListItemIcon>\r\n                    <Typography variant=\"h5\" component=\"h3\">\r\n                      {feature.title}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Typography color=\"text.secondary\">\r\n                    {feature.description}\r\n                  </Typography>\r\n                </CardContent>\r\n              </PandaCard>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n        <Box sx={{ mb: 6 }}>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            主要接口\r\n          </Typography>\r\n          <PandaCard>\r\n            <List>\r\n              {endpoints.map((endpoint, index) => (\r\n                <ListItem key={index} sx={{ display: 'block', mb: 2 }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{\r\n                        bgcolor: endpoint.method === 'GET' ? '#00FFB8' : '#FF6B6B',\r\n                        color: 'white',\r\n                        px: 2,\r\n                        py: 0.5,\r\n                        borderRadius: 1,\r\n                        mr: 2,\r\n                      }}\r\n                    >\r\n                      {endpoint.method}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" sx={{ fontFamily: 'monospace' }}>\r\n                      {endpoint.path}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {endpoint.description}\r\n                  </Typography>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </PandaCard>\r\n        </Box>\r\n\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            sx={{\r\n              bgcolor: '#00FFB8',\r\n              color: 'white',\r\n              '&:hover': {\r\n                bgcolor: '#00E6A5',\r\n              },\r\n            }}\r\n          >\r\n            查看完整API文档\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ApiPage; ","import React from 'react';\r\nimport { Box, Container, Typography, Grid, Card, CardContent, Button, List, ListItem, ListItemIcon, Chip, Divider } from '@mui/material';\r\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\r\nimport AutoGraphIcon from '@mui/icons-material/AutoGraph';\r\nimport SecurityIcon from '@mui/icons-material/Security';\r\nimport PsychologyIcon from '@mui/icons-material/Psychology';\r\nimport { Timeline as TimelineIcon } from '@mui/icons-material';\r\nimport SpeedIcon from '@mui/icons-material/Speed';\r\nimport { GradientTitle } from '@/components/common/GradientTitle';\r\nimport PandaCard from '@/components/common/PandaCard';\r\n\r\nconst QuantPage: React.FC = () => {\r\n  const features = [\r\n    {\r\n      title: '智能策略',\r\n      description: '基于人工智能的交易策略，自动适应市场变化',\r\n      icon: <PsychologyIcon sx={{ fontSize: 40, color: '#00FFB8' }} />,\r\n    },\r\n    {\r\n      title: '回测系统',\r\n      description: '强大的回测系统，验证策略的有效性',\r\n      icon: <AutoGraphIcon sx={{ fontSize: 40, color: '#00FFB8' }} />,\r\n    },\r\n    {\r\n      title: '风险控制',\r\n      description: '多重风险控制机制，保障资金安全',\r\n      icon: <SecurityIcon sx={{ fontSize: 40, color: '#00FFB8' }} />,\r\n    },\r\n    {\r\n      title: '实时监控',\r\n      description: '24/7实时监控系统，确保交易安全',\r\n      icon: <TrendingUpIcon sx={{ fontSize: 40, color: '#00FFB8' }} />,\r\n    },\r\n    {\r\n      title: '数据分析',\r\n      description: '深度市场数据分析，发现交易机会',\r\n      icon: <TimelineIcon sx={{ fontSize: 40, color: '#00FFB8' }} />,\r\n    },\r\n    {\r\n      title: '高速执行',\r\n      description: '毫秒级交易执行，把握市场机会',\r\n      icon: <SpeedIcon sx={{ fontSize: 40, color: '#00FFB8' }} />,\r\n    },\r\n  ];\r\n\r\n  const strategies = [\r\n    {\r\n      name: '趋势跟踪',\r\n      description: '基于技术指标的 trend following 策略，适合趋势明显的市场。',\r\n      performance: '+15.2%',\r\n      risk: '中等',\r\n      tags: ['趋势交易', '技术分析', 'ATR指标'],\r\n    },\r\n    {\r\n      name: '均值回归',\r\n      description: '利用价格偏离均值的特性进行交易，适合震荡市场。',\r\n      performance: '+12.8%',\r\n      risk: '低',\r\n      tags: ['震荡交易', '统计套利', '布林带'],\r\n    },\r\n    {\r\n      name: '套利策略',\r\n      description: '利用市场价差进行套利交易，风险较低，收益稳定。',\r\n      performance: '+8.5%',\r\n      risk: '低',\r\n      tags: ['套利交易', '价差交易', '低风险'],\r\n    },\r\n    {\r\n      name: '网格交易',\r\n      description: '在价格区间内设置网格，利用价格波动获取收益。',\r\n      performance: '+10.3%',\r\n      risk: '低',\r\n      tags: ['网格交易', '区间交易', '自动化'],\r\n    },\r\n    {\r\n      name: '动量策略',\r\n      description: '捕捉市场动量，跟随强势趋势获取收益。',\r\n      performance: '+18.6%',\r\n      risk: '高',\r\n      tags: ['动量交易', '趋势跟踪', 'RSI指标'],\r\n    },\r\n    {\r\n      name: '对冲策略',\r\n      description: '通过多空对冲降低风险，获取稳定收益。',\r\n      performance: '+9.2%',\r\n      risk: '低',\r\n      tags: ['对冲交易', '风险对冲', '稳定收益'],\r\n    },\r\n  ];\r\n\r\n  const dailyStrategies = [\r\n    {\r\n      date: '2024-03-20',\r\n      name: '超级趋势策略',\r\n      market: 'BTC/USDT',\r\n      signal: '买入',\r\n      confidence: '高',\r\n      description: '基于ATR指标的超级趋势策略发出买入信号，当前市场趋势明显。',\r\n    },\r\n    {\r\n      date: '2024-03-20',\r\n      name: '网格交易策略',\r\n      market: 'ETH/USDT',\r\n      signal: '持有',\r\n      confidence: '中',\r\n      description: '网格交易策略在预设区间内运行良好，建议继续持有。',\r\n    },\r\n    {\r\n      date: '2024-03-20',\r\n      name: '动量策略',\r\n      market: 'SOL/USDT',\r\n      signal: '卖出',\r\n      confidence: '高',\r\n      description: '动量指标显示超买，建议获利了结。',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ py: 8 }}>\r\n      <Container maxWidth=\"lg\">\r\n        <GradientTitle variant=\"h2\" align=\"center\" sx={{ mb: 6 }}>\r\n          量化交易\r\n        </GradientTitle>\r\n        <Grid container spacing={4}>\r\n          {features.map((feature, index) => (\r\n            <Grid item xs={12} md={4} key={index}>\r\n              <PandaCard>\r\n                <CardContent>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                    <ListItemIcon sx={{ minWidth: 40 }}>\r\n                      {feature.icon}\r\n                    </ListItemIcon>\r\n                    <Typography variant=\"h5\" component=\"h3\">\r\n                      {feature.title}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Typography color=\"text.secondary\">\r\n                    {feature.description}\r\n                  </Typography>\r\n                </CardContent>\r\n              </PandaCard>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default QuantPage; ","import React, { useState } from 'react';\r\nimport { Box, Container, Typography, Grid, Card, CardContent, Button, Chip, Tabs, Tab } from '@mui/material';\r\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\r\nimport AutoGraphIcon from '@mui/icons-material/AutoGraph';\r\nimport SecurityIcon from '@mui/icons-material/Security';\r\nimport { GradientTitle } from '@/components/common/GradientTitle';\r\nimport PandaCard from '@/components/common/PandaCard';\r\n\r\nconst StrategiesPage: React.FC = () => {\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const strategies = [\r\n    {\r\n      name: '超级趋势策略',\r\n      description: '基于ATR指标的动态趋势跟踪策略，自动适应市场波动。',\r\n      performance: '月化收益50%-300%',\r\n      risk: '中等',\r\n      category: '趋势跟踪',\r\n      tags: ['ATR', '趋势跟踪', '动态止损'],\r\n      supportedPlatforms: ['币安', 'OKX', 'Gate', 'Bitget', 'MT4'],\r\n    },\r\n    {\r\n      name: '网格交易策略',\r\n      description: '在价格区间内设置网格，利用价格波动获取收益。',\r\n      performance: '月化收益50%-300%',\r\n      risk: '低',\r\n      category: '区间交易',\r\n      tags: ['网格', '区间交易', '低风险'],\r\n      supportedPlatforms: ['币安', 'OKX', 'Gate', 'Bitget', 'MT4'],\r\n    },\r\n    {\r\n      name: '动量突破策略',\r\n      description: '捕捉价格突破关键位后的动量行情，适合趋势启动阶段。',\r\n      performance: '月化收益50%-300%',\r\n      risk: '中等',\r\n      category: '突破交易',\r\n      tags: ['动量', '突破', '趋势启动'],\r\n      supportedPlatforms: ['币安', 'OKX', 'Gate', 'Bitget', 'MT4'],\r\n    },\r\n    {\r\n      name: '套利策略',\r\n      description: '利用不同交易所之间的价差进行套利交易。',\r\n      performance: '月化收益50%-300%',\r\n      risk: '低',\r\n      category: '套利',\r\n      tags: ['套利', '低风险', '稳定收益'],\r\n      supportedPlatforms: ['币安', 'OKX', 'Gate', 'Bitget'],\r\n    },\r\n  ];\r\n\r\n  const platforms = [\r\n    {\r\n      name: '加密货币交易所',\r\n      description: '支持币安、OKX、Gate、Bitget等主流交易所',\r\n      features: ['现货交易', '合约交易', 'API接入', '实时监控'],\r\n      icon: '🪙',\r\n    },\r\n    {\r\n      name: 'MT4交易平台',\r\n      description: '支持伦敦金、外汇等传统金融产品交易',\r\n      features: ['黄金交易', '外汇交易', 'API接入', '实时监控'],\r\n      icon: '📊',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ py: 8 }}>\r\n      <Box sx={{ mb: 6, textAlign: 'center' }}>\r\n        <GradientTitle>\r\n          量化策略\r\n        </GradientTitle>\r\n        <Typography variant=\"subtitle1\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n          智能交易策略，让您的投资更高效\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Box sx={{ mb: 4 }}>\r\n        <Tabs\r\n          value={tabValue}\r\n          onChange={handleTabChange}\r\n          centered\r\n          sx={{\r\n            '& .MuiTab-root': {\r\n              color: 'text.secondary',\r\n              '&.Mui-selected': {\r\n                color: '#00FFB8',\r\n              },\r\n            },\r\n            '& .MuiTabs-indicator': {\r\n              bgcolor: '#00FFB8',\r\n            },\r\n          }}\r\n        >\r\n          <Tab label=\"全部策略\" />\r\n          <Tab label=\"趋势跟踪\" />\r\n          <Tab label=\"区间交易\" />\r\n          <Tab label=\"套利策略\" />\r\n        </Tabs>\r\n      </Box>\r\n      \r\n      <Grid container spacing={4}>\r\n        {strategies.map((strategy, index) => (\r\n          <Grid item xs={12} md={6} key={index}>\r\n            <PandaCard>\r\n              <Card sx={{ height: '100%' }}>\r\n                <CardContent>\r\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>\r\n                    <Typography variant=\"h6\">\r\n                      {strategy.name}\r\n                    </Typography>\r\n                    <Chip\r\n                      label={strategy.category}\r\n                      size=\"small\"\r\n                      sx={{\r\n                        bgcolor: 'rgba(0, 255, 184, 0.1)',\r\n                        color: '#00FFB8',\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\r\n                    {strategy.description}\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', gap: 1, mb: 2, flexWrap: 'wrap' }}>\r\n                    {strategy.tags.map((tag, tagIndex) => (\r\n                      <Chip\r\n                        key={tagIndex}\r\n                        label={tag}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        sx={{\r\n                          borderColor: 'rgba(0, 255, 184, 0.5)',\r\n                          color: 'text.secondary',\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </Box>\r\n                  <Box sx={{ mb: 2 }}>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      支持平台：\r\n                    </Typography>\r\n                    <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\r\n                      {strategy.supportedPlatforms.map((platform, platformIndex) => (\r\n                        <Chip\r\n                          key={platformIndex}\r\n                          label={platform}\r\n                          size=\"small\"\r\n                          sx={{\r\n                            bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                            color: 'text.secondary',\r\n                          }}\r\n                        />\r\n                      ))}\r\n                    </Box>\r\n                  </Box>\r\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <Box>\r\n                      <Typography variant=\"body2\">\r\n                        月化收益：{strategy.performance}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\">\r\n                        风险等级：{strategy.risk}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"small\"\r\n                      sx={{\r\n                        bgcolor: '#00FFB8',\r\n                        color: 'white',\r\n                        '&:hover': {\r\n                          bgcolor: '#00E6A5',\r\n                        },\r\n                      }}\r\n                    >\r\n                      查看详情\r\n                    </Button>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </PandaCard>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <Box sx={{ mt: 8, mb: 6, textAlign: 'center' }}>\r\n        <GradientTitle>\r\n          支持交易平台\r\n        </GradientTitle>\r\n        <Typography variant=\"subtitle1\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n          支持主流加密货币交易所和MT4平台\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Grid container spacing={4}>\r\n        {platforms.map((platform, index) => (\r\n          <Grid item xs={12} md={6} key={index}>\r\n            <PandaCard>\r\n              <Card sx={{ height: '100%' }}>\r\n                <CardContent>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                    <Typography variant=\"h4\" sx={{ mr: 2 }}>\r\n                      {platform.icon}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\">\r\n                      {platform.name}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\r\n                    {platform.description}\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\r\n                    {platform.features.map((feature, featureIndex) => (\r\n                      <Chip\r\n                        key={featureIndex}\r\n                        label={feature}\r\n                        size=\"small\"\r\n                        sx={{\r\n                          bgcolor: 'rgba(0, 255, 184, 0.05)',\r\n                          color: 'text.secondary',\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </PandaCard>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StrategiesPage; ","import React from 'react';\r\nimport { Box, Container, Typography, Grid, Card, CardContent, Button, Stepper, Step, StepLabel, StepContent } from '@mui/material';\r\nimport GlobalBackground from '@/components/common/GlobalBackground';\r\nimport { GradientTitle } from '@/components/common/GradientTitle';\r\nimport PandaCard from '@/components/common/PandaCard';\r\n\r\nconst ProfitPage: React.FC = () => {\r\n  const steps = [\r\n    {\r\n      label: '选择交易方式',\r\n      description: '您可以选择以下两种方式开始交易：',\r\n      options: [\r\n        {\r\n          title: '充值USDT到平台',\r\n          description: '将USDT充值到平台账户，系统自动运行策略，无需手动操作。',\r\n          icon: '💳',\r\n        },\r\n        {\r\n          title: '连接交易所API',\r\n          description: '提供币安、OKX、Gate、Bitget等交易所的API，我们通过API进行交易。',\r\n          icon: '🔗',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: '选择交易策略',\r\n      description: '根据您的风险偏好选择适合的策略：',\r\n      options: [\r\n        {\r\n          title: '超级趋势策略',\r\n          description: '月化收益50%-300%，适合追求高收益的投资者。',\r\n          icon: '📈',\r\n        },\r\n        {\r\n          title: '网格交易策略',\r\n          description: '月化收益50%-300%，适合追求稳定收益的投资者。',\r\n          icon: '📊',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: '开始交易',\r\n      description: '系统自动执行交易策略，您只需等待收益：',\r\n      options: [\r\n        {\r\n          title: '实时监控',\r\n          description: '24/7实时监控系统，确保交易安全。',\r\n          icon: '👀',\r\n        },\r\n        {\r\n          title: '收益结算',\r\n          description: '收益实时结算，我们只收取收益的10%。',\r\n          icon: '💰',\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative', minHeight: '100vh' }}>\r\n      <GlobalBackground />\r\n      \r\n      <Container maxWidth=\"lg\" sx={{ py: 8 }}>\r\n        <Box sx={{ mb: 6, textAlign: 'center' }}>\r\n          <GradientTitle>\r\n            收益榜\r\n          </GradientTitle>\r\n          <Typography variant=\"subtitle1\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n            月化收益50%-300%，我们只收取收益的10%\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12}>\r\n            <PandaCard>\r\n              <Stepper orientation=\"vertical\">\r\n                {steps.map((step, index) => (\r\n                  <Step key={index} active={true}>\r\n                    <StepLabel>{step.label}</StepLabel>\r\n                    <StepContent>\r\n                      <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\r\n                        {step.description}\r\n                      </Typography>\r\n                      <Grid container spacing={2} sx={{ mt: 2 }}>\r\n                        {step.options.map((option, optionIndex) => (\r\n                          <Grid item xs={12} md={6} key={optionIndex}>\r\n                            <Card sx={{ height: '100%' }}>\r\n                              <CardContent>\r\n                                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                                  <Typography variant=\"h4\" sx={{ mr: 2 }}>\r\n                                    {option.icon}\r\n                                  </Typography>\r\n                                  <Typography variant=\"h6\">\r\n                                    {option.title}\r\n                                  </Typography>\r\n                                </Box>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                  {option.description}\r\n                                </Typography>\r\n                              </CardContent>\r\n                            </Card>\r\n                          </Grid>\r\n                        ))}\r\n                      </Grid>\r\n                    </StepContent>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n            </PandaCard>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <PandaCard>\r\n              <Box sx={{ p: 3 }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  收益分配说明\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\r\n                  我们采用透明的收益分配机制：\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\">\r\n                      直接收益\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      您获得收益的90%，我们收取10%作为服务费。\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\">\r\n                      推荐收益\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      推荐新用户加入，您可以获得：\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ pl: 2 }}>\r\n                      • 第一代用户收益的20%\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ pl: 2 }}>\r\n                      • 第二代用户收益的10%\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\">\r\n                      结算方式\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      所有收益实时结算，无需等待。\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </PandaCard>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfitPage; ","import React from 'react';\r\nimport { Box, Container, Typography, Grid, Paper, Chip } from '@mui/material';\r\nimport GlobalBackground from '@/components/common/GlobalBackground';\r\nimport Navbar from '@/components/common/Navbar';\r\nimport { GradientTitle } from '@/components/common/GradientTitle';\r\nimport PandaCard from '@/components/common/PandaCard';\r\n\r\nconst ChangelogPage: React.FC = () => {\r\n  const updates = [\r\n    {\r\n      version: '1.2.0',\r\n      date: '2024-04-24',\r\n      type: 'feature',\r\n      changes: [\r\n        '新增超级趋势策略',\r\n        '优化网格交易策略参数',\r\n        '添加实时收益监控功能',\r\n        '改进用户界面交互体验'\r\n      ]\r\n    },\r\n    {\r\n      version: '1.1.0',\r\n      date: '2024-04-15',\r\n      type: 'improvement',\r\n      changes: [\r\n        '优化API接口响应速度',\r\n        '改进风险控制系统',\r\n        '添加更多交易对支持',\r\n        '优化移动端显示效果'\r\n      ]\r\n    },\r\n    {\r\n      version: '1.0.0',\r\n      date: '2024-04-01',\r\n      type: 'release',\r\n      changes: [\r\n        '平台正式上线',\r\n        '支持基础交易策略',\r\n        '实现用户认证系统',\r\n        '完成基础功能开发'\r\n      ]\r\n    }\r\n  ];\r\n\r\n  const getChipColor = (type: string) => {\r\n    switch (type) {\r\n      case 'feature':\r\n        return '#00FFB8';\r\n      case 'improvement':\r\n        return '#4CAF50';\r\n      case 'release':\r\n        return '#2196F3';\r\n      default:\r\n        return '#666666';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative', minHeight: '100vh' }}>\r\n      <GlobalBackground />\r\n      <Navbar />\r\n      \r\n      <Container maxWidth=\"lg\" sx={{ py: 8 }}>\r\n        <GradientTitle\r\n          title=\"更新日志\"\r\n          subtitle=\"了解平台最新动态\"\r\n          sx={{ mb: 6 }}\r\n        />\r\n\r\n        <Grid container spacing={4}>\r\n          {updates.map((update, index) => (\r\n            <Grid item xs={12} key={index}>\r\n              <PandaCard>\r\n                <Box sx={{ p: 3 }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                    <Typography variant=\"h5\" sx={{ mr: 2 }}>\r\n                      v{update.version}\r\n                    </Typography>\r\n                    <Chip\r\n                      label={update.type === 'feature' ? '新功能' : update.type === 'improvement' ? '优化' : '发布'}\r\n                      sx={{\r\n                        bgcolor: getChipColor(update.type),\r\n                        color: 'white',\r\n                        fontWeight: 500,\r\n                      }}\r\n                    />\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ ml: 'auto' }}>\r\n                      {update.date}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box sx={{ pl: 2 }}>\r\n                    {update.changes.map((change, idx) => (\r\n                      <Typography key={idx} variant=\"body1\" sx={{ mb: 1 }}>\r\n                        • {change}\r\n                      </Typography>\r\n                    ))}\r\n                  </Box>\r\n                </Box>\r\n              </PandaCard>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChangelogPage; ","import React from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n} from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { motion } from 'framer-motion';\r\nimport { fadeIn, slideUp } from '../../animations';\r\nimport { StyledCard } from '../../components/common/StyledCard';\r\nimport { GradientTitle } from '../../components/common/GradientTitle';\r\n\r\nconst CookiesPolicy = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const cookieTypes = [\r\n    {\r\n      name: t('cookies.essential.title', '必要 Cookie'),\r\n      description: t('cookies.essential.description', '这些 Cookie 对于网站的基本功能是必需的，无法关闭。它们通常仅用于响应您所做的操作，例如设置隐私偏好、登录或填写表单。'),\r\n    },\r\n    {\r\n      name: t('cookies.analytics.title', '分析 Cookie'),\r\n      description: t('cookies.analytics.description', '这些 Cookie 帮助我们了解访问者如何与网站互动。它们帮助我们改进网站的功能和用户体验。'),\r\n    },\r\n    {\r\n      name: t('cookies.functional.title', '功能 Cookie'),\r\n      description: t('cookies.functional.description', '这些 Cookie 使网站能够提供增强的功能和个性化设置。它们可能由我们或第三方提供商设置。'),\r\n    },\r\n    {\r\n      name: t('cookies.marketing.title', '营销 Cookie'),\r\n      description: t('cookies.marketing.description', '这些 Cookie 用于跟踪访问者跨网站的行为。目的是显示与个人用户相关和吸引人的广告。'),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <motion.div\r\n      initial=\"initial\"\r\n      animate=\"animate\"\r\n      variants={fadeIn}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <Box sx={{ py: 8 }}>\r\n          <motion.div variants={slideUp}>\r\n            <GradientTitle variant=\"h3\" align=\"center\" gutterBottom>\r\n              {t('cookies.title', 'Cookie 政策')}\r\n            </GradientTitle>\r\n          </motion.div>\r\n\r\n          <StyledCard>\r\n            <Box sx={{ p: 4 }}>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                {t('cookies.introduction.title', '什么是 Cookie？')}\r\n              </Typography>\r\n              <Typography paragraph>\r\n                {t('cookies.introduction.content', 'Cookie 是当您访问网站时存储在您设备上的小型文本文件。它们被广泛用于使网站工作或更有效地工作，以及向网站所有者提供信息。')}\r\n              </Typography>\r\n\r\n              <Typography variant=\"h5\" gutterBottom sx={{ mt: 4 }}>\r\n                {t('cookies.types.title', '我们使用的 Cookie 类型')}\r\n              </Typography>\r\n              <List>\r\n                {cookieTypes.map((type, index) => (\r\n                  <React.Fragment key={type.name}>\r\n                    <ListItem alignItems=\"flex-start\">\r\n                      <ListItemText\r\n                        primary={\r\n                          <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\r\n                            {type.name}\r\n                          </Typography>\r\n                        }\r\n                        secondary={type.description}\r\n                      />\r\n                    </ListItem>\r\n                    {index < cookieTypes.length - 1 && <Divider component=\"li\" />}\r\n                  </React.Fragment>\r\n                ))}\r\n              </List>\r\n\r\n              <Typography variant=\"h5\" gutterBottom sx={{ mt: 4 }}>\r\n                {t('cookies.control.title', '如何控制 Cookie')}\r\n              </Typography>\r\n              <Typography paragraph>\r\n                {t('cookies.control.content', '您可以通过浏览器设置控制或删除 Cookie。如果您禁用 Cookie，请注意，网站的某些部分可能无法正常工作。')}\r\n              </Typography>\r\n\r\n              <Typography variant=\"h5\" gutterBottom sx={{ mt: 4 }}>\r\n                {t('cookies.contact.title', '联系我们')}\r\n              </Typography>\r\n              <Typography paragraph>\r\n                {t('cookies.contact.content', '如果您对我们的 Cookie 政策有任何疑问，请通过以下方式联系我们：')}\r\n              </Typography>\r\n              <Typography>\r\n                {t('cookies.contact.email', '电子邮件：')} privacy@pandaquant.com\r\n              </Typography>\r\n            </Box>\r\n          </StyledCard>\r\n        </Box>\r\n      </Container>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default CookiesPolicy; ","import React from 'react';\r\nimport { RouteObject, Navigate } from 'react-router-dom';\r\nimport Login from '../pages/login';\r\nimport Register from '../pages/Register';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport HomePage from '../pages/HomePage';\r\nimport PrivateRoute from '../components/PrivateRoute';\r\nimport Layout from '../components/Layout';\r\nimport ResourceLayout from '../components/common/ResourceLayout';\r\nimport AuthLayout from '../components/AuthLayout';\r\nimport StrategyManagement from '../pages/StrategyManagement';\r\nimport StrategyDetail from '../pages/StrategyDetail';\r\nimport ApiManagement from '../pages/ApiManagement';\r\nimport ApiSecuritySettings from '../pages/ApiSecuritySettings';\r\nimport AccountSettings from '../pages/AccountSettings';\r\nimport Profile from '../pages/Profile';\r\nimport TwoFactorAuth from '../pages/TwoFactorAuth';\r\nimport Deposit from '../pages/Deposit';\r\nimport Withdraw from '../pages/Withdraw';\r\nimport MessageCenter from '../pages/MessageCenter';\r\nimport MessageDetail from '../pages/MessageDetail';\r\nimport Invite from '../pages/Invite';\r\nimport ReferralRewards from '../pages/ReferralRewards';\r\nimport ReferralLink from '../pages/ReferralLink';\r\nimport NotFound from '../pages/NotFound';\r\nimport AboutPage from '../pages/About';\r\nimport TeamPage from '../pages/about/team';\r\nimport NewsPage from '../pages/news';\r\nimport ContactPage from '../pages/about/contact';\r\nimport PartnersPage from '../pages/about/partners';\r\nimport CareersPage from '../pages/company/careers';\r\nimport DisclaimerPage from '../pages/legal/disclaimer';\r\nimport PrivacyPage from '../pages/legal/privacy';\r\nimport TermsPage from '../pages/legal/terms';\r\nimport RiskPage from '../pages/legal/risk';\r\nimport HelpPage from '../pages/resources/help';\r\nimport BlogPage from '../pages/resources/blog';\r\nimport CommunityPage from '../pages/resources/community';\r\nimport ProductPage from '../pages/product';\r\nimport PricingPage from '../pages/product/pricing';\r\nimport ApiPage from '../pages/product/api';\r\nimport QuantPage from '../pages/product/quant';\r\nimport StrategiesPage from '../pages/product/strategies';\r\nimport ProfitPage from '../pages/product/profit';\r\nimport Loading from '../pages/Loading';\r\nimport Unauthorized from '../pages/Unauthorized';\r\nimport BlogDetailPage from '../pages/resources/blog/[id]';\r\nimport ChangelogPage from '../pages/resources/changelog';\r\nimport CookiesPolicy from '../pages/legal/cookies';\r\n\r\nexport const routes: RouteObject[] = [\r\n  {\r\n    path: '/',\r\n    element: <Layout />,\r\n    children: [\r\n      {\r\n        index: true,\r\n        element: <HomePage />\r\n      },\r\n      {\r\n        path: 'login',\r\n        element: <AuthLayout><Login /></AuthLayout>\r\n      },\r\n      {\r\n        path: 'register',\r\n        element: <AuthLayout><Register /></AuthLayout>\r\n      },\r\n      {\r\n        path: 'dashboard',\r\n        element: (\r\n          <PrivateRoute>\r\n            <Dashboard />\r\n          </PrivateRoute>\r\n        )\r\n      },\r\n      {\r\n        path: 'product',\r\n        element: <ProductPage />\r\n      },\r\n      {\r\n        path: 'product/strategies',\r\n        element: <StrategiesPage />\r\n      },\r\n      {\r\n        path: 'product/quant',\r\n        element: <QuantPage />\r\n      },\r\n      {\r\n        path: 'product/api',\r\n        element: <ApiPage />\r\n      },\r\n      {\r\n        path: 'product/pricing',\r\n        element: <PricingPage />\r\n      },\r\n      {\r\n        path: 'profit',\r\n        element: <ProfitPage />\r\n      },\r\n      {\r\n        path: 'my-strategies',\r\n        element: (\r\n          <PrivateRoute>\r\n            <StrategyManagement />\r\n          </PrivateRoute>\r\n        )\r\n      },\r\n      {\r\n        path: 'my-strategies/:id',\r\n        element: (\r\n          <PrivateRoute>\r\n            <StrategyDetail />\r\n          </PrivateRoute>\r\n        )\r\n      },\r\n      {\r\n        path: 'security',\r\n        element: <ApiSecuritySettings />,\r\n        children: [\r\n          {\r\n            path: 'api',\r\n            element: (\r\n              <PrivateRoute>\r\n                <ApiManagement />\r\n              </PrivateRoute>\r\n            )\r\n          },\r\n          {\r\n            path: 'settings',\r\n            element: (\r\n              <PrivateRoute>\r\n                <ApiSecuritySettings />\r\n              </PrivateRoute>\r\n            )\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'invite',\r\n        element: <Invite />,\r\n        children: [\r\n          {\r\n            path: 'rewards',\r\n            element: (\r\n              <PrivateRoute>\r\n                <ReferralRewards />\r\n              </PrivateRoute>\r\n            )\r\n          },\r\n          {\r\n            path: 'link',\r\n            element: (\r\n              <PrivateRoute>\r\n                <ReferralLink />\r\n              </PrivateRoute>\r\n            )\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'account',\r\n        element: (\r\n          <PrivateRoute>\r\n            <AccountSettings />\r\n          </PrivateRoute>\r\n        ),\r\n        children: [\r\n          {\r\n            path: 'profile',\r\n            element: <Profile />\r\n          },\r\n          {\r\n            path: 'security',\r\n            element: <TwoFactorAuth />\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'wallet',\r\n        element: (\r\n          <PrivateRoute>\r\n            <Deposit />\r\n          </PrivateRoute>\r\n        ),\r\n        children: [\r\n          {\r\n            path: 'deposit',\r\n            element: <Deposit />\r\n          },\r\n          {\r\n            path: 'withdraw',\r\n            element: <Withdraw />\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'messages',\r\n        element: (\r\n          <PrivateRoute>\r\n            <MessageCenter />\r\n          </PrivateRoute>\r\n        ),\r\n        children: [\r\n          {\r\n            path: ':id',\r\n            element: <MessageDetail />\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'about',\r\n        element: <AboutPage />\r\n      },\r\n      {\r\n        path: 'team',\r\n        element: <TeamPage />\r\n      },\r\n      {\r\n        path: 'careers',\r\n        element: <Navigate to=\"/company/careers\" replace />\r\n      },\r\n      {\r\n        path: 'company/careers',\r\n        element: <CareersPage />\r\n      },\r\n      {\r\n        path: 'partners',\r\n        element: <PartnersPage />\r\n      },\r\n      {\r\n        path: 'contact',\r\n        element: <ContactPage />\r\n      },\r\n      {\r\n        path: 'news',\r\n        element: <NewsPage />\r\n      },\r\n      {\r\n        path: 'legal',\r\n        children: [\r\n          {\r\n            path: 'disclaimer',\r\n            element: <DisclaimerPage />\r\n          },\r\n          {\r\n            path: 'privacy',\r\n            element: <PrivacyPage />\r\n          },\r\n          {\r\n            path: 'terms',\r\n            element: <TermsPage />\r\n          },\r\n          {\r\n            path: 'risk',\r\n            element: <RiskPage />\r\n          },\r\n          {\r\n            path: 'cookies',\r\n            element: <CookiesPolicy />\r\n          },\r\n          {\r\n            path: 'service-terms',\r\n            element: <TermsPage />\r\n          },\r\n          {\r\n            path: 'privacy-policy',\r\n            element: <PrivacyPage />\r\n          },\r\n          {\r\n            path: 'risk-warning',\r\n            element: <RiskPage />\r\n          },\r\n          {\r\n            path: 'footer/terms',\r\n            element: <TermsPage />\r\n          },\r\n          {\r\n            path: 'footer/privacy',\r\n            element: <PrivacyPage />\r\n          },\r\n          {\r\n            path: 'footer/risk',\r\n            element: <RiskPage />\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'resources',\r\n        element: <ResourceLayout />,\r\n        children: [\r\n          {\r\n            path: 'help',\r\n            element: <HelpPage />\r\n          },\r\n          {\r\n            path: 'blog',\r\n            element: <BlogPage />\r\n          },\r\n          {\r\n            path: 'community',\r\n            element: <CommunityPage />\r\n          },\r\n          {\r\n            path: 'changelog',\r\n            element: <ChangelogPage />\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: '*',\r\n        element: <NotFound />\r\n      }\r\n    ]\r\n  }\r\n]; ","import React from 'react';\r\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\r\nimport { Web3Provider } from './contexts/Web3Context';\r\nimport { AuthProvider } from './contexts/AuthContext';\r\nimport { ThemeProvider } from './contexts/ThemeContext';\r\nimport { BackgroundProvider } from './contexts/BackgroundContext';\r\nimport { NotificationProvider } from './contexts/NotificationContext';\r\nimport { I18nextProvider } from 'react-i18next';\r\nimport i18n from './i18n';\r\nimport { routes } from './config/routes';\r\nimport { Box, CircularProgress } from '@mui/material';\r\n\r\nconst LoadingSpinner = () => (\r\n  <Box\r\n    sx={{\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      height: '100vh',\r\n      width: '100vw',\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      backgroundColor: 'background.default',\r\n      zIndex: 9999,\r\n    }}\r\n  >\r\n    <CircularProgress />\r\n  </Box>\r\n);\r\n\r\n// Create router instance with future flags\r\nconst router = createBrowserRouter(routes, {\r\n  future: {\r\n    v7_normalizeFormMethod: true\r\n  },\r\n  basename: '/',\r\n});\r\n\r\nconst App: React.FC = () => {\r\n  console.log('App rendered');\r\n  console.log('Routes:', routes);\r\n\r\n  return (\r\n    <I18nextProvider i18n={i18n}>\r\n      <ThemeProvider>\r\n        <BackgroundProvider>\r\n          <Web3Provider>\r\n            <AuthProvider>\r\n              <NotificationProvider>\r\n                <RouterProvider \r\n                  router={router}\r\n                  fallbackElement={<LoadingSpinner />}\r\n                />\r\n              </NotificationProvider>\r\n            </AuthProvider>\r\n          </Web3Provider>\r\n        </BackgroundProvider>\r\n      </ThemeProvider>\r\n    </I18nextProvider>\r\n  );\r\n};\r\n\r\nexport default App; ","import { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>\r\n); "],"names":["Web3Context","createContext","Web3Provider","children","account","setAccount","useState","balance","setBalance","isConnected","setIsConnected","connect","provider","ethers.BrowserProvider","accounts","signer","ethers.formatEther","error","disconnect","jsx","useWeb3","context","useContext","API_BASE_URL","api","axios","config","token","response","_a","authApi","email","password","username","code","AuthContext","useAuth","AuthProvider","isAuthenticated","setIsAuthenticated","user","setUser","userStr","loading","setLoading","setError","t","useTranslation","web3","useEffect","loginWithEmail","useCallback","mockUser","err","loginWithWallet","walletType","address","register","errorMessage","_b","logout","value","themeConfig","transitions","typography","createCustomTheme","mode","colors","themeOptions","createTheme","themeUtils","color1","color2","alpha","ThemeContext","ErrorBoundary","Component","props","errorInfo","jsxs","ThemeProvider","setMode","theme","useMemo","newTheme","toggleTheme","prevMode","MUIThemeProvider","CssBaseline","BackgroundContext","BackgroundProvider","backgroundTheme","setBackgroundTheme","useBackgroundContext","NotificationContext","useNotification","NotificationProvider","open","setOpen","message","setMessage","severity","setSeverity","showNotification","msg","sev","handleClose","Snackbar","Alert","supportedLngs","i18n","Backend","LanguageDetector","initReactI18next","enTranslation","zhRoot","zhTranslation","koTranslation","jaTranslation","format","lngs","ns","key","fallbackValue","lng","GlobalBackground","useTheme","getBackgroundStyle","Box","Login","navigate","useNavigate","showPassword","setShowPassword","formData","setFormData","handleChange","e","name","prev","handleSubmit","Container","Grid","motion","Typography","Paper","TrendingUpIcon","ShieldIcon","Avatar","AccountCircleIcon","TextField","InputAdornment","EmailIcon","LockIcon","IconButton","VisibilityOffIcon","VisibilityIcon","Button","ArrowForwardIcon","Link","fadeIn","slideUp","index","staggerChildren","Register","PersonIcon","ToastContainer","setProvider","chainId","setChainId","isInitialized","setIsInitialized","mounted","handleAccountsChanged","args","handleChainChanged","AssetOverview","assets","currency","data","GradientTitle","title","subtitle","UserNavbar","drawerOpen","setDrawerOpen","languageAnchor","setLanguageAnchor","userAnchor","setUserAnchor","scrolled","setScrolled","handleLogout","navItems","DashboardIcon","SettingsIcon","languages","userMenuItems","AccountIcon","PaymentIcon","LogoutIcon","handleScroll","handleLanguageClick","event","handleLanguageClose","handleLanguageChange","handleUserClick","handleUserClose","toggleDrawer","handleNavigation","path","Logo","UserMenu","Menu","item","MenuItem","ListItemText","DesktopNav","LanguageIcon","MobileNav","Fragment","MenuIcon","Drawer","List","ListItem","AppBar","Toolbar","lang","Navbar","location","useLocation","isMobile","useMediaQuery","advantages","SpeedIcon","SecurityIcon","AutoGraphIcon","SupportIcon","CoreAdvantages","advantage","Card","CardContent","HeroSection","PsychologyIcon","kLineData","lastClose","i","high","low","close","_","candle","features","AnalyticsIcon","ApiIcon","FeaturesSection","feature","steps","AddIcon","PlayIcon","HowItWorks","step","SecuritySection","securityFeatures","UserReviews","reviews","setReviews","isLoading","setIsLoading","generatedReviews","countries","contents","country","isMale","randomAmount","randomHours","randomMinutes","date","review","InviteSection","copySuccess","setCopySuccess","inviteCode","records","setRecords","scrollContainerRef","useRef","generateRandomUsername","letters","numbers","tail","isLetter","generateRandomRecord","randomUsername","random","now","time","initialRecords","interval","newRecord","formatTime","handleCopy","inviteBenefits","benefit","ShareIcon","CheckCircleIcon","ContentCopyIcon","PeopleIcon","AnimatePresence","record","AccessTimeIcon","supports","ForumIcon","HelpIcon","SupportSection","support","Footer","footerLinks","socialLinks","TelegramIcon","TwitterIcon","GitHubIcon","social","section","link","PandaCharacter","strategies","TrendIcon","AutoIcon","StrategySection","strategy","Chip","strategyData","SavingsIcon","TimelineIcon","RocketIcon","ProfitSection","profitData","setProfitData","calculateProfit","initialAmount","monthlyReturn","months","monthlyRate","amount","totalProfit","profit","handleInputChange","field","handleSliderChange","handleStrategyChange","MoneyIcon","Slider","BalanceIcon","FormControl","RadioGroup","FormControlLabel","Radio","Breadcrumbs","breadcrumbs","pathnames","x","HomeIcon","currentPath","translationKey","MuiBreadcrumbs","NavigateNextIcon","RouterLink","Layout","isAuthPage","isHomePage","Outlet","DashboardService","timeRange","target","id","strategyId","status","dashboardService","PandaAlert","variant","onClose","closable","icon","action","animate","glow","getAlertStyle","getAnimation","Collapse","AlertTitle","PandaProgress","type","size","color","label","showValue","thickness","getProgressStyle","progress","LinearProgress","CircularProgress","PandaCard","subheader","content","actions","controlledExpanded","onExpand","elevation","gradient","animation","sx","image","imagePosition","backgroundColor","borderRadius","padding","boxShadow","backdropFilter","isExpanded","setIsExpanded","expanded","handleExpand","cardStyle","CardHeader","ExpandMoreIcon","CardActions","PandaTable","columns","page","rowsPerPage","totalRows","onPageChange","onRowsPerPageChange","orderBy","order","onSort","getTableStyle","handleChangePage","newPage","handleChangeRowsPerPage","table","TableContainer","Table","TableHead","TableRow","column","TableCell","TableSortLabel","TableBody","row","TablePagination","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","StrategyReturnDistribution","chartData","options","Bar","RadialLinearScale","PointElement","LineElement","Filler","RiskMetricsRadar","Radar","TradeFrequencyHeatmap","dataset","Chart","METRIC_COLORS","METRIC_LABELS","PerformanceChart","showMetrics","ResponsiveContainer","LineChart","CartesianGrid","XAxis","YAxis","CustomTooltip","metric","Line","active","payload","metrics","_d","_c","COLORS","AssetDistributionChart","currencyData","PieChart","Pie","percent","entry","Cell","CustomLegend","ArcElement","ChartTooltip","Dashboard","assetDistribution","setAssetDistribution","strategyStatus","setStrategyStatus","apiStatus","setApiStatus","profitTargets","setProfitTargets","autoRefresh","setAutoRefresh","refreshInterval","setRefreshInterval","dashboardData","setDashboardData","performanceData","setPerformanceData","lastUpdate","setLastUpdate","riskMetrics","setRiskMetrics","setAssets","returnDistributionData","setReturnDistributionData","riskMetricsData","setRiskMetricsData","tradeFrequencyData","setTradeFrequencyData","fetchDashboardData","fetchProfitTargets","targets","fetchRiskMetrics","fetchAssetDistribution","fetchStrategyStatus","fetchAssets","getApiStatusColor","renderApiStatus","startDate","endDate","currentValue","previousValue","dailyChange","dailyReturn","annualizedReturn","sharpeRatio","maxDrawdown","HomePage","PrivateRoute","Navigate","ResourceLayout","AuthLayout","StrategyManagement","selectedStrategy","setSelectedStrategy","showDetails","setShowDetails","showBacktestResults","setShowBacktestResults","showOptimizationResults","setShowOptimizationResults","isBacktestDialogOpen","setIsBacktestDialogOpen","isOptimizeDialogOpen","setIsOptimizeDialogOpen","backtestStep","setBacktestStep","optimizeStep","setOptimizeStep","isNewStrategyDialogOpen","setIsNewStrategyDialogOpen","isEditDialogOpen","setIsEditDialogOpen","editStrategy","setEditStrategy","setStrategies","newStrategy","setNewStrategy","backtestConfig","setBacktestConfig","optimizeConfig","setOptimizeConfig","handleNewStrategyChange","parent","child","handleAddStrategy","handleStrategySelect","handleBacktestConfigChange","newConfig","handleOptimizeConfigChange","handleStrategyStatusChange","newStatus","handleDeleteStrategy","getReturnColor","returnValue","handleEditStrategyChange","handleSaveStrategy","renderStrategyTable","PlayArrowIcon","PauseIcon","StopIcon","DeleteIcon","StrategyDetails","returns","minReturn","range","binCount","binSize","distribution","ret","binIndex","count","BarChart","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","trades","renderStrategyDetails","Dialog","DialogTitle","CloseIcon","DialogContent","BacktestResults","results","latestResult","AreaChart","Area","renderBacktestResults","renderOptimizationResults","result","renderBacktestDialog","Stepper","Step","StepLabel","InputLabel","Select","s","DialogActions","renderOptimizeDialog","renderNewStrategyDialog","renderEditDialog","StrategyDetail","useParams","setStrategy","handleStrategyAction","containerVariants","itemVariants","ArrowBackIcon","TrendingDownIcon","PandaButton","onClick","disabled","fullWidth","startIcon","endIcon","href","button","PandaChip","onDelete","getChipStyle","ApiManagement","apiKeys","setApiKeys","securitySettings","setSecuritySettings","showAddApiDialog","setShowAddApiDialog","newApiKey","setNewApiKey","isDialogOpen","setIsDialogOpen","isEditMode","setIsEditMode","currentApiKey","setCurrentApiKey","snackbar","setSnackbar","selectedApiKey","setSelectedApiKey","fetchApiKeys","handleAddApi","newApi","handleSecuritySettingChange","setting","getStatusColor","handleSaveApiKey","handleDialogClose","LinkIcon","WarningIcon","EditIcon","Switch","SecurityPage","AccountBalanceIcon","VerifiedIcon","VpnKeyIcon","CloudSyncIcon","SecurityUpdateGoodIcon","VerifiedUserIcon","GppGoodIcon","AccountSettings","activeTab","setActiveTab","profile","setProfile","security","setSecurity","success","setSuccess","isEditing","setIsEditing","handleTabChange","newValue","handleProfileChange","handleSecurityChange","handleSaveProfile","handleSaveSecurity","handleSave","Tabs","Tab","NotificationsIcon","StyledCard","Profile","updateProfile","handleEdit","handleCancel","SaveIcon","CancelIcon","TwoFactorAuth","isEnabled","setIsEnabled","verificationCode","setVerificationCode","secret","setSecret","handleEnable2FA","handleVerify2FA","handleDisable2FA","QRCode","DepositConfirm","setAmount","chain","setChain","txHash","setTxHash","userId","PandaInput","onChange","helperText","required","readOnly","placeholder","input","PandaSelect","getSelectStyle","baseStyle","select","option","CHAINS","fadeInUp","Withdraw","setAddress","fetchWithdrawalRecords","getStatusText","selectedChain","c","WebSocketContext","useWebSocket","MessageCenter","lastMessage","messages","setMessages","newMessage","axiosInstance","notificationTypes","MessageDetail","notification","setNotification","markingRead","setMarkingRead","handleMarkAsRead","getRelativeTime","formatDistanceToNow","zhCN","Divider","MarkEmailReadIcon","Invite","copied","setCopied","inviteLink","LoginIcon","RegisterIcon","ListItemIcon","TimeIcon","ReferralRewards","rewards","setRewards","referralCode","setReferralCode","fetchRewards","fetchReferralCode","handleCopyCode","CopyIcon","referral","ReferralLink","referralLink","setReferralLink","referrals","setReferrals","stats","setStats","fetchData","linkRes","referralsRes","statsRes","handleCopyLink","handleShare","NotFound","AboutPage","TeamPage","teamMembers","member","skill","NewsPage","newsItems","news","ContactPage","contactInfo","PartnersPage","partners","partner","idx","CareersPage","jobOpenings","job","req","tag","DisclaimerPage","disclaimerPoints","point","PrivacyPage","privacyPoints","TermsPage","termsPoints","RiskPage","riskPoints","HelpPage","faqs","categories","category","faq","Accordion","AccordionSummary","AccordionDetails","BlogPage","blogPosts","handleBlogClick","slug","post","CardMedia","CommunityPage","communitySections","recentPosts","ProductPage","GridViewIcon","BoltIcon","productFeatures","usageSteps","StarIcon","StyledPricingCard","styled","PricingPage","handleStartClick","ApiPage","CodeIcon","endpoints","endpoint","QuantPage","StrategiesPage","tabValue","setTabValue","platforms","tagIndex","platform","platformIndex","featureIndex","ProfitPage","StepContent","optionIndex","ChangelogPage","updates","getChipColor","update","change","CookiesPolicy","cookieTypes","React","routes","ApiSecuritySettings","Deposit","LoadingSpinner","router","createBrowserRouter","App","I18nextProvider","RouterProvider","ReactDOM","StrictMode"],"mappings":"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"}