FROM node:18-slim AS builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    make \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Install TypeScript globally
RUN npm install -g typescript

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm install --legacy-peer-deps

# Install type declarations and dev dependencies
RUN npm install --save-dev \
    @types/react \
    @types/react-dom \
    @types/react-router-dom \
    @types/react-i18next \
    @types/date-fns \
    @types/recharts \
    @types/socket.io-client \
    @types/web-vitals \
    @types/antd \
    @types/i18next-browser-languagedetector \
    @types/react-toastify \
    @types/node \
    @types/jest \
    @typescript-eslint/eslint-plugin \
    @typescript-eslint/parser \
    eslint \
    eslint-plugin-react \
    eslint-plugin-react-hooks \
    jest \
    ts-jest \
    ts-node \
    typescript

# Install production dependencies
RUN npm install --save \
    @ant-design/icons \
    @emotion/react \
    @emotion/styled \
    @mui/icons-material \
    @mui/material \
    @mui/x-data-grid \
    @mui/x-date-pickers \
    antd \
    axios \
    date-fns \
    framer-motion \
    i18next \
    i18next-browser-languagedetector \
    react \
    react-dom \
    react-i18next \
    react-router-dom \
    react-toastify \
    recharts \
    socket.io-client \
    web-vitals

# Set permissions for TypeScript
RUN chmod -R 777 /usr/local/bin/tsc

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM node:18-slim

WORKDIR /app

# Copy built files from builder
COPY --from=builder /app/build ./build
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package*.json ./

# Install production dependencies
RUN npm install --production --legacy-peer-deps

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3000

# Expose the application port
EXPOSE 3000

# Start the application
CMD ["npm", "start"] 