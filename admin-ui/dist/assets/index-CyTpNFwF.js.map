{"version":3,"file":"index-CyTpNFwF.js","sources":["../../src/theme.ts","../../src/contexts/AuthContext.tsx","../../src/contexts/SnackbarContext.tsx","../../src/contexts/LoadingContext.tsx","../../src/components/common/ErrorBoundary.tsx","../../src/components/common/AdminNavbar.tsx","../../src/components/common/Sidebar/Sidebar.tsx","../../src/components/Layout.tsx","../../src/theme/animation.ts","../../src/pages/Login.tsx","../../src/pages/NotFound.tsx","../../src/components/common/PageLayout.tsx","../../src/components/user/UserList.tsx","../../src/components/user/UserForm.tsx","../../src/services/userLevelService.ts","../../src/components/user/UserLevelManager.tsx","../../src/services/blacklistService.ts","../../src/components/user/BlacklistManager.tsx","../../src/pages/UserManagement.tsx","../../src/api/users.ts","../../src/api/axios.ts","../../src/api/orders.ts","../../src/pages/OrderManagement.tsx","../../src/pages/CommissionList.tsx","../../src/pages/CommissionSettlement.tsx","../../src/pages/ProfitList.tsx","../../src/pages/WithdrawalReview.tsx","../../src/pages/SystemSettings.tsx","../../src/components/common/StyledComponents.tsx","../../src/pages/LogManagement.tsx","../../src/api/log.ts","../../src/pages/UserStatusManagement.tsx","../../src/pages/ChainAddressManager.tsx","../../src/components/common/PrivateRoute.tsx","../../src/App.tsx","../../src/i18n.ts","../../src/index.tsx"],"sourcesContent":["import { createTheme, ThemeOptions, PaletteOptions, TypographyVariantsOptions } from '@mui/material/styles';\r\nimport React from 'react';\r\n\r\n// 扩展 Material-UI 的 Palette 类型\r\ndeclare module '@mui/material/styles' {\r\n  interface Palette {\r\n    accent: {\r\n      main: string;\r\n      light: string;\r\n      dark: string;\r\n    };\r\n    border: {\r\n      main: string;\r\n      light: string;\r\n      dark: string;\r\n    };\r\n    card: {\r\n      main: string;\r\n      light: string;\r\n      dark: string;\r\n    };\r\n    gradient: {\r\n      primary: string;\r\n      secondary: string;\r\n      success: string;\r\n      warning: string;\r\n      error: string;\r\n      info: string;\r\n    };\r\n  }\r\n  interface PaletteOptions {\r\n    accent?: {\r\n      main: string;\r\n      light: string;\r\n      dark: string;\r\n    };\r\n    border?: {\r\n      main: string;\r\n      light: string;\r\n      dark: string;\r\n    };\r\n    card?: {\r\n      main: string;\r\n      light: string;\r\n      dark: string;\r\n    };\r\n    gradient?: {\r\n      primary: string;\r\n      secondary: string;\r\n      success: string;\r\n      warning: string;\r\n      error: string;\r\n      info: string;\r\n    };\r\n  }\r\n  interface TypographyVariants {\r\n    h1: React.CSSProperties;\r\n    h2: React.CSSProperties;\r\n    h3: React.CSSProperties;\r\n    h4: React.CSSProperties;\r\n    h5: React.CSSProperties;\r\n    h6: React.CSSProperties;\r\n    body1: React.CSSProperties;\r\n    body2: React.CSSProperties;\r\n  }\r\n  interface TypographyVariantsOptions {\r\n    h1?: React.CSSProperties;\r\n    h2?: React.CSSProperties;\r\n    h3?: React.CSSProperties;\r\n    h4?: React.CSSProperties;\r\n    h5?: React.CSSProperties;\r\n    h6?: React.CSSProperties;\r\n    body1?: React.CSSProperties;\r\n    body2?: React.CSSProperties;\r\n  }\r\n}\r\n\r\ndeclare module '@mui/material/Typography' {\r\n  interface TypographyPropsVariantOverrides {\r\n    h1: true;\r\n    h2: true;\r\n    h3: true;\r\n    h4: true;\r\n    h5: true;\r\n    h6: true;\r\n    body1: true;\r\n    body2: true;\r\n  }\r\n}\r\n\r\n// 排版配置\r\nconst typography: TypographyVariantsOptions = {\r\n  fontFamily: '\"Poppins\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n  h1: {\r\n    fontSize: '3.5rem',\r\n    fontWeight: 700,\r\n    lineHeight: 1.2,\r\n    letterSpacing: '-0.02em',\r\n  },\r\n  h2: {\r\n    fontSize: '2.5rem',\r\n    fontWeight: 600,\r\n    lineHeight: 1.3,\r\n    letterSpacing: '-0.01em',\r\n  },\r\n  h3: {\r\n    fontSize: '2rem',\r\n    fontWeight: 600,\r\n    lineHeight: 1.4,\r\n  },\r\n  h4: {\r\n    fontSize: '1.5rem',\r\n    fontWeight: 600,\r\n    lineHeight: 1.4,\r\n  },\r\n  h5: {\r\n    fontSize: '1.25rem',\r\n    fontWeight: 600,\r\n    lineHeight: 1.4,\r\n  },\r\n  h6: {\r\n    fontSize: '1rem',\r\n    fontWeight: 600,\r\n    lineHeight: 1.4,\r\n  },\r\n  subtitle1: {\r\n    fontSize: '1.125rem',\r\n    fontWeight: 500,\r\n    lineHeight: 1.4,\r\n  },\r\n  body1: {\r\n    fontSize: '1rem',\r\n    lineHeight: 1.6,\r\n  },\r\n  body2: {\r\n    fontSize: '0.875rem',\r\n    lineHeight: 1.6,\r\n  },\r\n  button: {\r\n    textTransform: 'none',\r\n    fontWeight: 600,\r\n  },\r\n};\r\n\r\nconst themeOptions: ThemeOptions = {\r\n  palette: {\r\n    primary: {\r\n      main: '#00FFB8',\r\n      light: '#33FFC6',\r\n      dark: '#00CC93',\r\n    },\r\n    secondary: {\r\n      main: '#FFFFFF',\r\n      light: '#FFFFFF',\r\n      dark: '#F5F5F5',\r\n    },\r\n    background: {\r\n      default: '#FFFFFF',\r\n      paper: '#F5F5F5',\r\n    },\r\n    text: {\r\n      primary: '#333333',\r\n      secondary: '#666666',\r\n    },\r\n    card: {\r\n      main: '#FFFFFF',\r\n      light: '#F5F5F5',\r\n      dark: '#EEEEEE',\r\n    },\r\n    border: {\r\n      main: 'rgba(0, 0, 0, 0.1)',\r\n      light: 'rgba(0, 0, 0, 0.05)',\r\n      dark: 'rgba(0, 0, 0, 0.2)',\r\n    },\r\n    accent: {\r\n      main: '#00FFB8',\r\n      light: '#33FFC6',\r\n      dark: '#00CC93',\r\n    },\r\n    success: {\r\n      main: '#00FFB8',\r\n      light: '#33FFC6',\r\n      dark: '#00CC93',\r\n    },\r\n    warning: {\r\n      main: '#FFD600',\r\n      light: '#FFDE33',\r\n      dark: '#CCAB00',\r\n    },\r\n    error: {\r\n      main: '#FF1744',\r\n      light: '#FF4569',\r\n      dark: '#CC1236',\r\n    },\r\n    info: {\r\n      main: '#2196F3',\r\n      light: '#4DABF5',\r\n      dark: '#0B79D0',\r\n    },\r\n    gradient: {\r\n      primary: 'linear-gradient(135deg, #00FFB8 0%, #FFFFFF 100%)',\r\n      secondary: 'linear-gradient(135deg, #FFFFFF 0%, #F5F5F5 100%)',\r\n      success: 'linear-gradient(135deg, #00FFB8 0%, #33FFC6 100%)',\r\n      warning: 'linear-gradient(135deg, #FFD600 0%, #FFDE33 100%)',\r\n      error: 'linear-gradient(135deg, #FF1744 0%, #FF4569 100%)',\r\n      info: 'linear-gradient(135deg, #2196F3 0%, #4DABF5 100%)',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    h1: {\r\n      fontSize: '2.5rem',\r\n      fontWeight: 500,\r\n    },\r\n    h2: {\r\n      fontSize: '2rem',\r\n      fontWeight: 500,\r\n    },\r\n    h3: {\r\n      fontSize: '1.75rem',\r\n      fontWeight: 500,\r\n    },\r\n    h4: {\r\n      fontSize: '1.5rem',\r\n      fontWeight: 500,\r\n    },\r\n    h5: {\r\n      fontSize: '1.25rem',\r\n      fontWeight: 500,\r\n    },\r\n    h6: {\r\n      fontSize: '1rem',\r\n      fontWeight: 500,\r\n    },\r\n    body1: {\r\n      fontSize: '1rem',\r\n      lineHeight: 1.5,\r\n    },\r\n    body2: {\r\n      fontSize: '0.875rem',\r\n      lineHeight: 1.43,\r\n    },\r\n  },\r\n  components: {\r\n    MuiButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          textTransform: 'none',\r\n          borderRadius: 8,\r\n        },\r\n      },\r\n    },\r\n    MuiCard: {\r\n      styleOverrides: {\r\n        root: {\r\n          borderRadius: 12,\r\n          boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst theme = createTheme(themeOptions);\r\nexport default theme;\r\n\r\nexport const themeUtils = {\r\n  palette: {\r\n    primary: {\r\n      main: '#00FFB8',\r\n      light: '#33FFC6',\r\n      dark: '#00CC93',\r\n    },\r\n    text: {\r\n      primary: '#333333',\r\n      secondary: '#666666',\r\n    },\r\n  },\r\n  gradients: {\r\n    primary: 'linear-gradient(135deg, #00FFB8 0%, #00CC93 100%)',\r\n  },\r\n} as const; ","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n  name: string;\r\n  role: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  isAuthenticated: boolean;\r\n  user: User | null;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // 检查本地存储中的认证状态\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    if (token && userData) {\r\n      setIsAuthenticated(true);\r\n      setUser(JSON.parse(userData));\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      // 这里应该是实际的登录 API 调用\r\n      const response = await fetch('/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Login failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      localStorage.setItem('token', data.token);\r\n      localStorage.setItem('user', JSON.stringify(data.user));\r\n      setIsAuthenticated(true);\r\n      setUser(data.user);\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, user, loading, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; ","import React, { createContext, useContext, useState, ReactNode } from 'react';\r\nimport { Snackbar, Alert } from '@mui/material';\r\n\r\ninterface SnackbarContextType {\r\n  showMessage: (message: string, severity?: 'success' | 'error' | 'warning' | 'info') => void;\r\n}\r\n\r\nconst SnackbarContext = createContext<SnackbarContextType | undefined>(undefined);\r\n\r\nexport const useSnackbar = () => {\r\n  const context = useContext(SnackbarContext);\r\n  if (!context) {\r\n    throw new Error('useSnackbar must be used within a SnackbarProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface SnackbarProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const SnackbarProvider: React.FC<SnackbarProviderProps> = ({ children }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [severity, setSeverity] = useState<'success' | 'error' | 'warning' | 'info'>('info');\r\n\r\n  const showMessage = (msg: string, sev: 'success' | 'error' | 'warning' | 'info' = 'info') => {\r\n    setMessage(msg);\r\n    setSeverity(sev);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <SnackbarContext.Provider value={{ showMessage }}>\r\n      {children}\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      >\r\n        <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </SnackbarContext.Provider>\r\n  );\r\n}; ","import React, { createContext, useContext, useState, ReactNode } from 'react';\r\nimport { Backdrop, CircularProgress } from '@mui/material';\r\n\r\ninterface LoadingContextType {\r\n  showLoading: () => void;\r\n  hideLoading: () => void;\r\n}\r\n\r\nconst LoadingContext = createContext<LoadingContextType | undefined>(undefined);\r\n\r\nexport const useLoading = () => {\r\n  const context = useContext(LoadingContext);\r\n  if (!context) {\r\n    throw new Error('useLoading must be used within a LoadingProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface LoadingProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const LoadingProvider: React.FC<LoadingProviderProps> = ({ children }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const showLoading = () => setOpen(true);\r\n  const hideLoading = () => setOpen(false);\r\n\r\n  return (\r\n    <LoadingContext.Provider value={{ showLoading, hideLoading }}>\r\n      {children}\r\n      <Backdrop\r\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={open}\r\n      >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </LoadingContext.Provider>\r\n  );\r\n}; ","import React, { Component, ErrorInfo, ReactNode } from 'react';\r\nimport { Box, Typography, Button } from '@mui/material';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean;\r\n  error: Error | null;\r\n}\r\n\r\nexport class ErrorBoundary extends Component<Props, State> {\r\n  public state: State = {\r\n    hasError: false,\r\n    error: null\r\n  };\r\n\r\n  public static getDerivedStateFromError(error: Error): State {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    console.error('Uncaught error:', error, errorInfo);\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            minHeight: '100vh',\r\n            p: 3,\r\n            textAlign: 'center'\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Something went wrong\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\r\n            {this.state.error?.message || 'An unexpected error occurred'}\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => window.location.reload()}\r\n          >\r\n            Refresh Page\r\n          </Button>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n} ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Container,\r\n  Menu,\r\n  MenuItem,\r\n  Avatar,\r\n  useTheme,\r\n  Badge,\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  Menu as MenuIcon,\r\n  Language as LanguageIcon,\r\n  AccountCircle as AccountIcon,\r\n  Dashboard as DashboardIcon,\r\n  People as UsersIcon,\r\n  Settings as SettingsIcon,\r\n  Notifications as NotificationsIcon,\r\n  Logout as LogoutIcon,\r\n  Analytics as AnalyticsIcon,\r\n  Security as SecurityIcon,\r\n} from '@mui/icons-material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst AdminNavbar: React.FC = () => {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [languageAnchor, setLanguageAnchor] = useState<null | HTMLElement>(null);\r\n  const [userAnchor, setUserAnchor] = useState<null | HTMLElement>(null);\r\n  const [notificationAnchor, setNotificationAnchor] = useState<null | HTMLElement>(null);\r\n  const [scrolled, setScrolled] = useState(false);\r\n  const { t, i18n } = useTranslation();\r\n  const { isAuthenticated, logout } = useAuth();\r\n\r\n  const navItems = [\r\n    { label: t('nav.dashboard'), path: '/admin/dashboard', icon: <DashboardIcon /> },\r\n    { label: t('nav.users'), path: '/admin/users', icon: <UsersIcon /> },\r\n    { label: t('nav.analytics'), path: '/admin/analytics', icon: <AnalyticsIcon /> },\r\n    { label: t('nav.security'), path: '/admin/security', icon: <SecurityIcon /> },\r\n    { label: t('nav.settings'), path: '/admin/settings', icon: <SettingsIcon /> },\r\n  ];\r\n\r\n  const languages = [\r\n    { code: 'en', name: t('language.english') },\r\n    { code: 'zh', name: t('language.chinese') },\r\n    { code: 'ko', name: t('language.korean') },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      setScrolled(window.scrollY > 0);\r\n    };\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  const handleLanguageClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setLanguageAnchor(event.currentTarget);\r\n  };\r\n\r\n  const handleLanguageClose = () => {\r\n    setLanguageAnchor(null);\r\n  };\r\n\r\n  const handleLanguageChange = (code: string) => {\r\n    i18n.changeLanguage(code);\r\n    handleLanguageClose();\r\n  };\r\n\r\n  const handleUserClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setUserAnchor(event.currentTarget);\r\n  };\r\n\r\n  const handleUserClose = () => {\r\n    setUserAnchor(null);\r\n  };\r\n\r\n  const handleNotificationClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setNotificationAnchor(event.currentTarget);\r\n  };\r\n\r\n  const handleNotificationClose = () => {\r\n    setNotificationAnchor(null);\r\n  };\r\n\r\n  const toggleDrawer = () => {\r\n    setDrawerOpen(!drawerOpen);\r\n  };\r\n\r\n  const handleNavigation = (path: string) => {\r\n    navigate(path);\r\n    setDrawerOpen(false);\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    await logout();\r\n    navigate('/admin/login');\r\n  };\r\n\r\n  const Logo = () => (\r\n    <Box\r\n      component={motion.div}\r\n      whileHover={{ scale: 1.05 }}\r\n      whileTap={{ scale: 0.95 }}\r\n      sx={{ cursor: 'pointer' }}\r\n      onClick={() => navigate('/admin/dashboard')}\r\n    >\r\n      <Typography\r\n        variant=\"h6\"\r\n        sx={{\r\n          fontWeight: 'bold',\r\n          background: 'linear-gradient(45deg, #FF6B6B, #4ECDC4)',\r\n          WebkitBackgroundClip: 'text',\r\n          WebkitTextFillColor: 'transparent',\r\n        }}\r\n      >\r\n        PANDA QUANT ADMIN\r\n      </Typography>\r\n    </Box>\r\n  );\r\n\r\n  const UserMenu = () => (\r\n    <Menu\r\n      anchorEl={userAnchor}\r\n      open={Boolean(userAnchor)}\r\n      onClose={handleUserClose}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'right',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n    >\r\n      <MenuItem onClick={() => handleNavigation('/admin/profile')}>\r\n        <AccountIcon sx={{ mr: 1 }} />\r\n        {t('nav.profile')}\r\n      </MenuItem>\r\n      <MenuItem onClick={handleLogout}>\r\n        <LogoutIcon sx={{ mr: 1 }} />\r\n        {t('nav.logout')}\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const NotificationMenu = () => (\r\n    <Menu\r\n      anchorEl={notificationAnchor}\r\n      open={Boolean(notificationAnchor)}\r\n      onClose={handleNotificationClose}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'right',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n    >\r\n      <MenuItem>\r\n        <ListItemText\r\n          primary=\"New user registered\"\r\n          secondary=\"2 hours ago\"\r\n        />\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <ListItemText\r\n          primary=\"System update available\"\r\n          secondary=\"5 hours ago\"\r\n        />\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const DesktopNav = () => (\r\n    <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n      {navItems.map((item) => (\r\n        <Button\r\n          key={item.path}\r\n          color=\"inherit\"\r\n          onClick={() => handleNavigation(item.path)}\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: 1,\r\n          }}\r\n        >\r\n          {item.icon}\r\n          {item.label}\r\n        </Button>\r\n      ))}\r\n      <IconButton color=\"inherit\" onClick={handleNotificationClick}>\r\n        <Badge badgeContent={2} color=\"error\">\r\n          <NotificationsIcon />\r\n        </Badge>\r\n      </IconButton>\r\n      <IconButton color=\"inherit\" onClick={handleLanguageClick}>\r\n        <LanguageIcon />\r\n      </IconButton>\r\n      <IconButton color=\"inherit\" onClick={handleUserClick}>\r\n        <Avatar sx={{ width: 32, height: 32 }} />\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n\r\n  const MobileNav = () => (\r\n    <>\r\n      <IconButton color=\"inherit\" onClick={toggleDrawer}>\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={drawerOpen}\r\n        onClose={toggleDrawer}\r\n        PaperProps={{\r\n          sx: {\r\n            width: '100%',\r\n            maxWidth: 360,\r\n            bgcolor: theme.palette.background.default,\r\n          },\r\n        }}\r\n      >\r\n        <List>\r\n          {navItems.map((item) => (\r\n            <ListItem\r\n              key={item.path}\r\n              button\r\n              onClick={() => handleNavigation(item.path)}\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: 1,\r\n              }}\r\n            >\r\n              {item.icon}\r\n              <ListItemText primary={item.label} />\r\n            </ListItem>\r\n          ))}\r\n          <ListItem button onClick={handleNotificationClick}>\r\n            <Badge badgeContent={2} color=\"error\" sx={{ mr: 1 }}>\r\n              <NotificationsIcon />\r\n            </Badge>\r\n            <ListItemText primary={t('nav.notifications')} />\r\n          </ListItem>\r\n          <ListItem button onClick={handleLanguageClick}>\r\n            <LanguageIcon sx={{ mr: 1 }} />\r\n            <ListItemText primary={t('nav.language')} />\r\n          </ListItem>\r\n          <ListItem button onClick={handleUserClick}>\r\n            <AccountIcon sx={{ mr: 1 }} />\r\n            <ListItemText primary={t('nav.profile')} />\r\n          </ListItem>\r\n          <ListItem button onClick={handleLogout}>\r\n            <LogoutIcon sx={{ mr: 1 }} />\r\n            <ListItemText primary={t('nav.logout')} />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      elevation={scrolled ? 4 : 0}\r\n      sx={{\r\n        bgcolor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        transition: 'all 0.3s ease',\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Toolbar sx={{ justifyContent: 'space-between' }}>\r\n          <Logo />\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n            <DesktopNav />\r\n          </Box>\r\n          <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\r\n            <MobileNav />\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n      <UserMenu />\r\n      <NotificationMenu />\r\n      <Menu\r\n        anchorEl={languageAnchor}\r\n        open={Boolean(languageAnchor)}\r\n        onClose={handleLanguageClose}\r\n      >\r\n        {languages.map((lang) => (\r\n          <MenuItem\r\n            key={lang.code}\r\n            onClick={() => handleLanguageChange(lang.code)}\r\n          >\r\n            {lang.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default AdminNavbar; ","import React from 'react';\r\nimport { Box, Drawer, List, ListItem, ListItemIcon, ListItemText, Divider } from '@mui/material';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport {\r\n  Dashboard as DashboardIcon,\r\n  People as PeopleIcon,\r\n  Settings as SettingsIcon,\r\n  Assessment as AssessmentIcon,\r\n  History as HistoryIcon,\r\n  Security as SecurityIcon,\r\n} from '@mui/icons-material';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst menuItems = [\r\n  { text: 'Dashboard', icon: <DashboardIcon />, path: '/dashboard' },\r\n  { text: 'User Management', icon: <PeopleIcon />, path: '/users' },\r\n  { text: 'Order Management', icon: <AssessmentIcon />, path: '/orders' },\r\n  { text: 'Log Management', icon: <HistoryIcon />, path: '/logs' },\r\n  { text: 'Security', icon: <SecurityIcon />, path: '/security' },\r\n  { text: 'Settings', icon: <SettingsIcon />, path: '/settings' },\r\n];\r\n\r\nconst Sidebar: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      sx={{\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        '& .MuiDrawer-paper': {\r\n          width: drawerWidth,\r\n          boxSizing: 'border-box',\r\n          backgroundColor: '#1a1a1a',\r\n          color: 'white',\r\n        },\r\n      }}\r\n    >\r\n      <Box sx={{ overflow: 'auto', mt: 8 }}>\r\n        <List>\r\n          {menuItems.map((item) => (\r\n            <ListItem\r\n              button\r\n              key={item.text}\r\n              onClick={() => navigate(item.path)}\r\n              sx={{\r\n                backgroundColor: location.pathname === item.path ? 'rgba(255, 255, 255, 0.1)' : 'transparent',\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n                },\r\n              }}\r\n            >\r\n              <ListItemIcon sx={{ color: 'white' }}>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider sx={{ backgroundColor: 'rgba(255, 255, 255, 0.1)' }} />\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default Sidebar; ","import React from 'react';\r\nimport { Box, CssBaseline } from '@mui/material';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport theme from '../theme';\r\nimport AdminNavbar from './common/AdminNavbar';\r\nimport Sidebar from './common/Sidebar/Sidebar';\r\n\r\ninterface LayoutProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Box sx={{ display: 'flex' }}>\r\n        <CssBaseline />\r\n        <AdminNavbar />\r\n        <Sidebar />\r\n        <Box\r\n          component=\"main\"\r\n          sx={{\r\n            flexGrow: 1,\r\n            p: 3,\r\n            width: { sm: `calc(100% - 240px)` },\r\n            ml: { sm: '240px' },\r\n          }}\r\n        >\r\n          {children}\r\n        </Box>\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Layout; ","export const animationConfig = {\r\n  duration: {\r\n    short: 0.2,\r\n    medium: 0.3,\r\n    long: 0.5,\r\n  },\r\n  easing: {\r\n    easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\r\n    easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\r\n    easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\r\n    sharp: 'cubic-bezier(0.4, 0, 0.6, 1)',\r\n  },\r\n  spring: {\r\n    type: 'spring',\r\n    stiffness: 100,\r\n    damping: 10,\r\n  },\r\n  variants: {\r\n    fadeIn: {\r\n      initial: { opacity: 0 },\r\n      animate: { opacity: 1 },\r\n      exit: { opacity: 0 },\r\n    },\r\n    slideIn: {\r\n      initial: { x: -20, opacity: 0 },\r\n      animate: { x: 0, opacity: 1 },\r\n      exit: { x: 20, opacity: 0 },\r\n    },\r\n    slideUp: {\r\n      initial: { y: 20, opacity: 0 },\r\n      animate: { y: 0, opacity: 1 },\r\n      exit: { y: -20, opacity: 0 },\r\n    },\r\n    scale: {\r\n      initial: { scale: 0.95, opacity: 0 },\r\n      animate: { scale: 1, opacity: 1 },\r\n      exit: { scale: 0.95, opacity: 0 },\r\n    },\r\n  },\r\n}; ","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  Paper,\r\n  InputAdornment,\r\n  IconButton,\r\n  Alert,\r\n  CircularProgress,\r\n} from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  Person as PersonIcon,\r\n} from '@mui/icons-material';\r\nimport theme from '../theme';\r\nimport { animationConfig } from '../theme/animation';\r\n\r\ninterface LoginForm {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nconst Login: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const [formData, setFormData] = useState<LoginForm>({\r\n    username: '',\r\n    password: '',\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Mock API call\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      if (formData.username === 'admin' && formData.password === 'admin') {\r\n        // Mock successful login\r\n        console.log('Login successful');\r\n      } else {\r\n        throw new Error('Invalid credentials');\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: animationConfig.duration.medium }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            minHeight: '100vh',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            py: 4,\r\n          }}\r\n        >\r\n          <Paper\r\n            elevation={3}\r\n            sx={{\r\n              p: 4,\r\n              width: '100%',\r\n              maxWidth: 400,\r\n              borderRadius: 2,\r\n              backgroundColor: theme.palette.background.paper,\r\n              boxShadow: theme.shadows[4],\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                mb: 4,\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h4\"\r\n                sx={{\r\n                  fontWeight: 700,\r\n                  color: theme.palette.primary.main,\r\n                  mb: 2,\r\n                  position: 'relative',\r\n                  '&::after': {\r\n                    content: '\"\"',\r\n                    position: 'absolute',\r\n                    bottom: -10,\r\n                    left: '50%',\r\n                    transform: 'translateX(-50%)',\r\n                    width: '60px',\r\n                    height: '4px',\r\n                    background: `linear-gradient(90deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n                    borderRadius: '2px',\r\n                  },\r\n                }}\r\n              >\r\n                {t('login.title')}\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\">\r\n                {t('login.subtitle')}\r\n              </Typography>\r\n            </Box>\r\n\r\n            {error && (\r\n              <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n                {error}\r\n              </Alert>\r\n            )}\r\n\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n              <TextField\r\n                fullWidth\r\n                label={t('login.username')}\r\n                name=\"username\"\r\n                value={formData.username}\r\n                onChange={handleInputChange}\r\n                margin=\"normal\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <PersonIcon sx={{ color: theme.palette.primary.main }} />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                sx={{\r\n                  '& .MuiOutlinedInput-root': {\r\n                    '&:hover fieldset': {\r\n                      borderColor: theme.palette.primary.main,\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n\r\n              <TextField\r\n                fullWidth\r\n                label={t('login.password')}\r\n                name=\"password\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                value={formData.password}\r\n                onChange={handleInputChange}\r\n                margin=\"normal\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <LockIcon sx={{ color: theme.palette.primary.main }} />\r\n                    </InputAdornment>\r\n                  ),\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onClick={() => setShowPassword(!showPassword)}\r\n                        edge=\"end\"\r\n                      >\r\n                        {showPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                sx={{\r\n                  '& .MuiOutlinedInput-root': {\r\n                    '&:hover fieldset': {\r\n                      borderColor: theme.palette.primary.main,\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n\r\n              <Button\r\n                fullWidth\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                disabled={loading}\r\n                sx={{\r\n                  mt: 3,\r\n                  py: 1.5,\r\n                  background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n                  '&:hover': {\r\n                    background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n                  },\r\n                }}\r\n              >\r\n                {loading ? (\r\n                  <CircularProgress size={24} sx={{ color: 'white' }} />\r\n                ) : (\r\n                  t('login.submit')\r\n                )}\r\n              </Button>\r\n            </Box>\r\n          </Paper>\r\n        </Box>\r\n      </motion.div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login; ","import React from 'react';\r\nimport { Box, Typography, Button, Container } from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport { Error as ErrorIcon } from '@mui/icons-material';\r\nimport theme from '../theme';\r\nimport { animationConfig } from '../theme/animation';\r\n\r\nconst NotFound: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: animationConfig.duration.medium }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            minHeight: '100vh',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            py: 4,\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <motion.div\r\n            initial={{ scale: 0.8, opacity: 0 }}\r\n            animate={{ scale: 1, opacity: 1 }}\r\n            transition={{\r\n              duration: animationConfig.duration.medium,\r\n              delay: 0.2,\r\n            }}\r\n          >\r\n            <ErrorIcon\r\n              sx={{\r\n                fontSize: 120,\r\n                color: theme.palette.error.main,\r\n                mb: 4,\r\n              }}\r\n            />\r\n          </motion.div>\r\n\r\n          <Typography\r\n            variant=\"h1\"\r\n            sx={{\r\n              fontWeight: 700,\r\n              fontSize: { xs: '3rem', sm: '4rem', md: '5rem' },\r\n              color: theme.palette.text.primary,\r\n              mb: 2,\r\n              position: 'relative',\r\n              '&::after': {\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                bottom: -10,\r\n                left: '50%',\r\n                transform: 'translateX(-50%)',\r\n                width: '100px',\r\n                height: '4px',\r\n                background: `linear-gradient(90deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n                borderRadius: '2px',\r\n              },\r\n            }}\r\n          >\r\n            404\r\n          </Typography>\r\n\r\n          <Typography\r\n            variant=\"h4\"\r\n            sx={{\r\n              fontWeight: 500,\r\n              color: theme.palette.text.secondary,\r\n              mb: 4,\r\n            }}\r\n          >\r\n            {t('notFound.title')}\r\n          </Typography>\r\n\r\n          <Typography\r\n            variant=\"body1\"\r\n            sx={{\r\n              color: theme.palette.text.secondary,\r\n              mb: 4,\r\n              maxWidth: 600,\r\n            }}\r\n          >\r\n            {t('notFound.description')}\r\n          </Typography>\r\n\r\n          <motion.div\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => navigate('/')}\r\n              sx={{\r\n                py: 1.5,\r\n                px: 4,\r\n                background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n                '&:hover': {\r\n                  background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n                },\r\n              }}\r\n            >\r\n              {t('notFound.backToHome')}\r\n            </Button>\r\n          </motion.div>\r\n        </Box>\r\n      </motion.div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NotFound; ","import React from 'react';\r\nimport { Box, Container, Grid, Typography } from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport { animationConfig } from '../../theme/animation';\r\nimport theme from '../../theme';\r\n\r\ninterface PageLayoutProps {\r\n  title: string;\r\n  children: React.ReactNode;\r\n  actions?: React.ReactNode;\r\n  filters?: React.ReactNode;\r\n  content?: React.ReactNode;\r\n}\r\n\r\nconst PageLayout: React.FC<PageLayoutProps> = ({ title, children, actions, filters, content }) => {\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={animationConfig.spring}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            mb: 4,\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"h4\"\r\n            sx={{\r\n              background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n              WebkitBackgroundClip: 'text',\r\n              WebkitTextFillColor: 'transparent',\r\n              fontWeight: 700,\r\n              position: 'relative',\r\n              '&::after': {\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                bottom: -8,\r\n                left: 0,\r\n                width: '100%',\r\n                height: 2,\r\n                background: `linear-gradient(90deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n              },\r\n            }}\r\n          >\r\n            {title}\r\n          </Typography>\r\n          {actions}\r\n        </Box>\r\n        {filters}\r\n        {content || (\r\n          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' }, gap: 3 }}>\r\n            {React.Children.map(children, (child, index) => (\r\n              <Box>{child}</Box>\r\n            ))}\r\n          </Box>\r\n        )}\r\n      </motion.div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PageLayout; ","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Chip,\r\n  IconButton,\r\n  Tooltip,\r\n  useTheme,\r\n  alpha,\r\n  TextField,\r\n  InputAdornment\r\n} from '@mui/material';\r\nimport {\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  Search as SearchIcon,\r\n  Person as PersonIcon,\r\n  Email as EmailIcon,\r\n  CalendarToday as CalendarIcon,\r\n  Verified as VerifiedIcon,\r\n  Warning as WarningIcon,\r\n  Info as InfoIcon\r\n} from '@mui/icons-material';\r\nimport { motion } from 'framer-motion';\r\nimport { format } from 'date-fns';\r\nimport { zhCN } from 'date-fns/locale';\r\nimport { User } from '../../types/user';\r\n\r\ninterface UserListProps {\r\n  users: User[];\r\n  onEdit: (user: User) => void;\r\n  onDelete: (user: User) => void;\r\n  onViewDetails: (user: User) => void;\r\n}\r\n\r\nconst UserList: React.FC<UserListProps> = ({ users, onEdit, onDelete, onViewDetails }) => {\r\n  const theme = useTheme();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const filteredUsers = users.filter(user =>\r\n    user.username.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    user.email.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return theme.palette.success.main;\r\n      case 'inactive':\r\n        return theme.palette.warning.main;\r\n      case 'suspended':\r\n        return theme.palette.error.main;\r\n      default:\r\n        return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string): React.ReactElement => {\r\n    switch (status) {\r\n      case 'active':\r\n        return <VerifiedIcon />;\r\n      case 'inactive':\r\n        return <WarningIcon />;\r\n      case 'suspended':\r\n        return <WarningIcon />;\r\n      default:\r\n        return <InfoIcon />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h4\" gutterBottom sx={{ \r\n        color: theme.palette.primary.main,\r\n        fontWeight: 'bold',\r\n        mb: 4\r\n      }}>\r\n        用户管理\r\n      </Typography>\r\n\r\n      <Card sx={{ \r\n        background: theme.palette.background.paper,\r\n        boxShadow: 'none',\r\n        borderRadius: 2,\r\n        mb: 3\r\n      }}>\r\n        <CardContent>\r\n          <TextField\r\n            fullWidth\r\n            placeholder=\"搜索用户...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon sx={{ color: theme.palette.primary.main }} />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            sx={{\r\n              '& .MuiOutlinedInput-root': {\r\n                borderRadius: 2,\r\n                '&:hover': {\r\n                  backgroundColor: alpha(theme.palette.primary.main, 0.04),\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card sx={{ \r\n        background: theme.palette.background.paper,\r\n        boxShadow: 'none',\r\n        borderRadius: 2\r\n      }}>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell sx={{ \r\n                  fontWeight: 'bold',\r\n                  color: theme.palette.text.secondary\r\n                }}>用户名</TableCell>\r\n                <TableCell sx={{ \r\n                  fontWeight: 'bold',\r\n                  color: theme.palette.text.secondary\r\n                }}>邮箱</TableCell>\r\n                <TableCell sx={{ \r\n                  fontWeight: 'bold',\r\n                  color: theme.palette.text.secondary\r\n                }}>角色</TableCell>\r\n                <TableCell sx={{ \r\n                  fontWeight: 'bold',\r\n                  color: theme.palette.text.secondary\r\n                }}>状态</TableCell>\r\n                <TableCell sx={{ \r\n                  fontWeight: 'bold',\r\n                  color: theme.palette.text.secondary\r\n                }}>注册时间</TableCell>\r\n                <TableCell sx={{ \r\n                  fontWeight: 'bold',\r\n                  color: theme.palette.text.secondary\r\n                }}>最后登录</TableCell>\r\n                <TableCell sx={{ \r\n                  fontWeight: 'bold',\r\n                  color: theme.palette.text.secondary\r\n                }}>操作</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {filteredUsers.map((user) => (\r\n                <TableRow \r\n                  key={user._id}\r\n                  sx={{\r\n                    '&:hover': {\r\n                      backgroundColor: alpha(theme.palette.primary.main, 0.04),\r\n                    },\r\n                  }}\r\n                >\r\n                  <TableCell>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      <PersonIcon sx={{ mr: 1, color: theme.palette.primary.main }} />\r\n                      {user.username}\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      <EmailIcon sx={{ mr: 1, color: theme.palette.primary.main }} />\r\n                      {user.email}\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>{user.role}</TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      icon={getStatusIcon(user.status)}\r\n                      label={user.status}\r\n                      sx={{\r\n                        backgroundColor: alpha(getStatusColor(user.status), 0.1),\r\n                        color: getStatusColor(user.status),\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      <CalendarIcon sx={{ mr: 1, color: theme.palette.primary.main }} />\r\n                      {format(new Date(user.createdAt), 'yyyy-MM-dd HH:mm', { locale: zhCN })}\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      <CalendarIcon sx={{ mr: 1, color: theme.palette.primary.main }} />\r\n                      {format(new Date(user.lastLogin), 'yyyy-MM-dd HH:mm', { locale: zhCN })}\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box sx={{ display: 'flex', gap: 1 }}>\r\n                      <Tooltip title=\"编辑\">\r\n                        <IconButton\r\n                          onClick={() => onEdit(user)}\r\n                          sx={{ color: theme.palette.primary.main }}\r\n                        >\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"删除\">\r\n                        <IconButton\r\n                          onClick={() => onDelete(user)}\r\n                          sx={{ color: theme.palette.error.main }}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserList; ","import React from 'react';\r\nimport {\r\n  Box,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  SelectChangeEvent\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport theme from '../../theme';\r\nimport { animationConfig } from '../../theme/animation';\r\nimport { User } from '../../types/user';\r\n\r\ninterface UserFormData extends Omit<User, 'password'> {\r\n  password: string;\r\n}\r\n\r\ninterface UserFormProps {\r\n  user: User | null;\r\n  onSubmit: (user: UserFormData) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst UserForm: React.FC<UserFormProps> = ({ user, onSubmit, onCancel }) => {\r\n  const [formData, setFormData] = React.useState<UserFormData>({\r\n    _id: user?._id || '',\r\n    username: user?.username || '',\r\n    email: user?.email || '',\r\n    status: user?.status || 'active',\r\n    role: user?.role || 'user',\r\n    lastLogin: user?.lastLogin || new Date().toISOString(),\r\n    createdAt: user?.createdAt || new Date().toISOString(),\r\n    avatar: user?.avatar || '',\r\n    password: '',\r\n  });\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSelectChange = (event: SelectChangeEvent) => {\r\n    const { name, value } = event.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    onSubmit(formData);\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, x: 20 }}\r\n      animate={{ opacity: 1, x: 0 }}\r\n      transition={{ duration: animationConfig.duration.medium }}\r\n    >\r\n      <Paper sx={{ p: 3 }}>\r\n        <Box component=\"form\" onSubmit={handleSubmit}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"用户名\"\r\n                name=\"username\"\r\n                value={formData.username}\r\n                onChange={handleInputChange}\r\n                sx={{ mb: 2 }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Status</InputLabel>\r\n                <Select\r\n                  name=\"status\"\r\n                  value={formData.status}\r\n                  onChange={handleSelectChange}\r\n                  label=\"Status\"\r\n                >\r\n                  <MenuItem value=\"active\">Active</MenuItem>\r\n                  <MenuItem value=\"inactive\">Inactive</MenuItem>\r\n                  <MenuItem value=\"suspended\">Suspended</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Role</InputLabel>\r\n                <Select\r\n                  fullWidth\r\n                  name=\"role\"\r\n                  value={formData.role}\r\n                  onChange={handleSelectChange}\r\n                  sx={{ mb: 2 }}\r\n                >\r\n                  <MenuItem value=\"admin\">Admin</MenuItem>\r\n                  <MenuItem value=\"user\">User</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"密码\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={formData.password}\r\n                onChange={handleInputChange}\r\n                required={!user}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box sx={{ display: 'flex', gap: 2, justifyContent: 'flex-end' }}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={onCancel}\r\n                  sx={{\r\n                    color: theme.palette.text.primary,\r\n                    borderColor: theme.palette.text.primary,\r\n                    '&:hover': {\r\n                      borderColor: theme.palette.text.primary,\r\n                    },\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n                    '&:hover': {\r\n                      background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n                    },\r\n                  }}\r\n                >\r\n                  {user ? 'Update' : 'Create'}\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default UserForm; ","import axios from 'axios';\r\nimport { UserLevel } from '../types/user';\r\n\r\nconst API_URL = import.meta.env.VITE_API_URL || 'http://localhost:3000/api';\r\n\r\nexport const userLevelService = {\r\n  // 获取所有用户等级\r\n  async getAllLevels(): Promise<UserLevel[]> {\r\n    const response = await axios.get(`${API_URL}/user-levels`);\r\n    return response.data;\r\n  },\r\n\r\n  // 创建新等级\r\n  async createLevel(level: Omit<UserLevel, 'id'>): Promise<UserLevel> {\r\n    const response = await axios.post(`${API_URL}/user-levels`, level);\r\n    return response.data;\r\n  },\r\n\r\n  // 更新等级\r\n  async updateLevel(id: string, level: Partial<UserLevel>): Promise<UserLevel> {\r\n    const response = await axios.put(`${API_URL}/user-levels/${id}`, level);\r\n    return response.data;\r\n  },\r\n\r\n  // 删除等级\r\n  async deleteLevel(id: string): Promise<void> {\r\n    await axios.delete(`${API_URL}/user-levels/${id}`);\r\n  },\r\n\r\n  // 获取等级详情\r\n  async getLevelById(id: string): Promise<UserLevel> {\r\n    const response = await axios.get(`${API_URL}/user-levels/${id}`);\r\n    return response.data;\r\n  }\r\n}; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Chip,\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n} from '@mui/icons-material';\r\nimport { motion } from 'framer-motion';\r\nimport { userLevelService } from '../../services/userLevelService';\r\nimport { UserLevel } from '../../types/user';\r\nimport theme from '../../theme';\r\nimport { animationConfig } from '../../theme/animation';\r\n\r\nconst UserLevelManager: React.FC = () => {\r\n  const [levels, setLevels] = useState<UserLevel[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [editingLevel, setEditingLevel] = useState<UserLevel | null>(null);\r\n  const [isAdding, setIsAdding] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchLevels();\r\n  }, []);\r\n\r\n  const fetchLevels = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await userLevelService.getAllLevels();\r\n      setLevels(data);\r\n    } catch (err) {\r\n      setError('Failed to fetch user levels');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    setIsAdding(true);\r\n    setEditingLevel({\r\n      id: '',\r\n      name: '',\r\n      description: '',\r\n      benefits: [],\r\n      requirements: {\r\n        minBalance: 0,\r\n        minTradingVolume: 0,\r\n        minHoldingTime: 0,\r\n      },\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString(),\r\n    });\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleEdit = (level: UserLevel) => {\r\n    setEditingLevel(level);\r\n    setIsAdding(false);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleDelete = async (id: string) => {\r\n    try {\r\n      await userLevelService.deleteLevel(id);\r\n      setLevels(levels.filter(level => level.id !== id));\r\n    } catch (err) {\r\n      setError('Failed to delete user level');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!editingLevel) return;\r\n\r\n    try {\r\n      if (isAdding) {\r\n        const newLevel = await userLevelService.createLevel(editingLevel);\r\n        setLevels([...levels, newLevel]);\r\n      } else {\r\n        const updatedLevel = await userLevelService.updateLevel(editingLevel.id, editingLevel);\r\n        setLevels(levels.map(level => \r\n          level.id === updatedLevel.id ? updatedLevel : level\r\n        ));\r\n      }\r\n      setOpenDialog(false);\r\n      setEditingLevel(null);\r\n      setIsAdding(false);\r\n    } catch (err) {\r\n      setError('Failed to save user level');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const renderLevelCard = (level: UserLevel) => (\r\n    <motion.div\r\n      key={level.id}\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: animationConfig.duration.medium }}\r\n    >\r\n      <Card sx={{ mb: 2 }}>\r\n        <CardContent>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Typography variant=\"h6\">{level.name}</Typography>\r\n            <Box>\r\n              <IconButton onClick={() => handleEdit(level)}>\r\n                <EditIcon />\r\n              </IconButton>\r\n              <IconButton onClick={() => handleDelete(level.id)} color=\"error\">\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n            {level.description}\r\n          </Typography>\r\n\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n                要求:\r\n              </Typography>\r\n              <List dense>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary=\"最低余额\"\r\n                    secondary={`${level.requirements.minBalance} USDT`}\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary=\"最低交易量\"\r\n                    secondary={`${level.requirements.minTradingVolume} USDT`}\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary=\"最低持仓时间\"\r\n                    secondary={`${level.requirements.minHoldingTime} 天`}\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n                权益:\r\n              </Typography>\r\n              <List dense>\r\n                {level.benefits.map((benefit, index) => (\r\n                  <ListItem key={index}>\r\n                    <ListItemText primary={benefit} />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </motion.div>\r\n  );\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h5\">用户等级管理</Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleAdd}\r\n        >\r\n          添加等级\r\n        </Button>\r\n      </Box>\r\n\r\n      {error && (\r\n        <Typography color=\"error\" sx={{ mb: 2 }}>\r\n          {error}\r\n        </Typography>\r\n      )}\r\n\r\n      {loading ? (\r\n        <Typography>加载中...</Typography>\r\n      ) : (\r\n        levels.map(renderLevelCard)\r\n      )}\r\n\r\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          {isAdding ? '添加用户等级' : '编辑用户等级'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {editingLevel && (\r\n            <Box sx={{ mt: 2 }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"等级名称\"\r\n                    value={editingLevel.name}\r\n                    onChange={(e) => setEditingLevel({ ...editingLevel, name: e.target.value })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"描述\"\r\n                    multiline\r\n                    rows={3}\r\n                    value={editingLevel.description}\r\n                    onChange={(e) => setEditingLevel({ ...editingLevel, description: e.target.value })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n                    要求\r\n                  </Typography>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={4}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"最低余额\"\r\n                        type=\"number\"\r\n                        value={editingLevel.requirements.minBalance}\r\n                        onChange={(e) => setEditingLevel({\r\n                          ...editingLevel,\r\n                          requirements: {\r\n                            ...editingLevel.requirements,\r\n                            minBalance: Number(e.target.value)\r\n                          }\r\n                        })}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"最低交易量\"\r\n                        type=\"number\"\r\n                        value={editingLevel.requirements.minTradingVolume}\r\n                        onChange={(e) => setEditingLevel({\r\n                          ...editingLevel,\r\n                          requirements: {\r\n                            ...editingLevel.requirements,\r\n                            minTradingVolume: Number(e.target.value)\r\n                          }\r\n                        })}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"最低持仓时间\"\r\n                        type=\"number\"\r\n                        value={editingLevel.requirements.minHoldingTime}\r\n                        onChange={(e) => setEditingLevel({\r\n                          ...editingLevel,\r\n                          requirements: {\r\n                            ...editingLevel.requirements,\r\n                            minHoldingTime: Number(e.target.value)\r\n                          }\r\n                        })}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n                    权益\r\n                  </Typography>\r\n                  <List>\r\n                    {editingLevel.benefits.map((benefit, index) => (\r\n                      <ListItem key={index}>\r\n                        <TextField\r\n                          fullWidth\r\n                          value={benefit}\r\n                          onChange={(e) => {\r\n                            const newBenefits = [...editingLevel.benefits];\r\n                            newBenefits[index] = e.target.value;\r\n                            setEditingLevel({ ...editingLevel, benefits: newBenefits });\r\n                          }}\r\n                        />\r\n                      </ListItem>\r\n                    ))}\r\n                  </List>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    onClick={() => setEditingLevel({\r\n                      ...editingLevel,\r\n                      benefits: [...editingLevel.benefits, '']\r\n                    })}\r\n                  >\r\n                    添加权益\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenDialog(false)}>取消</Button>\r\n          <Button onClick={handleSave} variant=\"contained\">\r\n            保存\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserLevelManager; ","import axios from 'axios';\r\nimport { BlacklistEntry } from '../types/user';\r\n\r\nconst API_URL = import.meta.env.VITE_API_URL || 'http://localhost:3000/api';\r\n\r\nexport const blacklistService = {\r\n  // 获取所有黑名单条目\r\n  async getAllEntries(): Promise<BlacklistEntry[]> {\r\n    const response = await axios.get(`${API_URL}/blacklist`);\r\n    return response.data;\r\n  },\r\n\r\n  // 创建新黑名单条目\r\n  async createEntry(entry: Omit<BlacklistEntry, 'id' | 'createdAt'>): Promise<BlacklistEntry> {\r\n    const response = await axios.post(`${API_URL}/blacklist`, entry);\r\n    return response.data;\r\n  },\r\n\r\n  // 更新黑名单条目\r\n  async updateEntry(id: string, entry: Partial<BlacklistEntry>): Promise<BlacklistEntry> {\r\n    const response = await axios.put(`${API_URL}/blacklist/${id}`, entry);\r\n    return response.data;\r\n  },\r\n\r\n  // 删除黑名单条目\r\n  async deleteEntry(id: string): Promise<void> {\r\n    await axios.delete(`${API_URL}/blacklist/${id}`);\r\n  },\r\n\r\n  // 获取黑名单条目详情\r\n  async getEntryById(id: string): Promise<BlacklistEntry> {\r\n    const response = await axios.get(`${API_URL}/blacklist/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // 搜索黑名单条目\r\n  async searchEntries(query: string): Promise<BlacklistEntry[]> {\r\n    const response = await axios.get(`${API_URL}/blacklist/search`, {\r\n      params: { query }\r\n    });\r\n    return response.data;\r\n  }\r\n}; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Chip,\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  Block as BlockIcon,\r\n} from '@mui/icons-material';\r\nimport { motion } from 'framer-motion';\r\nimport { blacklistService } from '../../services/blacklistService';\r\nimport { BlacklistEntry } from '../../types/user';\r\nimport theme from '../../theme';\r\nimport { animationConfig } from '../../theme/animation';\r\n\r\nconst BlacklistManager: React.FC = () => {\r\n  const [entries, setEntries] = useState<BlacklistEntry[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [editingEntry, setEditingEntry] = useState<BlacklistEntry | null>(null);\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchEntries();\r\n  }, []);\r\n\r\n  const fetchEntries = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await blacklistService.getAllEntries();\r\n      setEntries(data);\r\n    } catch (err) {\r\n      setError('Failed to fetch blacklist entries');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    setIsAdding(true);\r\n    setEditingEntry({\r\n      id: '',\r\n      userId: '',\r\n      username: '',\r\n      email: '',\r\n      reason: '',\r\n      type: 'other',\r\n      status: 'active',\r\n      createdAt: new Date().toISOString(),\r\n    });\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleEdit = (entry: BlacklistEntry) => {\r\n    setEditingEntry(entry);\r\n    setIsAdding(false);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleDelete = async (id: string) => {\r\n    try {\r\n      await blacklistService.deleteEntry(id);\r\n      setEntries(entries.filter(entry => entry.id !== id));\r\n    } catch (err) {\r\n      setError('Failed to delete blacklist entry');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!editingEntry) return;\r\n\r\n    try {\r\n      if (isAdding) {\r\n        const newEntry = await blacklistService.createEntry(editingEntry);\r\n        setEntries([...entries, newEntry]);\r\n      } else {\r\n        const updatedEntry = await blacklistService.updateEntry(editingEntry.id, editingEntry);\r\n        setEntries(entries.map(entry => \r\n          entry.id === updatedEntry.id ? updatedEntry : entry\r\n        ));\r\n      }\r\n      setOpenDialog(false);\r\n      setEditingEntry(null);\r\n      setIsAdding(false);\r\n    } catch (err) {\r\n      setError('Failed to save blacklist entry');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await blacklistService.searchEntries(searchQuery);\r\n      setEntries(data);\r\n    } catch (err) {\r\n      setError('Failed to search blacklist entries');\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getTypeColor = (type: BlacklistEntry['type']) => {\r\n    switch (type) {\r\n      case 'spam':\r\n        return theme.palette.warning.main;\r\n      case 'fraud':\r\n        return theme.palette.error.main;\r\n      case 'abuse':\r\n        return theme.palette.error.dark;\r\n      default:\r\n        return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const renderEntryCard = (entry: BlacklistEntry) => (\r\n    <motion.div\r\n      key={entry.id}\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: animationConfig.duration.medium }}\r\n    >\r\n      <Card sx={{ mb: 2 }}>\r\n        <CardContent>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              <BlockIcon sx={{ color: theme.palette.error.main }} />\r\n              <Typography variant=\"h6\">{entry.username}</Typography>\r\n              <Chip\r\n                label={entry.type}\r\n                sx={{\r\n                  bgcolor: `${getTypeColor(entry.type)}20`,\r\n                  color: getTypeColor(entry.type),\r\n                }}\r\n                size=\"small\"\r\n              />\r\n            </Box>\r\n            <Box>\r\n              <IconButton onClick={() => handleEdit(entry)}>\r\n                <EditIcon />\r\n              </IconButton>\r\n              <IconButton onClick={() => handleDelete(entry.id)} color=\"error\">\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                用户ID: {entry.userId}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                邮箱: {entry.email}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                加入时间: {new Date(entry.createdAt).toLocaleString()}\r\n              </Typography>\r\n              {entry.expiresAt && (\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  过期时间: {new Date(entry.expiresAt).toLocaleString()}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                原因: {entry.reason}\r\n              </Typography>\r\n            </Grid>\r\n            {entry.notes && (\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  备注: {entry.notes}\r\n                </Typography>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </motion.div>\r\n  );\r\n\r\n  return (\r\n    <Box>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h5\">黑名单管理</Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleAdd}\r\n          color=\"error\"\r\n        >\r\n          添加黑名单\r\n        </Button>\r\n      </Box>\r\n\r\n      <Box sx={{ mb: 3 }}>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs={12} sm={8}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"搜索\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              onKeyPress={(e) => {\r\n                if (e.key === 'Enter') {\r\n                  handleSearch();\r\n                }\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Button\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              onClick={handleSearch}\r\n            >\r\n              搜索\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      {error && (\r\n        <Typography color=\"error\" sx={{ mb: 2 }}>\r\n          {error}\r\n        </Typography>\r\n      )}\r\n\r\n      {loading ? (\r\n        <Typography>加载中...</Typography>\r\n      ) : (\r\n        entries.map(renderEntryCard)\r\n      )}\r\n\r\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          {isAdding ? '添加黑名单' : '编辑黑名单'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {editingEntry && (\r\n            <Box sx={{ mt: 2 }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"用户ID\"\r\n                    value={editingEntry.userId}\r\n                    onChange={(e) => setEditingEntry({ ...editingEntry, userId: e.target.value })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"用户名\"\r\n                    value={editingEntry.username}\r\n                    onChange={(e) => setEditingEntry({ ...editingEntry, username: e.target.value })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"邮箱\"\r\n                    value={editingEntry.email}\r\n                    onChange={(e) => setEditingEntry({ ...editingEntry, email: e.target.value })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>类型</InputLabel>\r\n                    <Select\r\n                      value={editingEntry.type}\r\n                      onChange={(e) => setEditingEntry({ ...editingEntry, type: e.target.value as BlacklistEntry['type'] })}\r\n                      label=\"类型\"\r\n                    >\r\n                      <MenuItem value=\"spam\">垃圾邮件</MenuItem>\r\n                      <MenuItem value=\"fraud\">欺诈</MenuItem>\r\n                      <MenuItem value=\"abuse\">滥用</MenuItem>\r\n                      <MenuItem value=\"other\">其他</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"原因\"\r\n                    value={editingEntry.reason}\r\n                    onChange={(e) => setEditingEntry({ ...editingEntry, reason: e.target.value })}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"备注\"\r\n                    multiline\r\n                    rows={3}\r\n                    value={editingEntry.notes || ''}\r\n                    onChange={(e) => setEditingEntry({ ...editingEntry, notes: e.target.value })}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenDialog(false)}>取消</Button>\r\n          <Button onClick={handleSave} variant=\"contained\" color=\"error\">\r\n            保存\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BlacklistManager; ","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { motion } from 'framer-motion';\r\nimport { Grid, Typography, Container, LinearProgress, Alert, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControl, InputLabel, Select, MenuItem, Chip, IconButton, Tooltip, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, Avatar, Card, CardContent, InputAdornment, Tabs, Paper, Box, Tab } from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  Search as SearchIcon,\r\n  Clear as ClearIcon,\r\n  FilterList as FilterIcon,\r\n  Refresh as RefreshIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  Cancel as CancelIcon,\r\n  Pending as PendingIcon,\r\n} from '@mui/icons-material';\r\nimport { getUsers, createUser, updateUser, deleteUser } from '../api/users';\r\nimport theme from '../theme';\r\nimport { animationConfig } from '../theme/animation';\r\nimport PageLayout from '../components/common/PageLayout';\r\nimport UserList from '../components/user/UserList';\r\nimport UserForm from '../components/user/UserForm';\r\nimport UserLevelManager from '../components/user/UserLevelManager';\r\nimport BlacklistManager from '../components/user/BlacklistManager';\r\nimport { User, UserFormData } from '../types/user';\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`user-management-tabpanel-${index}`}\r\n      aria-labelledby={`user-management-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst UserManagement: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('all');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  const fetchUsers = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      // Mock API call\r\n      const mockUsers: User[] = [\r\n        {\r\n          _id: '1',\r\n          username: 'user1',\r\n          email: 'user1@example.com',\r\n          status: 'active',\r\n          role: 'user',\r\n          createdAt: '2023-01-01T12:00:00Z',\r\n          lastLogin: '2023-01-01T12:00:00Z',\r\n        },\r\n        {\r\n          _id: '2',\r\n          username: 'user2',\r\n          email: 'user2@example.com',\r\n          status: 'inactive',\r\n          role: 'admin',\r\n          createdAt: '2023-01-02T12:00:00Z',\r\n          lastLogin: '2023-01-02T12:00:00Z',\r\n        },\r\n      ];\r\n      setUsers(mockUsers);\r\n    } catch (err) {\r\n      setError(t('userManagement.error'));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [t]);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, [fetchUsers]);\r\n\r\n  const handleAddUser = () => {\r\n    setSelectedUser(null);\r\n  };\r\n\r\n  const handleEditUser = (user: User) => {\r\n    setSelectedUser(user);\r\n  };\r\n\r\n  const handleDeleteUser = (user: User) => {\r\n    // Handle delete\r\n  };\r\n\r\n  const handleViewDetails = (user: User) => {\r\n    // Handle view details\r\n  };\r\n\r\n  const handleSubmit = async (formData: UserFormData) => {\r\n    try {\r\n      setLoading(true);\r\n      if (selectedUser) {\r\n        // Update existing user\r\n        const { password, ...userData } = formData;\r\n        const updatedUser = await updateUser(selectedUser._id, {\r\n          ...userData,\r\n          _id: selectedUser._id,\r\n          createdAt: selectedUser.createdAt,\r\n        } as User);\r\n        setUsers(users.map(user => \r\n          user._id === selectedUser._id ? updatedUser : user\r\n        ));\r\n      } else {\r\n        // Create new user\r\n        const newUser = await createUser({\r\n          ...formData,\r\n          createdAt: new Date().toISOString(),\r\n        } as User);\r\n        setUsers([...users, newUser]);\r\n      }\r\n      setSelectedUser(null);\r\n    } catch (error) {\r\n      console.error('Error saving user:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setSelectedUser(null);\r\n  };\r\n\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const filteredUsers = users.filter((user) => {\r\n    const matchesSearch = user.username.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      user.email.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesStatus = statusFilter === 'all' || user.status === statusFilter;\r\n    return matchesSearch && matchesStatus;\r\n  });\r\n\r\n  return (\r\n    <PageLayout\r\n      title={t('userManagement.title')}\r\n      actions={\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleAddUser}\r\n          sx={{\r\n            background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n            '&:hover': {\r\n              background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n            },\r\n          }}\r\n        >\r\n          {t('userManagement.addUser')}\r\n        </Button>\r\n      }\r\n      filters={\r\n        <Box sx={{ mb: 3 }}>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <Box>\r\n                <TextField\r\n                  fullWidth\r\n                  label={t('userManagement.search')}\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <SearchIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <Box>\r\n                <FormControl fullWidth>\r\n                  <InputLabel>{t('userManagement.status')}</InputLabel>\r\n                  <Select\r\n                    value={statusFilter}\r\n                    onChange={(e) => setStatusFilter(e.target.value)}\r\n                    label={t('userManagement.status')}\r\n                  >\r\n                    <MenuItem value=\"all\">{t('userManagement.all')}</MenuItem>\r\n                    <MenuItem value=\"active\">{t('userManagement.active')}</MenuItem>\r\n                    <MenuItem value=\"inactive\">{t('userManagement.inactive')}</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      }\r\n    >\r\n      <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' }, gap: 3 }}>\r\n        <Paper sx={{ width: '100%', mb: 2 }}>\r\n          <Tabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n          >\r\n            <Tab label=\"用户列表\" />\r\n            <Tab label=\"用户等级\" />\r\n            <Tab label=\"黑名单\" />\r\n          </Tabs>\r\n\r\n          <TabPanel value={tabValue} index={0}>\r\n            <UserList\r\n              users={filteredUsers}\r\n              onEdit={handleEditUser}\r\n              onDelete={handleDeleteUser}\r\n              onViewDetails={handleViewDetails}\r\n            />\r\n          </TabPanel>\r\n\r\n          <TabPanel value={tabValue} index={1}>\r\n            <UserLevelManager />\r\n          </TabPanel>\r\n\r\n          <TabPanel value={tabValue} index={2}>\r\n            <BlacklistManager />\r\n          </TabPanel>\r\n        </Paper>\r\n        {selectedUser && (\r\n          <UserForm\r\n            user={selectedUser}\r\n            onSubmit={handleSubmit}\r\n            onCancel={handleCancel}\r\n          />\r\n        )}\r\n      </Box>\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default UserManagement; ","import { User, UserFormData } from '../types/user';\r\n\r\n// 模拟 API 调用\r\nexport const getUsers = async (): Promise<User[]> => {\r\n  // 这里应该是实际的 API 调用\r\n  return [\r\n    {\r\n      _id: '1',\r\n      username: 'admin',\r\n      email: 'admin@example.com',\r\n      status: 'active',\r\n      role: 'admin',\r\n      lastLogin: new Date().toISOString(),\r\n      createdAt: new Date().toISOString(),\r\n    },\r\n    // 添加更多模拟数据...\r\n  ];\r\n};\r\n\r\nexport const createUser = async (userData: UserFormData): Promise<User> => {\r\n  // 这里应该是实际的 API 调用\r\n  return {\r\n    _id: Date.now().toString(),\r\n    username: userData.username,\r\n    email: userData.email,\r\n    status: userData.status,\r\n    role: userData.role,\r\n    lastLogin: new Date().toISOString(),\r\n    createdAt: new Date().toISOString(),\r\n  };\r\n};\r\n\r\nexport const updateUser = async (userId: string, userData: Partial<User>): Promise<User> => {\r\n  // 这里应该是实际的 API 调用\r\n  return {\r\n    _id: userId,\r\n    username: userData.username || '',\r\n    email: userData.email || '',\r\n    status: userData.status || 'active',\r\n    role: userData.role || 'user',\r\n    lastLogin: new Date().toISOString(),\r\n    createdAt: userData.createdAt || new Date().toISOString(),\r\n  };\r\n};\r\n\r\nexport const deleteUser = async (userId: string): Promise<void> => {\r\n  // 这里应该是实际的 API 调用\r\n}; ","import axios from 'axios';\r\n\r\nconst baseURL = import.meta.env.VITE_API_URL || 'http://localhost:3000';\r\n\r\nconst instance = axios.create({\r\n  baseURL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 请求拦截器\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 响应拦截器\r\ninstance.interceptors.response.use(\r\n  (response) => {\r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    if (error.response) {\r\n      switch (error.response.status) {\r\n        case 401:\r\n          // 未授权，清除 token 并跳转到登录页\r\n          localStorage.removeItem('token');\r\n          window.location.href = '/login';\r\n          break;\r\n        case 403:\r\n          // 禁止访问\r\n          window.location.href = '/403';\r\n          break;\r\n        case 404:\r\n          // 资源不存在\r\n          window.location.href = '/404';\r\n          break;\r\n        case 500:\r\n          // 服务器错误\r\n          window.location.href = '/500';\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance; ","import axios from './axios';\r\n\r\nexport interface Order {\r\n  id: string;\r\n  _id: string;\r\n  userId: string;\r\n  username: string;\r\n  strategyId: string;\r\n  strategyName: string;\r\n  tradingPair: string;\r\n  type: 'buy' | 'sell';\r\n  status: 'failed' | 'pending' | 'completed' | 'cancelled';\r\n  amount: number;\r\n  price: number;\r\n  totalAmount: number;\r\n  timestamp: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  executedAt?: string;\r\n  cancelledAt?: string;\r\n  error?: string;\r\n}\r\n\r\n// Mock data\r\nconst mockOrders: Order[] = [\r\n  {\r\n    id: '1',\r\n    _id: '1',\r\n    userId: 'user1',\r\n    username: 'John Doe',\r\n    strategyId: 'strategy1',\r\n    strategyName: 'Momentum Trading',\r\n    tradingPair: 'BTC/USDT',\r\n    type: 'buy',\r\n    status: 'completed',\r\n    price: 50000,\r\n    amount: 5000,\r\n    totalAmount: 5000,\r\n    timestamp: '2024-01-01T10:00:00Z',\r\n    createdAt: '2024-01-01T10:00:00Z',\r\n    updatedAt: '2024-01-01T10:01:00Z'\r\n  },\r\n  {\r\n    id: '2',\r\n    _id: '2',\r\n    userId: 'user2',\r\n    username: 'Jane Smith',\r\n    strategyId: 'strategy2',\r\n    strategyName: 'Mean Reversion',\r\n    tradingPair: 'ETH/USDT',\r\n    type: 'sell',\r\n    status: 'pending',\r\n    price: 3000,\r\n    amount: 3000,\r\n    totalAmount: 3000,\r\n    timestamp: '2024-01-01T11:00:00Z',\r\n    createdAt: '2024-01-01T11:00:00Z',\r\n    updatedAt: '2024-01-01T11:00:00Z'\r\n  }\r\n];\r\n\r\nexport const getOrders = async (params?: {\r\n  page?: number;\r\n  limit?: number;\r\n  status?: string;\r\n  type?: string;\r\n  startDate?: string;\r\n  endDate?: string;\r\n}) => {\r\n  const response = await axios.get<{ data: Order[]; total: number }>('/orders', { params });\r\n  return response;\r\n};\r\n\r\nexport const getOrderById = async (id: string) => {\r\n  const response = await axios.get<Order>(`/orders/${id}`);\r\n  return response;\r\n};\r\n\r\nexport const updateOrderStatus = async (\r\n  id: string,\r\n  status: Order['status']\r\n): Promise<Order | null> => {\r\n  const order = mockOrders.find((o) => o.id === id);\r\n  if (order) {\r\n    order.status = status;\r\n    order.updatedAt = new Date().toISOString();\r\n    return order;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const cancelOrder = async (id: string): Promise<boolean> => {\r\n  const order = mockOrders.find((o) => o.id === id);\r\n  if (order) {\r\n    order.status = 'cancelled';\r\n    order.updatedAt = new Date().toISOString();\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const createOrder = async (data: Partial<Order>) => {\r\n  const response = await axios.post<Order>('/orders', data);\r\n  return response;\r\n};\r\n\r\nexport const updateOrder = async (id: string, data: Partial<Order>) => {\r\n  const response = await axios.put<Order>(`/orders/${id}`, data);\r\n  return response;\r\n};\r\n\r\nexport const deleteOrder = async (id: string) => {\r\n  const response = await axios.delete(`/orders/${id}`);\r\n  return response;\r\n}; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  Grid,\r\n  LinearProgress,\r\n  Alert,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Chip,\r\n  IconButton,\r\n  Tooltip,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Card,\r\n  CardContent,\r\n} from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  Add as AddIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  Search as SearchIcon,\r\n  Clear as ClearIcon,\r\n  FilterList as FilterIcon,\r\n  Refresh as RefreshIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  Cancel as CancelIcon,\r\n  Pending as PendingIcon,\r\n} from '@mui/icons-material';\r\nimport { getOrders, createOrder, updateOrder, deleteOrder } from '../api/orders';\r\nimport { Order } from '../types/order';\r\nimport theme from '../theme';\r\nimport { animationConfig } from '../theme/animation';\r\nimport PageLayout from '../components/common/PageLayout';\r\n\r\nconst OrderManagement: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const [orders, setOrders] = useState<Order[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState<string>('all');\r\n  const [typeFilter, setTypeFilter] = useState<string>('all');\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [dialogType, setDialogType] = useState<'create' | 'edit'>('create');\r\n  const [selectedOrder, setSelectedOrder] = useState<Order | null>(null);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  const fetchOrders = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await getOrders();\r\n      if (response && response.data) {\r\n        const ordersData = response.data.data || [];\r\n        const processedOrders = ordersData.map(order => ({\r\n          ...order,\r\n          totalAmount: order.totalAmount ?? order.price * order.amount\r\n        }));\r\n        setOrders(processedOrders);\r\n        setTotalPages(Math.ceil(response.data.total / pageSize));\r\n      } else {\r\n        setOrders([]);\r\n        setTotalPages(1);\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n      console.error('Error fetching orders:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const getStatusColor = (status: Order['status']) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return theme.palette.success.main;\r\n      case 'cancelled':\r\n        return theme.palette.error.main;\r\n      case 'failed':\r\n        return theme.palette.error.main;\r\n      case 'pending':\r\n        return theme.palette.warning.main;\r\n      default:\r\n        return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const getTypeColor = (type: Order['type']) => {\r\n    switch (type) {\r\n      case 'buy':\r\n        return theme.palette.success.main;\r\n      case 'sell':\r\n        return theme.palette.error.main;\r\n      default:\r\n        return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: Order['status']) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return <CheckCircleIcon sx={{ color: theme.palette.success.main }} />;\r\n      case 'cancelled':\r\n        return <CancelIcon sx={{ color: theme.palette.error.main }} />;\r\n      case 'failed':\r\n        return <CancelIcon sx={{ color: theme.palette.error.main }} />;\r\n      case 'pending':\r\n        return <PendingIcon sx={{ color: theme.palette.warning.main }} />;\r\n      default:\r\n        return undefined;\r\n    }\r\n  };\r\n\r\n  const filteredOrders = orders.filter(order => {\r\n    const matchesSearch = searchTerm === '' || \r\n      order.id.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      order._id.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesStatus = statusFilter === 'all' || order.status === statusFilter;\r\n    const matchesType = typeFilter === 'all' || order.type === typeFilter;\r\n    return matchesSearch && matchesStatus && matchesType;\r\n  });\r\n\r\n  const renderFilters = () => (\r\n    <Card\r\n      sx={{\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[2],\r\n        '&::before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          height: '4px',\r\n          background: `linear-gradient(90deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n        },\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <Box sx={{ mb: 3 }}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            placeholder={t('orderManagement.searchPlaceholder')}\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <SearchIcon sx={{ color: theme.palette.primary.main, mr: 1 }} />\r\n              ),\r\n              endAdornment: searchTerm && (\r\n                <IconButton onClick={() => setSearchTerm('')}>\r\n                  <ClearIcon />\r\n                </IconButton>\r\n              ),\r\n            }}\r\n          />\r\n        </Box>\r\n\r\n        <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>\r\n          <FormControl fullWidth>\r\n            <InputLabel>{t('orderManagement.status')}</InputLabel>\r\n            <Select\r\n              value={statusFilter}\r\n              onChange={(e) => setStatusFilter(e.target.value)}\r\n              label={t('orderManagement.status')}\r\n            >\r\n              <MenuItem value=\"all\">{t('orderManagement.all')}</MenuItem>\r\n              <MenuItem value=\"pending\">{t('orderManagement.pending')}</MenuItem>\r\n              <MenuItem value=\"completed\">{t('orderManagement.completed')}</MenuItem>\r\n              <MenuItem value=\"cancelled\">{t('orderManagement.cancelled')}</MenuItem>\r\n              <MenuItem value=\"failed\">{t('orderManagement.failed')}</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl fullWidth>\r\n            <InputLabel>{t('orderManagement.type')}</InputLabel>\r\n            <Select\r\n              value={typeFilter}\r\n              onChange={(e) => setTypeFilter(e.target.value)}\r\n              label={t('orderManagement.type')}\r\n            >\r\n              <MenuItem value=\"all\">{t('orderManagement.all')}</MenuItem>\r\n              <MenuItem value=\"buy\">{t('orderManagement.buy')}</MenuItem>\r\n              <MenuItem value=\"sell\">{t('orderManagement.sell')}</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {t('orderManagement.totalOrders', { count: filteredOrders.length })}\r\n          </Typography>\r\n          <Tooltip title={t('orderManagement.refresh')}>\r\n            <motion.div\r\n              whileHover={{ rotate: 360 }}\r\n              transition={{ duration: animationConfig.duration.long }}\r\n            >\r\n              <IconButton onClick={fetchOrders}>\r\n                <RefreshIcon />\r\n              </IconButton>\r\n            </motion.div>\r\n          </Tooltip>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n\r\n  const renderContent = () => (\r\n    <motion.div\r\n      initial={animationConfig.variants.fadeIn.initial}\r\n      animate={animationConfig.variants.fadeIn.animate}\r\n      transition={{ duration: animationConfig.duration.medium }}\r\n    >\r\n      <Card>\r\n        <CardContent>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>{t('orderManagement.id')}</TableCell>\r\n                  <TableCell>{t('orderManagement.tradingPair')}</TableCell>\r\n                  <TableCell>{t('orderManagement.type')}</TableCell>\r\n                  <TableCell>{t('orderManagement.status')}</TableCell>\r\n                  <TableCell>{t('orderManagement.price')}</TableCell>\r\n                  <TableCell>{t('orderManagement.amount')}</TableCell>\r\n                  <TableCell>{t('orderManagement.totalAmount')}</TableCell>\r\n                  <TableCell>{t('orderManagement.createdAt')}</TableCell>\r\n                  <TableCell>{t('orderManagement.actions')}</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {filteredOrders.map((order) => (\r\n                  <TableRow key={order._id}>\r\n                    <TableCell>{order._id}</TableCell>\r\n                    <TableCell>{order.tradingPair}</TableCell>\r\n                    <TableCell>\r\n                      <Chip\r\n                        label={t(`orderManagement.${order.type}`)}\r\n                        color={order.type === 'buy' ? 'success' : 'error'}\r\n                        size=\"small\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                        {getStatusIcon(order.status)}\r\n                        <Typography>{t(`orderManagement.${order.status}`)}</Typography>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>{order.price.toFixed(2)}</TableCell>\r\n                    <TableCell>{order.amount}</TableCell>\r\n                    <TableCell>{order.totalAmount.toFixed(2)}</TableCell>\r\n                    <TableCell>{new Date(order.createdAt).toLocaleString()}</TableCell>\r\n                    <TableCell>\r\n                      <Box sx={{ display: 'flex', gap: 1 }}>\r\n                        <Tooltip title={t('orderManagement.edit')}>\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            onClick={() => handleEditOrder(order)}\r\n                          >\r\n                            <EditIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title={t('orderManagement.delete')}>\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            onClick={() => handleDeleteOrder(order)}\r\n                          >\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </Box>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={filteredOrders.length}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            rowsPerPage={rowsPerPage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </motion.div>\r\n  );\r\n\r\n  const handleEditOrder = (order: Order) => {\r\n    setSelectedOrder(order);\r\n    setDialogType('edit');\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleDeleteOrder = (order: Order) => {\r\n    // Handle delete\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      title={t('orderManagement.title')}\r\n      filters={renderFilters()}\r\n    >\r\n      {renderContent()}\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default OrderManagement; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  Grid,\r\n  LinearProgress,\r\n  Alert,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Chip,\r\n  IconButton,\r\n  Tooltip,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  Save as SaveIcon,\r\n  Edit as EditIcon,\r\n  Refresh as RefreshIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  Cancel as CancelIcon,\r\n  Warning as WarningIcon,\r\n  AttachMoney as AttachMoneyIcon,\r\n  AccountBalance as AccountBalanceIcon,\r\n} from '@mui/icons-material';\r\nimport theme from '../theme';\r\nimport { animationConfig } from '../theme/animation';\r\nimport PageLayout from '../components/common/PageLayout';\r\n\r\ninterface Commission {\r\n  id: string;\r\n  userId: string;\r\n  username: string;\r\n  amount: number;\r\n  currency: string;\r\n  type: 'referral' | 'trading' | 'other';\r\n  status: 'pending' | 'paid' | 'cancelled';\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  description: string;\r\n}\r\n\r\nconst CommissionList: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const [commissions, setCommissions] = useState<Commission[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [selectedCommission, setSelectedCommission] = useState<Commission | null>(null);\r\n  const [paymentStatus, setPaymentStatus] = useState<'paid' | 'cancelled'>('paid');\r\n  const [paymentNote, setPaymentNote] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchCommissions();\r\n  }, []);\r\n\r\n  const fetchCommissions = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await fetch('/api/admin/commissions');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch commissions');\r\n      }\r\n      const data = await response.json();\r\n      setCommissions(data);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n      console.error('Error fetching commissions:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: Commission['status']) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return theme.palette.warning.main;\r\n      case 'paid':\r\n        return theme.palette.success.main;\r\n      case 'cancelled':\r\n        return theme.palette.error.main;\r\n      default:\r\n        return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: Commission['status']) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return <WarningIcon />;\r\n      case 'paid':\r\n        return <CheckCircleIcon />;\r\n      case 'cancelled':\r\n        return <CancelIcon />;\r\n      default:\r\n        return <WarningIcon />;\r\n    }\r\n  };\r\n\r\n  const getTypeColor = (type: Commission['type']) => {\r\n    switch (type) {\r\n      case 'referral':\r\n        return theme.palette.primary.main;\r\n      case 'trading':\r\n        return theme.palette.secondary.main;\r\n      case 'other':\r\n        return theme.palette.info.main;\r\n      default:\r\n        return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const handlePayment = async (commission: Commission) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await fetch(`/api/admin/commissions/${commission.id}/status`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          status: paymentStatus,\r\n          note: paymentNote,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update commission status');\r\n      }\r\n\r\n      const updatedCommission = await response.json();\r\n      setCommissions(commissions.map(c => \r\n        c.id === commission.id ? updatedCommission : c\r\n      ));\r\n      setOpenDialog(false);\r\n      setSelectedCommission(null);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n      console.error('Error updating commission:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (selectedCommission) {\r\n      await handlePayment(selectedCommission);\r\n    }\r\n  };\r\n\r\n  const renderCommissionCard = (commission: Commission) => (\r\n    <motion.div\r\n      key={commission.id}\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: animationConfig.duration.medium }}\r\n    >\r\n      <Card\r\n        sx={{\r\n          backgroundColor: theme.palette.background.paper,\r\n          boxShadow: theme.shadows[2],\r\n          '&:hover': {\r\n            boxShadow: theme.shadows[4],\r\n          },\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              <Box\r\n                sx={{\r\n                  color: getStatusColor(commission.status),\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                {getStatusIcon(commission.status)}\r\n              </Box>\r\n              <Typography variant=\"h6\" sx={{ fontWeight: 500 }}>\r\n                {commission.username}\r\n              </Typography>\r\n            </Box>\r\n            <Tooltip title={t('commissionList.processPayment')}>\r\n              <IconButton onClick={() => {\r\n                setSelectedCommission(commission);\r\n                setPaymentStatus('paid');\r\n                setPaymentNote('');\r\n                setOpenDialog(true);\r\n              }}>\r\n                <AccountBalanceIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n            {commission.userId}\r\n          </Typography>\r\n          <Divider sx={{ my: 2 }} />\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('commissionList.amount')}\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                <AttachMoneyIcon sx={{ color: theme.palette.primary.main }} />\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                  {commission.amount} {commission.currency}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('commissionList.type')}\r\n              </Typography>\r\n              <Chip\r\n                label={t(`commissionList.${commission.type}`)}\r\n                sx={{\r\n                  bgcolor: `${getTypeColor(commission.type)}20`,\r\n                  color: getTypeColor(commission.type),\r\n                  fontWeight: 500,\r\n                }}\r\n              />\r\n            </Box>\r\n          </Box>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('commissionList.status')}\r\n              </Typography>\r\n              <Chip\r\n                label={t(`commissionList.${commission.status}`)}\r\n                sx={{\r\n                  bgcolor: `${getStatusColor(commission.status)}20`,\r\n                  color: getStatusColor(commission.status),\r\n                  fontWeight: 500,\r\n                }}\r\n              />\r\n            </Box>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('commissionList.createdAt')}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                {new Date(commission.createdAt).toLocaleString()}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n            {commission.description}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </motion.div>\r\n  );\r\n\r\n  const renderContent = () => (\r\n    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))', gap: 3 }}>\r\n      {commissions.map(renderCommissionCard)}\r\n    </Box>\r\n  );\r\n\r\n  const renderActions = () => (\r\n    <Button\r\n      variant=\"contained\"\r\n      startIcon={<RefreshIcon />}\r\n      onClick={fetchCommissions}\r\n      sx={{\r\n        background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n        '&:hover': {\r\n          background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n        },\r\n      }}\r\n    >\r\n      {t('commissionList.refresh')}\r\n    </Button>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Box sx={{ p: 3 }}>\r\n        <Alert severity=\"error\">{error}</Alert>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PageLayout\r\n      title={t('commissionList.title')}\r\n      actions={renderActions()}\r\n      content={renderContent()}\r\n    >\r\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>{t('commissionList.processPayment')}</DialogTitle>\r\n        <DialogContent>\r\n          {selectedCommission && (\r\n            <Box sx={{ mt: 2 }}>\r\n              <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                {selectedCommission.username}\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 2 }}>\r\n                <AttachMoneyIcon sx={{ color: theme.palette.primary.main }} />\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                  {selectedCommission.amount} {selectedCommission.currency}\r\n                </Typography>\r\n              </Box>\r\n              <FormControl fullWidth sx={{ mb: 2 }}>\r\n                <InputLabel>{t('commissionList.status')}</InputLabel>\r\n                <Select\r\n                  value={paymentStatus}\r\n                  onChange={(e) => setPaymentStatus(e.target.value as 'paid' | 'cancelled')}\r\n                  label={t('commissionList.status')}\r\n                >\r\n                  <MenuItem value=\"paid\">{t('commissionList.paid')}</MenuItem>\r\n                  <MenuItem value=\"cancelled\">{t('commissionList.cancelled')}</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <TextField\r\n                fullWidth\r\n                multiline\r\n                rows={3}\r\n                value={paymentNote}\r\n                onChange={(e) => setPaymentNote(e.target.value)}\r\n                label={t('commissionList.note')}\r\n              />\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => setOpenDialog(false)}\r\n            sx={{\r\n              color: theme.palette.text.secondary,\r\n              '&:hover': {\r\n                backgroundColor: `${theme.palette.text.secondary}10`,\r\n              },\r\n            }}\r\n          >\r\n            {t('common.cancel')}\r\n          </Button>\r\n          <Button\r\n            onClick={handleSave}\r\n            variant=\"contained\"\r\n            sx={{\r\n              background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n              '&:hover': {\r\n                background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n              },\r\n            }}\r\n          >\r\n            {t('common.save')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default CommissionList; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  Grid,\r\n  LinearProgress,\r\n  Alert,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Chip,\r\n  IconButton,\r\n  Tooltip,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n} from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  Save as SaveIcon,\r\n  Edit as EditIcon,\r\n  Refresh as RefreshIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  Cancel as CancelIcon,\r\n  Warning as WarningIcon,\r\n  AttachMoney as AttachMoneyIcon,\r\n  AccountBalance as AccountBalanceIcon,\r\n} from '@mui/icons-material';\r\nimport theme from '../theme';\r\nimport { animationConfig } from '../theme/animation';\r\nimport PageLayout from '../components/common/PageLayout';\r\n\r\ninterface Settlement {\r\n  id: string;\r\n  userId: string;\r\n  username: string;\r\n  amount: number;\r\n  currency: string;\r\n  type: 'referral' | 'trading' | 'other';\r\n  status: 'pending' | 'settled' | 'cancelled';\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  description: string;\r\n  settlementDate?: string;\r\n}\r\n\r\nconst CommissionSettlement: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const [settlements, setSettlements] = useState<Settlement[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [selectedSettlement, setSelectedSettlement] = useState<Settlement | null>(null);\r\n  const [settlementStatus, setSettlementStatus] = useState<'settled' | 'cancelled'>('settled');\r\n  const [settlementNote, setSettlementNote] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchSettlements();\r\n  }, []);\r\n\r\n  const fetchSettlements = async () => {\r\n    try {\r\n      // Mock API call\r\n      const mockSettlements: Settlement[] = [\r\n        {\r\n          id: '1',\r\n          userId: 'user1',\r\n          username: 'John Doe',\r\n          amount: 1000,\r\n          currency: 'USDT',\r\n          type: 'referral',\r\n          status: 'pending',\r\n          createdAt: '2024-04-23T10:00:00Z',\r\n          updatedAt: '2024-04-23T10:00:00Z',\r\n          description: 'Referral commission for new user registration',\r\n        },\r\n        {\r\n          id: '2',\r\n          userId: 'user2',\r\n          username: 'Jane Smith',\r\n          amount: 500,\r\n          currency: 'BTC',\r\n          type: 'trading',\r\n          status: 'pending',\r\n          createdAt: '2024-04-23T09:00:00Z',\r\n          updatedAt: '2024-04-23T09:00:00Z',\r\n          description: 'Trading commission for successful trades',\r\n        },\r\n      ];\r\n      setSettlements(mockSettlements);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: Settlement['status']) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return theme.palette.warning.main;\r\n      case 'settled':\r\n        return theme.palette.success.main;\r\n      case 'cancelled':\r\n        return theme.palette.error.main;\r\n      default:\r\n        return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: Settlement['status']) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return <WarningIcon />;\r\n      case 'settled':\r\n        return <CheckCircleIcon />;\r\n      case 'cancelled':\r\n        return <CancelIcon />;\r\n      default:\r\n        return <WarningIcon />;\r\n    }\r\n  };\r\n\r\n  const getTypeColor = (type: Settlement['type']) => {\r\n    switch (type) {\r\n      case 'referral':\r\n        return theme.palette.primary.main;\r\n      case 'trading':\r\n        return theme.palette.secondary.main;\r\n      case 'other':\r\n        return theme.palette.info.main;\r\n      default:\r\n        return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const handleSettle = (settlement: Settlement) => {\r\n    setSelectedSettlement(settlement);\r\n    setSettlementStatus('settled');\r\n    setSettlementNote('');\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (selectedSettlement) {\r\n      const updatedSettlements = settlements.map((settlement) =>\r\n        settlement.id === selectedSettlement.id\r\n          ? {\r\n              ...settlement,\r\n              status: settlementStatus,\r\n              updatedAt: new Date().toISOString(),\r\n              settlementDate: settlementStatus === 'settled' ? new Date().toISOString() : undefined,\r\n              description: settlementNote || settlement.description,\r\n            }\r\n          : settlement\r\n      );\r\n      setSettlements(updatedSettlements);\r\n      setOpenDialog(false);\r\n      setSelectedSettlement(null);\r\n    }\r\n  };\r\n\r\n  const renderSettlementCard = (settlement: Settlement) => (\r\n    <motion.div\r\n      key={settlement.id}\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: animationConfig.duration.medium }}\r\n    >\r\n      <Card\r\n        sx={{\r\n          backgroundColor: theme.palette.background.paper,\r\n          boxShadow: theme.shadows[2],\r\n          '&:hover': {\r\n            boxShadow: theme.shadows[4],\r\n          },\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              <Box\r\n                sx={{\r\n                  color: getStatusColor(settlement.status),\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                {getStatusIcon(settlement.status)}\r\n              </Box>\r\n              <Typography variant=\"h6\" sx={{ fontWeight: 500 }}>\r\n                {settlement.username}\r\n              </Typography>\r\n            </Box>\r\n            <Tooltip title={t('commissionSettlement.settle')}>\r\n              <IconButton onClick={() => handleSettle(settlement)}>\r\n                <AccountBalanceIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n            {settlement.userId}\r\n          </Typography>\r\n          <Divider sx={{ my: 2 }} />\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('commissionSettlement.amount')}\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                <AttachMoneyIcon sx={{ color: theme.palette.primary.main }} />\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                  {settlement.amount} {settlement.currency}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('commissionSettlement.type')}\r\n              </Typography>\r\n              <Chip\r\n                label={t(`commissionSettlement.${settlement.type}`)}\r\n                sx={{\r\n                  bgcolor: `${getTypeColor(settlement.type)}20`,\r\n                  color: getTypeColor(settlement.type),\r\n                  fontWeight: 500,\r\n                }}\r\n              />\r\n            </Box>\r\n          </Box>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('commissionSettlement.status')}\r\n              </Typography>\r\n              <Chip\r\n                label={t(`commissionSettlement.${settlement.status}`)}\r\n                sx={{\r\n                  bgcolor: `${getStatusColor(settlement.status)}20`,\r\n                  color: getStatusColor(settlement.status),\r\n                  fontWeight: 500,\r\n                }}\r\n              />\r\n            </Box>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('commissionSettlement.createdAt')}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                {new Date(settlement.createdAt).toLocaleString()}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          {settlement.settlementDate && (\r\n            <Box sx={{ mb: 2 }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('commissionSettlement.settlementDate')}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                {new Date(settlement.settlementDate).toLocaleString()}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n            {settlement.description}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </motion.div>\r\n  );\r\n\r\n  const renderContent = () => (\r\n    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))', gap: 3 }}>\r\n      {settlements.map(renderSettlementCard)}\r\n    </Box>\r\n  );\r\n\r\n  const renderActions = () => (\r\n    <Button\r\n      variant=\"contained\"\r\n      startIcon={<RefreshIcon />}\r\n      onClick={fetchSettlements}\r\n      sx={{\r\n        background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n        '&:hover': {\r\n          background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n        },\r\n      }}\r\n    >\r\n      {t('commissionSettlement.refresh')}\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      title={t('commissionSettlement.title')}\r\n      actions={renderActions()}\r\n      content={renderContent()}\r\n    >\r\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>{t('commissionSettlement.settleCommission')}</DialogTitle>\r\n        <DialogContent>\r\n          {selectedSettlement && (\r\n            <Box sx={{ mt: 2 }}>\r\n              <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                {selectedSettlement.username}\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 2 }}>\r\n                <AttachMoneyIcon sx={{ color: theme.palette.primary.main }} />\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                  {selectedSettlement.amount} {selectedSettlement.currency}\r\n                </Typography>\r\n              </Box>\r\n              <FormControl fullWidth sx={{ mb: 2 }}>\r\n                <InputLabel>{t('commissionSettlement.status')}</InputLabel>\r\n                <Select\r\n                  value={settlementStatus}\r\n                  onChange={(e) => setSettlementStatus(e.target.value as 'settled' | 'cancelled')}\r\n                  label={t('commissionSettlement.status')}\r\n                >\r\n                  <MenuItem value=\"settled\">{t('commissionSettlement.settled')}</MenuItem>\r\n                  <MenuItem value=\"cancelled\">{t('commissionSettlement.cancelled')}</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <TextField\r\n                fullWidth\r\n                multiline\r\n                rows={3}\r\n                value={settlementNote}\r\n                onChange={(e) => setSettlementNote(e.target.value)}\r\n                label={t('commissionSettlement.note')}\r\n              />\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => setOpenDialog(false)}\r\n            sx={{\r\n              color: theme.palette.text.secondary,\r\n              '&:hover': {\r\n                backgroundColor: `${theme.palette.text.secondary}10`,\r\n              },\r\n            }}\r\n          >\r\n            {t('common.cancel')}\r\n          </Button>\r\n          <Button\r\n            onClick={handleSave}\r\n            variant=\"contained\"\r\n            sx={{\r\n              background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n              '&:hover': {\r\n                background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n              },\r\n            }}\r\n          >\r\n            {t('common.save')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default CommissionSettlement; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  Grid,\r\n  LinearProgress,\r\n  Alert,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Chip,\r\n  IconButton,\r\n  Tooltip,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n} from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  Save as SaveIcon,\r\n  Edit as EditIcon,\r\n  Refresh as RefreshIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  Cancel as CancelIcon,\r\n  Warning as WarningIcon,\r\n  AttachMoney as AttachMoneyIcon,\r\n  TrendingUp as TrendingUpIcon,\r\n  TrendingDown as TrendingDownIcon,\r\n} from '@mui/icons-material';\r\nimport theme from '../theme';\r\nimport { animationConfig } from '../theme/animation';\r\nimport PageLayout from '../components/common/PageLayout';\r\n\r\ninterface Profit {\r\n  id: string;\r\n  userId: string;\r\n  username: string;\r\n  amount: number;\r\n  currency: string;\r\n  type: 'trading' | 'investment' | 'other';\r\n  status: 'pending' | 'confirmed' | 'cancelled';\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  description: string;\r\n  profitRate: number;\r\n}\r\n\r\nconst ProfitList: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const [profits, setProfits] = useState<Profit[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [selectedProfit, setSelectedProfit] = useState<Profit | null>(null);\r\n  const [profitStatus, setProfitStatus] = useState<'confirmed' | 'cancelled'>('confirmed');\r\n  const [profitNote, setProfitNote] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchProfits();\r\n  }, []);\r\n\r\n  const fetchProfits = async () => {\r\n    try {\r\n      // Mock API call\r\n      const mockProfits: Profit[] = [\r\n        {\r\n          id: '1',\r\n          userId: 'user1',\r\n          username: 'John Doe',\r\n          amount: 1000,\r\n          currency: 'USDT',\r\n          type: 'trading',\r\n          status: 'pending',\r\n          createdAt: '2024-04-23T10:00:00Z',\r\n          updatedAt: '2024-04-23T10:00:00Z',\r\n          description: 'Trading profit from BTC/USDT pair',\r\n          profitRate: 5.2,\r\n        },\r\n        {\r\n          id: '2',\r\n          userId: 'user2',\r\n          username: 'Jane Smith',\r\n          amount: 500,\r\n          currency: 'BTC',\r\n          type: 'investment',\r\n          status: 'pending',\r\n          createdAt: '2024-04-23T09:00:00Z',\r\n          updatedAt: '2024-04-23T09:00:00Z',\r\n          description: 'Investment profit from staking',\r\n          profitRate: 3.8,\r\n        },\r\n      ];\r\n      setProfits(mockProfits);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: Profit['status']) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return theme.palette.warning.main;\r\n      case 'confirmed':\r\n        return theme.palette.success.main;\r\n      case 'cancelled':\r\n        return theme.palette.error.main;\r\n      default:\r\n        return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: Profit['status']) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return <WarningIcon />;\r\n      case 'confirmed':\r\n        return <CheckCircleIcon />;\r\n      case 'cancelled':\r\n        return <CancelIcon />;\r\n      default:\r\n        return <WarningIcon />;\r\n    }\r\n  };\r\n\r\n  const getTypeColor = (type: Profit['type']) => {\r\n    switch (type) {\r\n      case 'trading':\r\n        return theme.palette.primary.main;\r\n      case 'investment':\r\n        return theme.palette.secondary.main;\r\n      case 'other':\r\n        return theme.palette.info.main;\r\n      default:\r\n        return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const handleConfirm = (profit: Profit) => {\r\n    setSelectedProfit(profit);\r\n    setProfitStatus('confirmed');\r\n    setProfitNote('');\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (selectedProfit) {\r\n      const updatedProfits = profits.map((profit) =>\r\n        profit.id === selectedProfit.id\r\n          ? {\r\n              ...profit,\r\n              status: profitStatus,\r\n              updatedAt: new Date().toISOString(),\r\n              description: profitNote || profit.description,\r\n            }\r\n          : profit\r\n      );\r\n      setProfits(updatedProfits);\r\n      setOpenDialog(false);\r\n      setSelectedProfit(null);\r\n    }\r\n  };\r\n\r\n  const renderProfitCard = (profit: Profit) => (\r\n    <motion.div\r\n      key={profit.id}\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: animationConfig.duration.medium }}\r\n    >\r\n      <Card\r\n        sx={{\r\n          backgroundColor: theme.palette.background.paper,\r\n          boxShadow: theme.shadows[2],\r\n          '&:hover': {\r\n            boxShadow: theme.shadows[4],\r\n          },\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              <Box\r\n                sx={{\r\n                  color: getStatusColor(profit.status),\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                {getStatusIcon(profit.status)}\r\n              </Box>\r\n              <Typography variant=\"h6\" sx={{ fontWeight: 500 }}>\r\n                {profit.username}\r\n              </Typography>\r\n            </Box>\r\n            <Tooltip title={t('profitList.confirm')}>\r\n              <IconButton onClick={() => handleConfirm(profit)}>\r\n                <EditIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n            {profit.userId}\r\n          </Typography>\r\n          <Divider sx={{ my: 2 }} />\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('profitList.amount')}\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                <AttachMoneyIcon sx={{ color: theme.palette.primary.main }} />\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                  {profit.amount} {profit.currency}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('profitList.type')}\r\n              </Typography>\r\n              <Chip\r\n                label={t(`profitList.${profit.type}`)}\r\n                sx={{\r\n                  bgcolor: `${getTypeColor(profit.type)}20`,\r\n                  color: getTypeColor(profit.type),\r\n                  fontWeight: 500,\r\n                }}\r\n              />\r\n            </Box>\r\n          </Box>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('profitList.status')}\r\n              </Typography>\r\n              <Chip\r\n                label={t(`profitList.${profit.status}`)}\r\n                sx={{\r\n                  bgcolor: `${getStatusColor(profit.status)}20`,\r\n                  color: getStatusColor(profit.status),\r\n                  fontWeight: 500,\r\n                }}\r\n              />\r\n            </Box>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('profitList.profitRate')}\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                {profit.profitRate >= 0 ? (\r\n                  <TrendingUpIcon sx={{ color: theme.palette.success.main }} />\r\n                ) : (\r\n                  <TrendingDownIcon sx={{ color: theme.palette.error.main }} />\r\n                )}\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  sx={{\r\n                    fontWeight: 500,\r\n                    color: profit.profitRate >= 0 ? theme.palette.success.main : theme.palette.error.main,\r\n                  }}\r\n                >\r\n                  {profit.profitRate}%\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('profitList.createdAt')}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                {new Date(profit.createdAt).toLocaleString()}\r\n              </Typography>\r\n            </Box>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('profitList.updatedAt')}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                {new Date(profit.updatedAt).toLocaleString()}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n            {profit.description}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </motion.div>\r\n  );\r\n\r\n  const renderContent = () => (\r\n    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))', gap: 3 }}>\r\n      {profits.map(renderProfitCard)}\r\n    </Box>\r\n  );\r\n\r\n  const renderActions = () => (\r\n    <Button\r\n      variant=\"contained\"\r\n      startIcon={<RefreshIcon />}\r\n      onClick={fetchProfits}\r\n      sx={{\r\n        background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n        '&:hover': {\r\n          background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n        },\r\n      }}\r\n    >\r\n      {t('profitList.refresh')}\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      title={t('profitList.title')}\r\n      actions={renderActions()}\r\n      content={renderContent()}\r\n    >\r\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>{t('profitList.confirmProfit')}</DialogTitle>\r\n        <DialogContent>\r\n          {selectedProfit && (\r\n            <Box sx={{ mt: 2 }}>\r\n              <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                {selectedProfit.username}\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 2 }}>\r\n                <AttachMoneyIcon sx={{ color: theme.palette.primary.main }} />\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                  {selectedProfit.amount} {selectedProfit.currency}\r\n                </Typography>\r\n              </Box>\r\n              <FormControl fullWidth sx={{ mb: 2 }}>\r\n                <InputLabel>{t('profitList.status')}</InputLabel>\r\n                <Select\r\n                  value={profitStatus}\r\n                  onChange={(e) => setProfitStatus(e.target.value as 'confirmed' | 'cancelled')}\r\n                  label={t('profitList.status')}\r\n                >\r\n                  <MenuItem value=\"confirmed\">{t('profitList.confirmed')}</MenuItem>\r\n                  <MenuItem value=\"cancelled\">{t('profitList.cancelled')}</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <TextField\r\n                fullWidth\r\n                multiline\r\n                rows={3}\r\n                value={profitNote}\r\n                onChange={(e) => setProfitNote(e.target.value)}\r\n                label={t('profitList.note')}\r\n              />\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => setOpenDialog(false)}\r\n            sx={{\r\n              color: theme.palette.text.secondary,\r\n              '&:hover': {\r\n                backgroundColor: `${theme.palette.text.secondary}10`,\r\n              },\r\n            }}\r\n          >\r\n            {t('common.cancel')}\r\n          </Button>\r\n          <Button\r\n            onClick={handleSave}\r\n            variant=\"contained\"\r\n            sx={{\r\n              background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n              '&:hover': {\r\n                background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n              },\r\n            }}\r\n          >\r\n            {t('common.save')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default ProfitList; ","import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  Tooltip as MuiTooltip,\r\n  Chip,\r\n  useTheme,\r\n  alpha,\r\n  CircularProgress,\r\n  Alert\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Search as SearchIcon,\r\n  Refresh as RefreshIcon\r\n} from '@mui/icons-material';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  LinearProgress,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  Save as SaveIcon,\r\n  Edit as EditIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  Cancel as CancelIcon,\r\n  Warning as WarningIcon,\r\n  AttachMoney as AttachMoneyIcon,\r\n} from '@mui/icons-material';\r\nimport theme from '../theme';\r\nimport { animationConfig } from '../theme/animation';\r\nimport PageLayout from '../components/common/PageLayout';\r\n\r\ninterface WithdrawalRequest {\r\n  id: string;\r\n  userId: string;\r\n  username: string;\r\n  amount: number;\r\n  currency: string;\r\n  status: 'pending' | 'approved' | 'rejected';\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  walletAddress: string;\r\n  reason?: string;\r\n}\r\n\r\nconst WithdrawalReview: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const theme = useTheme();\r\n  const [data, setData] = useState<WithdrawalRequest[]>([]);\r\n  const [selectedWithdrawal, setSelectedWithdrawal] = useState<WithdrawalRequest | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('all');\r\n  const [_loading, setLoading] = useState(false);\r\n  const [_error, setError] = useState<string | null>(null);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [reviewStatus, setReviewStatus] = useState<'approved' | 'rejected'>('approved');\r\n  const [reviewReason, setReviewReason] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchRequests();\r\n  }, []);\r\n\r\n  const fetchRequests = async () => {\r\n    try {\r\n      // Mock API call\r\n      const mockRequests: WithdrawalRequest[] = [\r\n        {\r\n          id: '1',\r\n          userId: 'user1',\r\n          username: 'John Doe',\r\n          amount: 1000,\r\n          currency: 'USDT',\r\n          status: 'pending',\r\n          createdAt: '2024-04-23T10:00:00Z',\r\n          updatedAt: '2024-04-23T10:00:00Z',\r\n          walletAddress: '0x1234...5678',\r\n        },\r\n        {\r\n          id: '2',\r\n          userId: 'user2',\r\n          username: 'Jane Smith',\r\n          amount: 500,\r\n          currency: 'BTC',\r\n          status: 'pending',\r\n          createdAt: '2024-04-23T09:00:00Z',\r\n          updatedAt: '2024-04-23T09:00:00Z',\r\n          walletAddress: 'bc1q...xyz',\r\n        },\r\n      ];\r\n      setData(mockRequests);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: WithdrawalRequest['status']) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return theme.palette.warning.main;\r\n      case 'approved':\r\n        return theme.palette.success.main;\r\n      case 'rejected':\r\n        return theme.palette.error.main;\r\n      default:\r\n        return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: WithdrawalRequest['status']) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return <WarningIcon />;\r\n      case 'approved':\r\n        return <CheckCircleIcon />;\r\n      case 'rejected':\r\n        return <CancelIcon />;\r\n      default:\r\n        return <WarningIcon />;\r\n    }\r\n  };\r\n\r\n  const handleReview = (request: WithdrawalRequest) => {\r\n    setSelectedWithdrawal(request);\r\n    setReviewStatus('approved');\r\n    setReviewReason('');\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (selectedWithdrawal) {\r\n      const updatedRequests = data.map((request) =>\r\n        request.id === selectedWithdrawal.id\r\n          ? {\r\n              ...request,\r\n              status: reviewStatus,\r\n              updatedAt: new Date().toISOString(),\r\n              reason: reviewReason,\r\n            }\r\n          : request\r\n      );\r\n      setData(updatedRequests);\r\n      setOpenDialog(false);\r\n      setSelectedWithdrawal(null);\r\n    }\r\n  };\r\n\r\n  const renderRequestCard = (request: WithdrawalRequest) => (\r\n    <motion.div\r\n      key={request.id}\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: animationConfig.duration.medium }}\r\n    >\r\n      <Card\r\n        sx={{\r\n          backgroundColor: theme.palette.background.paper,\r\n          boxShadow: theme.shadows[2],\r\n          '&:hover': {\r\n            boxShadow: theme.shadows[4],\r\n          },\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              <Box\r\n                sx={{\r\n                  color: getStatusColor(request.status),\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                {getStatusIcon(request.status)}\r\n              </Box>\r\n              <Typography variant=\"h6\" sx={{ fontWeight: 500 }}>\r\n                {request.username}\r\n              </Typography>\r\n            </Box>\r\n            <MuiTooltip title={t('withdrawalReview.review')}>\r\n              <IconButton onClick={() => handleReview(request)}>\r\n                <EditIcon />\r\n              </IconButton>\r\n            </MuiTooltip>\r\n          </Box>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n            {request.userId}\r\n          </Typography>\r\n          <Divider sx={{ my: 2 }} />\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('withdrawalReview.amount')}\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                <AttachMoneyIcon sx={{ color: theme.palette.primary.main }} />\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                  {request.amount} {request.currency}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('withdrawalReview.status')}\r\n              </Typography>\r\n              <Chip\r\n                label={t(`withdrawalReview.${request.status}`)}\r\n                sx={{\r\n                  bgcolor: `${getStatusColor(request.status)}20`,\r\n                  color: getStatusColor(request.status),\r\n                  fontWeight: 500,\r\n                }}\r\n              />\r\n            </Box>\r\n          </Box>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('withdrawalReview.createdAt')}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                {new Date(request.createdAt).toLocaleString()}\r\n              </Typography>\r\n            </Box>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('withdrawalReview.updatedAt')}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                {new Date(request.updatedAt).toLocaleString()}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block' }}>\r\n            {t('withdrawalReview.walletAddress')}: {request.walletAddress}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </motion.div>\r\n  );\r\n\r\n  const renderContent = () => (\r\n    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))', gap: 3 }}>\r\n      {data.map(renderRequestCard)}\r\n    </Box>\r\n  );\r\n\r\n  const renderActions = () => (\r\n    <Button\r\n      variant=\"contained\"\r\n      startIcon={<RefreshIcon />}\r\n      onClick={fetchRequests}\r\n      sx={{\r\n        background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n        '&:hover': {\r\n          background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n        },\r\n      }}\r\n    >\r\n      {t('withdrawalReview.refresh')}\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      title={t('withdrawalReview.title')}\r\n      actions={renderActions()}\r\n      content={renderContent()}\r\n    >\r\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>{t('withdrawalReview.reviewRequest')}</DialogTitle>\r\n        <DialogContent>\r\n          {selectedWithdrawal && (\r\n            <Box sx={{ mt: 2 }}>\r\n              <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                {selectedWithdrawal.username}\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 2 }}>\r\n                <AttachMoneyIcon sx={{ color: theme.palette.primary.main }} />\r\n                <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                  {selectedWithdrawal.amount} {selectedWithdrawal.currency}\r\n                </Typography>\r\n              </Box>\r\n              <FormControl fullWidth sx={{ mb: 2 }}>\r\n                <InputLabel>{t('withdrawalReview.status')}</InputLabel>\r\n                <Select\r\n                  value={reviewStatus}\r\n                  onChange={(e) => setReviewStatus(e.target.value as 'approved' | 'rejected')}\r\n                  label={t('withdrawalReview.status')}\r\n                >\r\n                  <MenuItem value=\"approved\">{t('withdrawalReview.approved')}</MenuItem>\r\n                  <MenuItem value=\"rejected\">{t('withdrawalReview.rejected')}</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <TextField\r\n                fullWidth\r\n                multiline\r\n                rows={3}\r\n                value={reviewReason}\r\n                onChange={(e) => setReviewReason(e.target.value)}\r\n                label={t('withdrawalReview.reason')}\r\n              />\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => setOpenDialog(false)}\r\n            sx={{\r\n              color: theme.palette.text.secondary,\r\n              '&:hover': {\r\n                backgroundColor: `${theme.palette.text.secondary}10`,\r\n              },\r\n            }}\r\n          >\r\n            {t('common.cancel')}\r\n          </Button>\r\n          <Button\r\n            onClick={handleSave}\r\n            variant=\"contained\"\r\n            sx={{\r\n              background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n              '&:hover': {\r\n                background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n              },\r\n            }}\r\n          >\r\n            {t('common.save')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default WithdrawalReview; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  Grid,\r\n  LinearProgress,\r\n  Alert,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Chip,\r\n  IconButton,\r\n  Tooltip,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Switch,\r\n} from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  Save as SaveIcon,\r\n  Edit as EditIcon,\r\n  Refresh as RefreshIcon,\r\n  Settings as SettingsIcon,\r\n  Security as SecurityIcon,\r\n  Notifications as NotificationsIcon,\r\n  Storage as StorageIcon,\r\n} from '@mui/icons-material';\r\nimport theme from '../theme';\r\nimport { animationConfig } from '../theme/animation';\r\nimport PageLayout from '../components/common/PageLayout';\r\n\r\ninterface SystemSetting {\r\n  id: string;\r\n  category: 'general' | 'security' | 'notification' | 'storage';\r\n  name: string;\r\n  description: string;\r\n  value: string | number | boolean;\r\n  type: 'string' | 'number' | 'boolean' | 'select';\r\n  options?: string[];\r\n}\r\n\r\nconst SystemSettings: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const [settings, setSettings] = useState<SystemSetting[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [selectedSetting, setSelectedSetting] = useState<SystemSetting | null>(null);\r\n  const [editedValue, setEditedValue] = useState<string | number | boolean>('');\r\n\r\n  useEffect(() => {\r\n    fetchSettings();\r\n  }, []);\r\n\r\n  const fetchSettings = async () => {\r\n    try {\r\n      // Mock API call\r\n      const mockSettings: SystemSetting[] = [\r\n        {\r\n          id: '1',\r\n          category: 'general',\r\n          name: 'siteName',\r\n          description: 'Website name',\r\n          value: 'Panda Quant',\r\n          type: 'string',\r\n        },\r\n        {\r\n          id: '2',\r\n          category: 'security',\r\n          name: 'passwordPolicy',\r\n          description: 'Password policy',\r\n          value: 'strong',\r\n          type: 'select',\r\n          options: ['weak', 'medium', 'strong'],\r\n        },\r\n        {\r\n          id: '3',\r\n          category: 'notification',\r\n          name: 'emailNotifications',\r\n          description: 'Enable email notifications',\r\n          value: true,\r\n          type: 'boolean',\r\n        },\r\n        {\r\n          id: '4',\r\n          category: 'storage',\r\n          name: 'maxStorage',\r\n          description: 'Maximum storage per user (GB)',\r\n          value: 10,\r\n          type: 'number',\r\n        },\r\n      ];\r\n      setSettings(mockSettings);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getCategoryIcon = (category: SystemSetting['category']) => {\r\n    switch (category) {\r\n      case 'general':\r\n        return <SettingsIcon />;\r\n      case 'security':\r\n        return <SecurityIcon />;\r\n      case 'notification':\r\n        return <NotificationsIcon />;\r\n      case 'storage':\r\n        return <StorageIcon />;\r\n      default:\r\n        return <SettingsIcon />;\r\n    }\r\n  };\r\n\r\n  const getCategoryColor = (category: SystemSetting['category']) => {\r\n    switch (category) {\r\n      case 'general':\r\n        return theme.palette.primary.main;\r\n      case 'security':\r\n        return theme.palette.error.main;\r\n      case 'notification':\r\n        return theme.palette.warning.main;\r\n      case 'storage':\r\n        return theme.palette.info.main;\r\n      default:\r\n        return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const handleEdit = (setting: SystemSetting) => {\r\n    setSelectedSetting(setting);\r\n    setEditedValue(setting.value);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (selectedSetting) {\r\n      const updatedSettings = settings.map((setting) =>\r\n        setting.id === selectedSetting.id ? { ...setting, value: editedValue } : setting\r\n      );\r\n      setSettings(updatedSettings);\r\n      setOpenDialog(false);\r\n      setSelectedSetting(null);\r\n    }\r\n  };\r\n\r\n  const renderSettingCard = (setting: SystemSetting) => (\r\n    <motion.div\r\n      key={setting.id}\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: animationConfig.duration.medium }}\r\n    >\r\n      <Card\r\n        sx={{\r\n          backgroundColor: theme.palette.background.paper,\r\n          boxShadow: theme.shadows[2],\r\n          '&:hover': {\r\n            boxShadow: theme.shadows[4],\r\n          },\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              <Box\r\n                sx={{\r\n                  color: getCategoryColor(setting.category),\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                {getCategoryIcon(setting.category)}\r\n              </Box>\r\n              <Typography variant=\"h6\" sx={{ fontWeight: 500 }}>\r\n                {setting.name}\r\n              </Typography>\r\n            </Box>\r\n            <Tooltip title={t('systemSettings.edit')}>\r\n              <IconButton onClick={() => handleEdit(setting)}>\r\n                <EditIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n            {setting.description}\r\n          </Typography>\r\n          <Divider sx={{ my: 2 }} />\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {t('systemSettings.value')}\r\n            </Typography>\r\n            {setting.type === 'boolean' ? (\r\n              <Switch\r\n                checked={setting.value as boolean}\r\n                disabled\r\n                sx={{\r\n                  '& .MuiSwitch-thumb': {\r\n                    backgroundColor: setting.value ? theme.palette.success.main : theme.palette.error.main,\r\n                  },\r\n                }}\r\n              />\r\n            ) : (\r\n              <Chip\r\n                label={setting.value.toString()}\r\n                sx={{\r\n                  bgcolor: `${getCategoryColor(setting.category)}20`,\r\n                  color: getCategoryColor(setting.category),\r\n                  fontWeight: 500,\r\n                }}\r\n              />\r\n            )}\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </motion.div>\r\n  );\r\n\r\n  const renderContent = () => (\r\n    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))', gap: 3 }}>\r\n      {settings.map(renderSettingCard)}\r\n    </Box>\r\n  );\r\n\r\n  const renderActions = () => (\r\n    <Button\r\n      variant=\"contained\"\r\n      startIcon={<RefreshIcon />}\r\n      onClick={fetchSettings}\r\n      sx={{\r\n        background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n        '&:hover': {\r\n          background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n        },\r\n      }}\r\n    >\r\n      {t('systemSettings.refresh')}\r\n    </Button>\r\n  );\r\n\r\n  const renderSettingInput = (setting: SystemSetting) => {\r\n    switch (setting.type) {\r\n      case 'string':\r\n        return (\r\n          <TextField\r\n            fullWidth\r\n            value={editedValue}\r\n            onChange={(e) => setEditedValue(e.target.value)}\r\n            label={t('systemSettings.value')}\r\n          />\r\n        );\r\n      case 'number':\r\n        return (\r\n          <TextField\r\n            fullWidth\r\n            type=\"number\"\r\n            value={editedValue}\r\n            onChange={(e) => setEditedValue(Number(e.target.value))}\r\n            label={t('systemSettings.value')}\r\n          />\r\n        );\r\n      case 'boolean':\r\n        return (\r\n          <FormControl fullWidth>\r\n            <InputLabel>{t('systemSettings.value')}</InputLabel>\r\n            <Select\r\n              value={editedValue}\r\n              onChange={(e) => setEditedValue(e.target.value === 'true')}\r\n              label={t('systemSettings.value')}\r\n            >\r\n              <MenuItem value=\"true\">{t('common.yes')}</MenuItem>\r\n              <MenuItem value=\"false\">{t('common.no')}</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        );\r\n      case 'select':\r\n        return (\r\n          <FormControl fullWidth>\r\n            <InputLabel>{t('systemSettings.value')}</InputLabel>\r\n            <Select\r\n              value={editedValue}\r\n              onChange={(e) => setEditedValue(e.target.value)}\r\n              label={t('systemSettings.value')}\r\n            >\r\n              {setting.options?.map((option) => (\r\n                <MenuItem key={option} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout\r\n      title={t('systemSettings.title')}\r\n      actions={renderActions()}\r\n      content={renderContent()}\r\n    >\r\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>{t('systemSettings.editSetting')}</DialogTitle>\r\n        <DialogContent>\r\n          {selectedSetting && (\r\n            <Box sx={{ mt: 2 }}>\r\n              <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                {selectedSetting.name}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n                {selectedSetting.description}\r\n              </Typography>\r\n              {renderSettingInput(selectedSetting)}\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => setOpenDialog(false)}\r\n            sx={{\r\n              color: theme.palette.text.secondary,\r\n              '&:hover': {\r\n                backgroundColor: `${theme.palette.text.secondary}10`,\r\n              },\r\n            }}\r\n          >\r\n            {t('common.cancel')}\r\n          </Button>\r\n          <Button\r\n            onClick={handleSave}\r\n            variant=\"contained\"\r\n            sx={{\r\n              background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n              '&:hover': {\r\n                background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n              },\r\n            }}\r\n          >\r\n            {t('common.save')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default SystemSettings; ","import { styled } from '@mui/material/styles';\r\nimport { Box, Card, Button, Typography, Paper } from '@mui/material';\r\nimport theme from '../../theme';\r\n\r\nexport const StyledBox = styled(Box)(({ theme }) => ({\r\n  padding: theme.spacing(4),\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.background.paper,\r\n  boxShadow: theme.custom.shadows.card,\r\n  transition: 'all 0.3s ease',\r\n  '&:hover': {\r\n    boxShadow: theme.custom.shadows.cardHover,\r\n    transform: 'translateY(-2px)',\r\n  },\r\n}));\r\n\r\nexport const StyledCard = styled(Card)(({ theme }) => ({\r\n  borderRadius: theme.shape.borderRadius * 1.5,\r\n  boxShadow: theme.custom.shadows.card,\r\n  transition: 'all 0.3s ease',\r\n  '&:hover': {\r\n    boxShadow: theme.custom.shadows.cardHover,\r\n    transform: 'translateY(-2px)',\r\n  },\r\n}));\r\n\r\nexport const StyledButton = styled(Button)(({ theme }) => ({\r\n  background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n  color: theme.palette.common.white,\r\n  '&:hover': {\r\n    background: `linear-gradient(45deg, ${theme.palette.secondary.main}, ${theme.palette.primary.main})`,\r\n  },\r\n}));\r\n\r\nexport const StyledTypography = styled(Typography)(({ theme }) => ({\r\n  color: theme.palette.primary.main,\r\n  fontWeight: 700,\r\n}));\r\n\r\nexport const StyledPaper = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(3),\r\n  borderRadius: theme.shape.borderRadius,\r\n  background: theme.custom.gradients.primary,\r\n  boxShadow: theme.custom.shadows.card,\r\n  transition: 'all 0.3s ease',\r\n  '&:hover': {\r\n    boxShadow: theme.custom.shadows.cardHover,\r\n    transform: 'translateY(-2px)',\r\n  },\r\n}));\r\n\r\nexport const StyledContainer = styled(Box)(({ theme }) => ({\r\n  minHeight: '100vh',\r\n  padding: theme.spacing(4),\r\n  background: theme.custom.gradients.primary,\r\n}));\r\n\r\nexport const SectionTitle = styled(Typography)(({ theme }) => ({\r\n  fontSize: '2rem',\r\n  fontWeight: 700,\r\n  marginBottom: theme.spacing(4),\r\n  position: 'relative',\r\n  '&::after': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    bottom: -theme.spacing(1),\r\n    left: 0,\r\n    width: '60px',\r\n    height: '4px',\r\n    background: `linear-gradient(90deg, ${theme.palette.primary.main}, transparent)`,\r\n    borderRadius: '2px',\r\n  },\r\n})); ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  InputAdornment,\r\n  Container,\r\n  Paper,\r\n  Chip,\r\n  IconButton,\r\n  Tooltip,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Button,\r\n} from '@mui/material';\r\nimport {\r\n  Search as SearchIcon,\r\n  Warning as WarningIcon,\r\n  Error as ErrorIcon,\r\n  Info as InfoIcon,\r\n  Refresh as RefreshIcon,\r\n  Clear as ClearIcon,\r\n} from '@mui/icons-material';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport type { GridColDef } from '@mui/x-data-grid';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { motion } from 'framer-motion';\r\nimport { getLogs, Log } from '../api/log';\r\nimport theme from '../theme';\r\nimport { animationConfig } from '../theme/animation';\r\nimport PageLayout from '../components/common/PageLayout';\r\nimport {\r\n  StyledCard,\r\n  StyledBox,\r\n  StyledTypography,\r\n} from '../components/common/StyledComponents';\r\n\r\ntype LogLevel = 'error' | 'warning' | 'info';\r\n\r\nconst LogManagement: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const [logs, setLogs] = useState<Log[]>([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const columns: Array<{\r\n    field: string;\r\n    headerName: string;\r\n    width: number;\r\n  }> = [\r\n    { field: '_id', headerName: 'ID', width: 90 },\r\n    { field: 'level', headerName: 'Level', width: 130 },\r\n    { field: 'message', headerName: 'Message', width: 300 },\r\n    { field: 'timestamp', headerName: 'Timestamp', width: 200 },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchLogs();\r\n  }, []);\r\n\r\n  const fetchLogs = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await getLogs();\r\n      setLogs(response);\r\n    } catch (error) {\r\n      console.error('Error fetching logs:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getLevelIcon = (level: LogLevel) => {\r\n    switch (level.toLowerCase()) {\r\n      case 'error':\r\n        return <ErrorIcon color=\"error\" />;\r\n      case 'warning':\r\n        return <WarningIcon color=\"warning\" />;\r\n      case 'info':\r\n        return <InfoIcon color=\"info\" />;\r\n      default:\r\n        return <InfoIcon />;\r\n    }\r\n  };\r\n\r\n  const getLevelColor = (level: LogLevel) => {\r\n    switch (level.toLowerCase()) {\r\n      case 'error':\r\n        return 'error';\r\n      case 'warning':\r\n        return 'warning';\r\n      case 'info':\r\n        return 'info';\r\n      default:\r\n        return 'info';\r\n    }\r\n  };\r\n\r\n  const filteredLogs = logs.filter((log) =>\r\n    Object.values(log).some((value) =>\r\n      value?.toString().toLowerCase().includes(searchQuery.toLowerCase())\r\n    )\r\n  );\r\n\r\n  const renderFilters = () => (\r\n    <StyledCard\r\n      sx={{\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        '&::before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          height: '4px',\r\n          background: `linear-gradient(90deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n        },\r\n      }}\r\n    >\r\n      <StyledBox>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 3 }}>\r\n          <TextField\r\n            fullWidth\r\n            size=\"small\"\r\n            placeholder={t('search')}\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon sx={{ color: theme.palette.primary.main }} />\r\n                </InputAdornment>\r\n              ),\r\n              endAdornment: searchQuery && (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={() => setSearchQuery('')}>\r\n                    <ClearIcon />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <Tooltip title={t('common.refresh')}>\r\n            <motion.div\r\n              whileHover={{ rotate: 360 }}\r\n              transition={{ duration: animationConfig.duration.long }}\r\n            >\r\n              <IconButton onClick={fetchLogs}>\r\n                <RefreshIcon />\r\n              </IconButton>\r\n            </motion.div>\r\n          </Tooltip>\r\n        </Box>\r\n      </StyledBox>\r\n    </StyledCard>\r\n  );\r\n\r\n  const renderContent = () => (\r\n    <motion.div\r\n      initial={animationConfig.variants.fadeIn.initial}\r\n      animate={animationConfig.variants.fadeIn.animate}\r\n      transition={{ duration: animationConfig.duration.medium }}\r\n    >\r\n      <StyledCard>\r\n        <StyledBox>\r\n          <DataGrid\r\n            rows={filteredLogs}\r\n            columns={columns}\r\n            pageSize={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            checkboxSelection\r\n            disableSelectionOnClick\r\n            loading={loading}\r\n            sx={{\r\n              border: 'none',\r\n              '& .MuiDataGrid-cell': {\r\n                borderBottom: `1px solid ${theme.palette.border.main}`,\r\n              },\r\n              '& .MuiDataGrid-columnHeaders': {\r\n                backgroundColor: theme.palette.card.main,\r\n                borderBottom: `1px solid ${theme.palette.border.main}`,\r\n              },\r\n              '& .MuiDataGrid-footerContainer': {\r\n                backgroundColor: theme.palette.card.main,\r\n                borderTop: `1px solid ${theme.palette.border.main}`,\r\n              },\r\n            }}\r\n          />\r\n        </StyledBox>\r\n      </StyledCard>\r\n    </motion.div>\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      title={t('logManagement.title')}\r\n      filters={renderFilters()}\r\n    >\r\n      {renderContent()}\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default LogManagement; ","import axios from './axios';\r\n\r\nexport interface Log {\r\n  _id: string;\r\n  level: string;\r\n  message: string;\r\n  timestamp: string;\r\n  source: string;\r\n  meta?: any;\r\n}\r\n\r\nexport const getLogs = async (): Promise<Log[]> => {\r\n  const response = await axios.get('/api/logs');\r\n  return response.data;\r\n};\r\n\r\nexport const createLog = async (data: Omit<Log, '_id' | 'timestamp'>): Promise<Log> => {\r\n  const response = await axios.post('/api/logs', data);\r\n  return response.data;\r\n};\r\n\r\nexport const updateLog = async (id: string, data: Partial<Omit<Log, '_id' | 'timestamp'>>): Promise<Log> => {\r\n  const response = await axios.put(`/api/logs/${id}`, data);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteLog = async (id: string): Promise<void> => {\r\n  await axios.delete(`/api/logs/${id}`);\r\n}; ","import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  Tooltip as MuiTooltip,\r\n  Chip,\r\n  useTheme,\r\n  alpha,\r\n  CircularProgress,\r\n  Alert\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Search as SearchIcon,\r\n  Refresh as RefreshIcon,\r\n  Edit as EditIcon\r\n} from '@mui/icons-material';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  LinearProgress,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n} from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport theme from '../theme';\r\nimport { animationConfig } from '../theme/animation';\r\nimport PageLayout from '../components/common/PageLayout';\r\n\r\ninterface UserStatus {\r\n  id: string;\r\n  userId: string;\r\n  username: string;\r\n  status: 'active' | 'inactive' | 'suspended' | 'banned';\r\n  lastLogin: string;\r\n  loginCount: number;\r\n  lastActivity: string;\r\n  ipAddress: string;\r\n}\r\n\r\nconst UserStatusManagement: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const theme = useTheme();\r\n  const [data, setData] = useState<UserStatus[]>([]);\r\n  const [selectedUser, setSelectedUser] = useState<UserStatus | null>(null);\r\n  const [_searchTerm, setSearchTerm] = useState('');\r\n  const [_statusFilter, setStatusFilter] = useState('all');\r\n  const [_loading, setLoading] = useState(false);\r\n  const [_error, setError] = useState<string | null>(null);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [editedStatus, setEditedStatus] = useState<UserStatus['status']>('active');\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      // Mock API call\r\n      const mockUsers: UserStatus[] = [\r\n        {\r\n          id: '1',\r\n          userId: 'user1',\r\n          username: 'John Doe',\r\n          status: 'active',\r\n          lastLogin: '2024-04-23T10:00:00Z',\r\n          loginCount: 42,\r\n          lastActivity: '2024-04-23T10:30:00Z',\r\n          ipAddress: '192.168.1.1',\r\n        },\r\n        {\r\n          id: '2',\r\n          userId: 'user2',\r\n          username: 'Jane Smith',\r\n          status: 'inactive',\r\n          lastLogin: '2024-04-22T15:00:00Z',\r\n          loginCount: 18,\r\n          lastActivity: '2024-04-22T15:30:00Z',\r\n          ipAddress: '192.168.1.2',\r\n        },\r\n        {\r\n          id: '3',\r\n          userId: 'user3',\r\n          username: 'Bob Johnson',\r\n          status: 'suspended',\r\n          lastLogin: '2024-04-21T09:00:00Z',\r\n          loginCount: 5,\r\n          lastActivity: '2024-04-21T09:30:00Z',\r\n          ipAddress: '192.168.1.3',\r\n        },\r\n      ];\r\n      setData(mockUsers);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: UserStatus['status']) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return theme.palette.success.main;\r\n      case 'inactive':\r\n        return theme.palette.warning.main;\r\n      case 'suspended':\r\n        return theme.palette.error.main;\r\n      case 'banned':\r\n        return theme.palette.error.dark;\r\n      default:\r\n        return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const handleEdit = (user: UserStatus) => {\r\n    setSelectedUser(user);\r\n    setEditedStatus(user.status);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (selectedUser) {\r\n      const updatedUsers = data.map((user) =>\r\n        user.id === selectedUser.id ? { ...user, status: editedStatus } : user\r\n      );\r\n      setData(updatedUsers);\r\n      setOpenDialog(false);\r\n      setSelectedUser(null);\r\n    }\r\n  };\r\n\r\n  const renderUserCard = (user: UserStatus) => (\r\n    <motion.div\r\n      key={user.id}\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: animationConfig.duration.medium }}\r\n    >\r\n      <Card\r\n        sx={{\r\n          backgroundColor: theme.palette.background.paper,\r\n          boxShadow: theme.shadows[2],\r\n          '&:hover': {\r\n            boxShadow: theme.shadows[4],\r\n          },\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Typography variant=\"h6\" sx={{ fontWeight: 500 }}>\r\n              {user.username}\r\n            </Typography>\r\n            <MuiTooltip title={t('userStatus.edit')}>\r\n              <IconButton onClick={() => handleEdit(user)}>\r\n                <EditIcon />\r\n              </IconButton>\r\n            </MuiTooltip>\r\n          </Box>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n            {user.userId}\r\n          </Typography>\r\n          <Divider sx={{ my: 2 }} />\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('userStatus.status')}\r\n              </Typography>\r\n              <Chip\r\n                label={t(`userStatus.${user.status}`)}\r\n                sx={{\r\n                  bgcolor: `${getStatusColor(user.status)}20`,\r\n                  color: getStatusColor(user.status),\r\n                  fontWeight: 500,\r\n                }}\r\n              />\r\n            </Box>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('userStatus.loginCount')}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                {user.loginCount}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('userStatus.lastLogin')}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                {new Date(user.lastLogin).toLocaleString()}\r\n              </Typography>\r\n            </Box>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('userStatus.lastActivity')}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                {new Date(user.lastActivity).toLocaleString()}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block' }}>\r\n            {t('userStatus.ipAddress')}: {user.ipAddress}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </motion.div>\r\n  );\r\n\r\n  const renderContent = () => (\r\n    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))', gap: 3 }}>\r\n      {data.map(renderUserCard)}\r\n    </Box>\r\n  );\r\n\r\n  const renderActions = () => (\r\n    <Button\r\n      variant=\"contained\"\r\n      startIcon={<RefreshIcon />}\r\n      onClick={fetchUsers}\r\n      sx={{\r\n        background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n        '&:hover': {\r\n          background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n        },\r\n      }}\r\n    >\r\n      {t('userStatus.refresh')}\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      title={t('userStatus.title')}\r\n      actions={renderActions()}\r\n      content={renderContent()}\r\n    >\r\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>{t('userStatus.editStatus')}</DialogTitle>\r\n        <DialogContent>\r\n          {selectedUser && (\r\n            <Box sx={{ mt: 2 }}>\r\n              <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                {selectedUser.username}\r\n              </Typography>\r\n              <FormControl fullWidth>\r\n                <InputLabel>{t('userStatus.status')}</InputLabel>\r\n                <Select\r\n                  value={editedStatus}\r\n                  onChange={(e) => setEditedStatus(e.target.value as UserStatus['status'])}\r\n                  label={t('userStatus.status')}\r\n                >\r\n                  <MenuItem value=\"active\">{t('userStatus.active')}</MenuItem>\r\n                  <MenuItem value=\"inactive\">{t('userStatus.inactive')}</MenuItem>\r\n                  <MenuItem value=\"suspended\">{t('userStatus.suspended')}</MenuItem>\r\n                  <MenuItem value=\"banned\">{t('userStatus.banned')}</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => setOpenDialog(false)}\r\n            sx={{\r\n              color: theme.palette.text.secondary,\r\n              '&:hover': {\r\n                backgroundColor: `${theme.palette.text.secondary}10`,\r\n              },\r\n            }}\r\n          >\r\n            {t('common.cancel')}\r\n          </Button>\r\n          <Button\r\n            onClick={handleSave}\r\n            variant=\"contained\"\r\n            sx={{\r\n              background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n              '&:hover': {\r\n                background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n              },\r\n            }}\r\n          >\r\n            {t('common.save')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default UserStatusManagement; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Container,\r\n  Grid,\r\n  LinearProgress,\r\n  Alert,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Chip,\r\n  IconButton,\r\n  Tooltip,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n} from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  Save as SaveIcon,\r\n  Edit as EditIcon,\r\n  Refresh as RefreshIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  Cancel as CancelIcon,\r\n  Warning as WarningIcon,\r\n  AccountBalanceWallet as WalletIcon,\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n} from '@mui/icons-material';\r\nimport theme from '../theme';\r\nimport { animationConfig } from '../theme/animation';\r\nimport PageLayout from '../components/common/PageLayout';\r\n\r\ninterface ChainAddress {\r\n  id: string;\r\n  userId: string;\r\n  username: string;\r\n  chain: string;\r\n  address: string;\r\n  status: 'active' | 'inactive' | 'pending';\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  description: string;\r\n  isDefault: boolean;\r\n}\r\n\r\nconst ChainAddressManager: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const [addresses, setAddresses] = useState<ChainAddress[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [selectedAddress, setSelectedAddress] = useState<ChainAddress | null>(null);\r\n  const [newAddress, setNewAddress] = useState({\r\n    chain: '',\r\n    address: '',\r\n    description: '',\r\n    isDefault: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchAddresses();\r\n  }, []);\r\n\r\n  const fetchAddresses = async () => {\r\n    try {\r\n      // Mock API call\r\n      const mockAddresses: ChainAddress[] = [\r\n        {\r\n          id: '1',\r\n          userId: 'user1',\r\n          username: 'John Doe',\r\n          chain: 'ETH',\r\n          address: '0x1234...5678',\r\n          status: 'active',\r\n          createdAt: '2024-04-23T10:00:00Z',\r\n          updatedAt: '2024-04-23T10:00:00Z',\r\n          description: 'Main Ethereum wallet',\r\n          isDefault: true,\r\n        },\r\n        {\r\n          id: '2',\r\n          userId: 'user2',\r\n          username: 'Jane Smith',\r\n          chain: 'BTC',\r\n          address: 'bc1q...xyz',\r\n          status: 'active',\r\n          createdAt: '2024-04-23T09:00:00Z',\r\n          updatedAt: '2024-04-23T09:00:00Z',\r\n          description: 'Bitcoin wallet',\r\n          isDefault: false,\r\n        },\r\n      ];\r\n      setAddresses(mockAddresses);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: ChainAddress['status']) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return theme.palette.success.main;\r\n      case 'inactive':\r\n        return theme.palette.error.main;\r\n      case 'pending':\r\n        return theme.palette.warning.main;\r\n      default:\r\n        return theme.palette.text.secondary;\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: ChainAddress['status']) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return <CheckCircleIcon />;\r\n      case 'inactive':\r\n        return <CancelIcon />;\r\n      case 'pending':\r\n        return <WarningIcon />;\r\n      default:\r\n        return <WarningIcon />;\r\n    }\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    setSelectedAddress(null);\r\n    setNewAddress({\r\n      chain: '',\r\n      address: '',\r\n      description: '',\r\n      isDefault: false,\r\n    });\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleEdit = (address: ChainAddress) => {\r\n    setSelectedAddress(address);\r\n    setNewAddress({\r\n      chain: address.chain,\r\n      address: address.address,\r\n      description: address.description,\r\n      isDefault: address.isDefault,\r\n    });\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleDelete = async (address: ChainAddress) => {\r\n    // Mock API call\r\n    const updatedAddresses = addresses.filter((a) => a.id !== address.id);\r\n    setAddresses(updatedAddresses);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (selectedAddress) {\r\n      // Update existing address\r\n      const updatedAddresses = addresses.map((address) =>\r\n        address.id === selectedAddress.id\r\n          ? {\r\n              ...address,\r\n              ...newAddress,\r\n              updatedAt: new Date().toISOString(),\r\n            }\r\n          : address\r\n      );\r\n      setAddresses(updatedAddresses);\r\n    } else {\r\n      // Add new address\r\n      const newAddressObj: ChainAddress = {\r\n        id: Date.now().toString(),\r\n        userId: 'user1', // Mock user ID\r\n        username: 'John Doe', // Mock username\r\n        ...newAddress,\r\n        status: 'active',\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n      };\r\n      setAddresses([...addresses, newAddressObj]);\r\n    }\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const renderAddressCard = (address: ChainAddress) => (\r\n    <motion.div\r\n      key={address.id}\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: animationConfig.duration.medium }}\r\n    >\r\n      <Card\r\n        sx={{\r\n          backgroundColor: theme.palette.background.paper,\r\n          boxShadow: theme.shadows[2],\r\n          '&:hover': {\r\n            boxShadow: theme.shadows[4],\r\n          },\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              <Box\r\n                sx={{\r\n                  color: getStatusColor(address.status),\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                {getStatusIcon(address.status)}\r\n              </Box>\r\n              <Typography variant=\"h6\" sx={{ fontWeight: 500 }}>\r\n                {address.username}\r\n              </Typography>\r\n            </Box>\r\n            <Box sx={{ display: 'flex', gap: 1 }}>\r\n              <Tooltip title={t('chainAddress.edit')}>\r\n                <IconButton onClick={() => handleEdit(address)}>\r\n                  <EditIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip title={t('chainAddress.delete')}>\r\n                <IconButton onClick={() => handleDelete(address)}>\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Box>\r\n          </Box>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n            {address.userId}\r\n          </Typography>\r\n          <Divider sx={{ my: 2 }} />\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('chainAddress.chain')}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                {address.chain}\r\n              </Typography>\r\n            </Box>\r\n            <Box>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {t('chainAddress.status')}\r\n              </Typography>\r\n              <Chip\r\n                label={t(`chainAddress.${address.status}`)}\r\n                sx={{\r\n                  bgcolor: `${getStatusColor(address.status)}20`,\r\n                  color: getStatusColor(address.status),\r\n                  fontWeight: 500,\r\n                }}\r\n              />\r\n            </Box>\r\n          </Box>\r\n          <Box sx={{ mb: 2 }}>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {t('chainAddress.address')}\r\n            </Typography>\r\n            <Typography variant=\"body1\" sx={{ fontWeight: 500, wordBreak: 'break-all' }}>\r\n              {address.address}\r\n            </Typography>\r\n          </Box>\r\n          {address.isDefault && (\r\n            <Chip\r\n              label={t('chainAddress.default')}\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              sx={{ mb: 2 }}\r\n            />\r\n          )}\r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n            {address.description}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </motion.div>\r\n  );\r\n\r\n  const renderContent = () => (\r\n    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))', gap: 3 }}>\r\n      {addresses.map(renderAddressCard)}\r\n    </Box>\r\n  );\r\n\r\n  const renderActions = () => (\r\n    <Box sx={{ display: 'flex', gap: 2 }}>\r\n      <Button\r\n        variant=\"contained\"\r\n        startIcon={<AddIcon />}\r\n        onClick={handleAdd}\r\n        sx={{\r\n          background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n          '&:hover': {\r\n            background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n          },\r\n        }}\r\n      >\r\n        {t('chainAddress.add')}\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        startIcon={<RefreshIcon />}\r\n        onClick={fetchAddresses}\r\n        sx={{\r\n          background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n          '&:hover': {\r\n            background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n          },\r\n        }}\r\n      >\r\n        {t('chainAddress.refresh')}\r\n      </Button>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <PageLayout\r\n      title={t('chainAddress.title')}\r\n      actions={renderActions()}\r\n      content={renderContent()}\r\n    >\r\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          {selectedAddress ? t('chainAddress.editAddress') : t('chainAddress.addAddress')}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ mt: 2 }}>\r\n            <FormControl fullWidth sx={{ mb: 2 }}>\r\n              <InputLabel>{t('chainAddress.chain')}</InputLabel>\r\n              <Select\r\n                value={newAddress.chain}\r\n                onChange={(e) => setNewAddress({ ...newAddress, chain: e.target.value })}\r\n                label={t('chainAddress.chain')}\r\n              >\r\n                <MenuItem value=\"ETH\">Ethereum</MenuItem>\r\n                <MenuItem value=\"BTC\">Bitcoin</MenuItem>\r\n                <MenuItem value=\"USDT\">USDT</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              fullWidth\r\n              value={newAddress.address}\r\n              onChange={(e) => setNewAddress({ ...newAddress, address: e.target.value })}\r\n              label={t('chainAddress.address')}\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              rows={3}\r\n              value={newAddress.description}\r\n              onChange={(e) => setNewAddress({ ...newAddress, description: e.target.value })}\r\n              label={t('chainAddress.description')}\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <FormControl fullWidth>\r\n              <InputLabel>{t('chainAddress.isDefault')}</InputLabel>\r\n              <Select\r\n                value={newAddress.isDefault ? 'true' : 'false'}\r\n                onChange={(e) => setNewAddress({ ...newAddress, isDefault: e.target.value === 'true' })}\r\n                label={t('chainAddress.isDefault')}\r\n              >\r\n                <MenuItem value=\"true\">{t('common.yes')}</MenuItem>\r\n                <MenuItem value=\"false\">{t('common.no')}</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => setOpenDialog(false)}\r\n            sx={{\r\n              color: theme.palette.text.secondary,\r\n              '&:hover': {\r\n                backgroundColor: `${theme.palette.text.secondary}10`,\r\n              },\r\n            }}\r\n          >\r\n            {t('common.cancel')}\r\n          </Button>\r\n          <Button\r\n            onClick={handleSave}\r\n            variant=\"contained\"\r\n            sx={{\r\n              background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n              '&:hover': {\r\n                background: `linear-gradient(45deg, ${theme.palette.primary.dark}, ${theme.palette.secondary.dark})`,\r\n              },\r\n            }}\r\n          >\r\n            {t('common.save')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default ChainAddressManager; ","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\ninterface PrivateRouteProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ children }) => {\r\n  const { isAuthenticated, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return null; // 或者返回一个加载组件\r\n  }\r\n\r\n  return isAuthenticated ? <>{children}</> : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute; ","import { BrowserRouter as Router, Routes, Route, Navigate, Outlet } from 'react-router-dom';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport theme from \"./theme\";\r\nimport { AuthProvider } from './contexts/AuthContext';\r\nimport { SnackbarProvider } from './contexts/SnackbarContext';\r\nimport { LoadingProvider } from './contexts/LoadingContext';\r\nimport { ErrorBoundary } from './components/common/ErrorBoundary';\r\nimport Layout from './components/Layout';\r\nimport Login from './pages/Login';\r\nimport NotFound from './pages/NotFound';\r\nimport UserManagement from './pages/UserManagement';\r\nimport OrderManagement from './pages/OrderManagement';\r\nimport CommissionList from './pages/CommissionList';\r\nimport CommissionSettlement from './pages/CommissionSettlement';\r\nimport ProfitList from './pages/ProfitList';\r\nimport WithdrawalReview from './pages/WithdrawalReview';\r\nimport SystemSettings from './pages/SystemSettings';\r\nimport LogManagement from './pages/LogManagement';\r\nimport UserStatusManagement from './pages/UserStatusManagement';\r\nimport ChainAddressManager from './pages/ChainAddressManager';\r\nimport PrivateRoute from './components/common/PrivateRoute';\r\n\r\nfunction App() {\r\n  return (\r\n    <ErrorBoundary>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <SnackbarProvider>\r\n          <LoadingProvider>\r\n            <AuthProvider>\r\n              <Router>\r\n                <Routes>\r\n                  <Route path=\"/login\" element={<Login />} />\r\n                  <Route path=\"/\" element={<PrivateRoute><Layout><Outlet /></Layout></PrivateRoute>}>\r\n                    <Route index element={<Navigate to=\"/users\" replace />} />\r\n                    <Route path=\"users\" element={<UserManagement />} />\r\n                    <Route path=\"orders\" element={<OrderManagement />} />\r\n                    <Route path=\"commissions\" element={<CommissionList />} />\r\n                    <Route path=\"commission-settlement\" element={<CommissionSettlement />} />\r\n                    <Route path=\"profits\" element={<ProfitList />} />\r\n                    <Route path=\"withdrawals\" element={<WithdrawalReview />} />\r\n                    <Route path=\"settings\" element={<SystemSettings />} />\r\n                    <Route path=\"logs\" element={<LogManagement />} />\r\n                    <Route path=\"user-status\" element={<UserStatusManagement />} />\r\n                    <Route path=\"chain-addresses\" element={<ChainAddressManager />} />\r\n                  </Route>\r\n                  <Route path=\"*\" element={<NotFound />} />\r\n                </Routes>\r\n              </Router>\r\n            </AuthProvider>\r\n          </LoadingProvider>\r\n        </SnackbarProvider>\r\n      </ThemeProvider>\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n\r\nexport default App; ","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport enTranslation from './locales/en/translation.json';\r\nimport zhTranslation from './locales/zh/translation.json';\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources: {\r\n      en: {\r\n        translation: enTranslation\r\n      },\r\n      zh: {\r\n        translation: zhTranslation\r\n      }\r\n    },\r\n    fallbackLng: 'zh',\r\n    debug: false,\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n    detection: {\r\n      order: ['querystring', 'cookie', 'localStorage', 'sessionStorage', 'navigator', 'htmlTag'],\r\n      caches: ['localStorage', 'cookie'],\r\n      cookieOptions: {\r\n        sameSite: 'strict'\r\n      }\r\n    },\r\n    react: {\r\n      useSuspense: false\r\n    }\r\n  });\r\n\r\nexport default i18n; ","import { StrictMode } from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport App from './App';\r\nimport './index.css';\r\nimport './i18n'; // Import i18n configuration\r\n\r\nconst container = document.getElementById('root');\r\nif (!container) throw new Error('Failed to find the root element');\r\nconst root = createRoot(container);\r\n\r\nroot.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>\r\n);"],"names":["theme","createTheme","palette","primary","main","light","dark","secondary","background","default","paper","text","card","border","accent","success","warning","error","info","gradient","typography","fontFamily","h1","fontSize","fontWeight","h2","h3","h4","h5","h6","body1","lineHeight","body2","components","MuiButton","styleOverrides","root","textTransform","borderRadius","MuiCard","boxShadow","AuthContext","createContext","undefined","useAuth","context","useContext","Error","AuthProvider","children","isAuthenticated","setIsAuthenticated","useState","user","setUser","loading","setLoading","useEffect","token","localStorage","getItem","userData","JSON","parse","_jsx","Provider","value","login","async","email","password","response","fetch","method","headers","body","stringify","ok","data","json","setItem","logout","removeItem","SnackbarContext","SnackbarProvider","open","setOpen","message","setMessage","severity","setSeverity","handleClose","_jsxs","showMessage","msg","sev","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","sx","width","LoadingContext","LoadingProvider","showLoading","hideLoading","Backdrop","color","zIndex","drawer","CircularProgress","ErrorBoundary","Component","constructor","super","arguments","__publicField","this","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","render","state","Box","display","flexDirection","alignItems","justifyContent","minHeight","p","textAlign","Typography","variant","gutterBottom","paragraph","_a","Button","onClick","window","location","reload","props","AdminNavbar","useTheme","navigate","useNavigate","drawerOpen","setDrawerOpen","languageAnchor","setLanguageAnchor","userAnchor","setUserAnchor","notificationAnchor","setNotificationAnchor","scrolled","setScrolled","t","i18n","useTranslation","navItems","label","path","icon","DashboardIcon","UsersIcon","AnalyticsIcon","SecurityIcon","SettingsIcon","languages","code","name","handleScroll","scrollY","addEventListener","removeEventListener","handleLanguageClick","event","currentTarget","handleLanguageClose","handleUserClick","handleUserClose","handleNotificationClick","handleNotificationClose","toggleDrawer","handleNavigation","handleLogout","Logo","component","motion","div","whileHover","scale","whileTap","cursor","WebkitBackgroundClip","WebkitTextFillColor","UserMenu","Menu","anchorEl","Boolean","transformOrigin","MenuItem","AccountIcon","mr","LogoutIcon","NotificationMenu","ListItemText","DesktopNav","gap","map","item","IconButton","Badge","badgeContent","NotificationsIcon","LanguageIcon","Avatar","height","MobileNav","_Fragment","MenuIcon","Drawer","anchor","PaperProps","maxWidth","bgcolor","List","ListItem","button","AppBar","position","elevation","transition","Container","Toolbar","xs","md","lang","handleLanguageChange","changeLanguage","menuItems","PeopleIcon","AssessmentIcon","HistoryIcon","Sidebar","useLocation","flexShrink","boxSizing","backgroundColor","overflow","mt","pathname","ListItemIcon","Divider","Layout","ThemeProvider","CssBaseline","flexGrow","sm","ml","animationConfig","duration","medium","long","spring","type","stiffness","damping","variants","fadeIn","initial","opacity","animate","Login","formData","setFormData","username","showPassword","setShowPassword","setError","handleInputChange","e","target","prev","name2","y","py","Paper","shadows","mb","content","bottom","left","transform","onSubmit","preventDefault","Promise","resolve","setTimeout","err","TextField","fullWidth","onChange","margin","InputProps","startAdornment","InputAdornment","PersonIcon","borderColor","LockIcon","endAdornment","edge","VisibilityOffIcon","VisibilityIcon","disabled","size","NotFound","delay","ErrorIcon","px","PageLayout","title","actions","filters","gridTemplateColumns","React","Children","child","index","UserList","users","onEdit","onDelete","onViewDetails","searchTerm","setSearchTerm","filteredUsers","filter","toLowerCase","includes","getStatusColor","status","getStatusIcon","VerifiedIcon","WarningIcon","InfoIcon","Card","CardContent","placeholder","SearchIcon","alpha","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","EmailIcon","role","Chip","CalendarIcon","format","Date","createdAt","locale","zhCN","lastLogin","Tooltip","EditIcon","DeleteIcon","_id","UserForm","onCancel","toISOString","avatar","handleSelectChange","x","Grid","container","spacing","required","FormControl","InputLabel","Select","API_URL","import","userLevelService","axios","get","level","post","id","put","deleteLevel","delete","UserLevelManager","levels","setLevels","openDialog","setOpenDialog","editingLevel","setEditingLevel","isAdding","setIsAdding","fetchLevels","getAllLevels","startIcon","AddIcon","handleAdd","description","benefits","requirements","minBalance","minTradingVolume","minHoldingTime","updatedAt","handleEdit","handleDelete","dense","benefit","Dialog","DialogTitle","DialogContent","multiline","rows","Number","newBenefits","DialogActions","newLevel","createLevel","updatedLevel","updateLevel","blacklistService","entry","deleteEntry","query","params","BlacklistManager","entries","setEntries","editingEntry","setEditingEntry","searchQuery","setSearchQuery","fetchEntries","getAllEntries","handleSearch","searchEntries","getTypeColor","userId","reason","onKeyPress","key","BlockIcon","toLocaleString","expiresAt","notes","newEntry","createEntry","updatedEntry","updateEntry","TabPanel","other","hidden","UserManagement","setUsers","selectedUser","setSelectedUser","statusFilter","setStatusFilter","tabValue","setTabValue","fetchUsers","useCallback","matchesSearch","matchesStatus","handleAddUser","Tabs","handleTabChange","newValue","indicatorColor","textColor","Tab","handleDeleteUser","handleViewDetails","updatedUser","updateUser","newUser","now","toString","createUser","handleCancel","instance","create","baseURL","timeout","interceptors","request","use","config","Authorization","reject","href","getOrders","OrderManagement","orders","setOrders","page","setPage","rowsPerPage","setRowsPerPage","typeFilter","setTypeFilter","dialogType","setDialogType","selectedOrder","setSelectedOrder","totalPages","setTotalPages","pageSize","setPageSize","fetchOrders","processedOrders","order","totalAmount","price","amount","Math","ceil","total","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","CheckCircleIcon","CancelIcon","PendingIcon","filteredOrders","matchesType","handleEditOrder","handleDeleteOrder","top","right","ClearIcon","count","length","rotate","RefreshIcon","tradingPair","toFixed","TablePagination","onPageChange","onRowsPerPageChange","CommissionList","commissions","setCommissions","selectedCommission","setSelectedCommission","paymentStatus","setPaymentStatus","paymentNote","setPaymentNote","fetchCommissions","renderCommissionCard","commission","AccountBalanceIcon","my","AttachMoneyIcon","currency","note","updatedCommission","c","handlePayment","CommissionSettlement","settlements","setSettlements","selectedSettlement","setSelectedSettlement","settlementStatus","setSettlementStatus","settlementNote","setSettlementNote","fetchSettlements","renderSettlementCard","settlement","handleSettle","settlementDate","handleSave","updatedSettlements","ProfitList","profits","setProfits","selectedProfit","setSelectedProfit","profitStatus","setProfitStatus","profitNote","setProfitNote","fetchProfits","profitRate","renderProfitCard","profit","handleConfirm","TrendingUpIcon","TrendingDownIcon","updatedProfits","WithdrawalReview","setData","selectedWithdrawal","setSelectedWithdrawal","_loading","_error","reviewStatus","setReviewStatus","reviewReason","setReviewReason","fetchRequests","walletAddress","renderRequestCard","MuiTooltip","handleReview","updatedRequests","SystemSettings","settings","setSettings","selectedSetting","setSelectedSetting","editedValue","setEditedValue","fetchSettings","category","options","getCategoryIcon","StorageIcon","getCategoryColor","renderSettingCard","setting","Switch","checked","renderSettingInput","option","updatedSettings","StyledBox","styled","padding","shape","custom","cardHover","StyledCard","common","white","gradients","marginBottom","LogManagement","logs","setLogs","columns","field","headerName","fetchLogs","getLogs","filteredLogs","log","Object","values","some","DataGrid","rowsPerPageOptions","checkboxSelection","disableSelectionOnClick","borderBottom","borderTop","UserStatusManagement","_searchTerm","_statusFilter","editedStatus","setEditedStatus","loginCount","lastActivity","ipAddress","renderUserCard","updatedUsers","ChainAddressManager","addresses","setAddresses","selectedAddress","setSelectedAddress","newAddress","setNewAddress","chain","address","isDefault","fetchAddresses","renderAddressCard","updatedAddresses","a","wordBreak","newAddressObj","PrivateRoute","Navigate","to","App","Router","Routes","Route","element","Outlet","replace","LanguageDetector","initReactI18next","init","resources","en","translation","enTranslation","zh","zhTranslation","fallbackLng","debug","interpolation","escapeValue","detection","caches","cookieOptions","sameSite","react","useSuspense","document","getElementById","createRoot","StrictMode"],"mappings":"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"}